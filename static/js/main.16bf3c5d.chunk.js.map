{"version":3,"sources":["modals/Menu.js","logic/winningLineMaps.js","logic/lowLevelHelpers.js","logic/connectFourLogic.js","pages/GameBoard.js","modals/NewGameSettingsModal.js","modals/MathQuestionModal.js","logic/questionGenerators/combiningGenerator.js","logic/questionGenerators/multiplyingGenerator.js","logic/questionGenerators/questionGenerator.js","logic/getBotMove.js","theme.js","App.js","hooks.js","reportWebVitals.js","index.js"],"names":["InGameMenu","props","handleNewGameClick","handleUndoClick","React","anchorEl","setAnchorEl","closeMenu","open","Boolean","id","undefined","Button","variant","onClick","event","currentTarget","sx","color","bgcolor","position","top","right","zIndex","padding","minWidth","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Menu","PaperProps","elevation","overflow","filter","mt","width","height","ml","mr","content","display","transform","MenuItem","NewGameButton","handleClick","UndoButton","startIcon","lineToCellsMap","Map","cellToLinesMap","numberOfLines","size","chooseRandomFromArray","array","randomInt","length","min","max","Math","ceil","floor","random","intersect","setOne","setTwo","item","includes","gameIsOver","gameStatus","playerOnesMoves","moveList","cell","turn","playerTwosMoves","getColumnData","columnIndex","data","Array","fill","forEach","move","player","getBoardData","claimStatus","cellId","getLowestUnclaimedCell","lowestUnclaimedRow","indexOf","nextPlayerColor","getGameStatus","lastPlayerToMove","lastPlayersMoves","lastMoveMade","Number","slice","linesAffectedByLastMove","get","i","line","cellIsUnclaimed","squarePercentage","heightOfSixSquares","chipSizeRelativeToSquare","rowNumbers","columnNumbers","GameBoard","handleColumnClick","getColumnChipColors","chipColors","turnNumber","boardChipColors","Container","disableGutters","flexDirection","alignItems","InfoHeaderRow","map","Column","index","RoundedBoardFrame","message","Box","left","justifyContent","Zoom","in","style","transitionDelay","Typography","align","boxSizing","border","borderColor","borderRadius","borderTop","columnLetter","backgroundColor","HoverChipArea","ChipContainer","ColumnOfSquaresWithHoles","Chip","claimed","Slide","direction","fontSize","SquareWithHole","boxShadow","Transition","forwardRef","ref","NewGameSettingsModal","boardSideLength","startNewGame","cancelNewGame","opponent","mathTopics","difficultyMode","toggleCombine","toggleMultiply","selectOpponent","selectDifficulty","noneSelectedError","Object","values","v","Dialog","TransitionComponent","fullWidth","maxWidth","minHeight","justifySelf","alignSelf","px","py","OpponentSelector","MathTopicSelector","DifficultyModeSelector","StartAndCancelButtons","Grid","container","spacing","p","xs","PlayVsHumanButton","PlayVsBotButton","IconButton","icon","faUserFriends","faRobot","gutterBottom","CombineButton","MultiplyButton","selected","combine","children","multiply","DifficultyModeButton","mode","mb","pt","pr","CancelButton","StartGameButton","disabled","m","MathQuestionModal","question","headerText","handleAnswerSubmit","correctAnswer","equationString","inputType","disableEscapeKeyDown","onBackdropClick","margin","HeaderText","QuestionEquation","AnswerInputComponent","flexFlow","fontStyle","useState","playersAnswer","setPlayersAnswer","answerIsNum","test","error","handlePlayersAnswerChange","updatedAnswer","target","value","trim","NumericalTextInput","handleSubmitButtonClick","CompareButtons","FormControl","InputLabel","OutlinedInput","label","autoFocus","autoComplete","type","pattern","onChange","inputProps","onKeyDown","key","SubmitButton","lineHeight","console","missingSumInstructions","missingDifferenceInstructions","missingAddendInstructions","howFarApartInstructions","missingSumTwo","difficulty","vars","a","b","c","instructions","missingSumThree","d","missingDifference","missingAddendTwo","missingAddendThree","howFarApart","abs","doubleTripleQuadruple","dtqInstructions","mediumFactor","missingProductInstructions","missingFactorInstructions","missingProductTwo","missingProductThree","missingFactorTwo","missingFactorThree","halfThirdQuarter","generatorFuntions","assert","log","getBotMove","wins","botsMoves","lineId","cellsInLine","concat","getWinningMovesForBot","blocks","threats","humansMoves","getDefensiveMovesForBot","legalMoves","moves","col","push","getLegalMoves","winningMoves","blockingMoves","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","text","hint","action","disabledBackground","disabledOpacity","board","chip","playerOne","playerTwo","unclaimed","background","white","transparent","selectedButton","unselectedButton","components","MuiPaper","styleOverrides","root","typography","h1","h2","h3","button","fontWeight","status","shape","transitions","easing","bounce","parabolicAcceleration","responsiveFontSizes","factor","App","setOpponent","setMathTopics","setDifficultyMode","setMoveList","setGameStatus","openModal","setOpenModal","activeCell","setActiveCell","testQuestion","setQuestion","setHeaderText","waysToSayCorrect","window","innerHeight","screenHeight","setScreenHeight","useEffect","handleScreenSizeChange","addEventListener","removeEventListener","useScreenHeight","innerWidth","screenWidth","setScreenWidth","useScreenWidth","Fragment","CssBaseline","ThemeProvider","shortenedMoveList","JSON","stringify","prev","answerIsCorrect","answerFeedbackHeaderText","moveToAdd","updatedMoveList","updatedGameStatus","setTimeout","botMove","moveListAfterBot","gameStatusAfterBot","lowestUnclaimedCell","score","nextPlayersMoves","determineDifficulty","mathTopicsArray","entries","entry","topic","Promise","resolve","reject","generateQuestion","then","newQuestion","openMathQuestionModal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAWO,SAASA,EAAWC,GACvB,IAAMC,EAAwCD,EAAxCC,mBAAoBC,EAAoBF,EAApBE,gBAE1B,EAAgCC,WAAe,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAKMC,EAAY,WACdD,EAAY,OAEVE,EAAOC,QAAQJ,GACfK,EAAKF,EAAO,sBAAmBG,EAErC,OACI,eAAC,WAAD,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OACZ,mBAAkBH,EAClBI,QAbK,SAACC,GACdT,EAAYS,EAAMC,gBAaVC,GAAI,CACAC,MAAO,eACPC,QAAS,aACTC,SAAU,WACVC,IAAK,KACLC,MAAO,KACPC,OAAQ,KACRC,QAAS,EACTC,SAAU,QAXlB,SAcI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CACIhB,GAAIA,EACJF,KAAMA,EACNH,SAAUA,EACVsB,QAASpB,EACTqB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAXpB,SAcI,eAACE,EAAA,EAAD,CACI3B,SAAUA,EACVG,KAAMA,EACNmB,QAASpB,EACTO,QAASP,EACT0B,WAAY,CACRC,UAAW,EACXjB,GAAI,CACAkB,SAAU,UACVC,OAAQ,4CACRC,GAAI,IACJ,oBAAqB,CACjBC,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLC,GAAI,GAER,WAAY,CACRC,QAAS,KACTC,QAAS,QACTvB,SAAU,WACVC,IAAK,EACLC,MAAO,GACPgB,MAAO,GACPC,OAAQ,GACRpB,QAAS,mBACTyB,UAAW,iCACXrB,OAAQ,KAIpBQ,gBAAiB,CAAED,WAAY,QAASD,SAAU,OAClDD,aAAc,CAAEE,WAAY,QAASD,SAAU,UAhCnD,UAkCI,cAACgB,EAAA,EAAD,UACI,cAACC,EAAD,CACIC,YAAa7C,MAGrB,cAAC2C,EAAA,EAAD,UACI,cAACG,EAAD,CACID,YAAa5C,cAUzC,SAAS2C,EAAc7C,GACnB,IAAM8C,EAAgB9C,EAAhB8C,YACN,OACI,cAACnC,EAAA,EAAD,CACIC,QAAQ,WACRoC,UAAW,cAAC,IAAD,IACXnC,QAAS,kBAAMiC,KACf9B,GAAI,CACAqB,MAAO,QALf,yBAaR,SAASU,EAAW/C,GAChB,IAAM8C,EAAgB9C,EAAhB8C,YACN,OACI,cAACnC,EAAA,EAAD,CACIC,QAAQ,WACRoC,UAAW,cAAC,IAAD,IACXnC,QAAS,kBAAMiC,KACf9B,GAAI,CACAqB,MAAO,QALf,0BC1GR,IA+mBaY,EAAiB,IAAIC,IA/mBT,CACrB,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,EACA,IAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,EACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,EACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,OA8eCC,EAAiB,IAAID,IAxeT,CACrB,CACI,EACA,CACI,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,OAOCE,EAAgBH,EAAeI,KC/mCrC,SAASC,EAAsBC,GAIlC,OAFaA,EADKC,EAAU,EAAGD,EAAME,SAMlC,SAASD,EAAUE,EAAKC,GAG3B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAM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","file":"static/js/main.16bf3c5d.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Popover, Button, Menu, MenuItem, } from '@material-ui/core'\r\n\r\n// Icons\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import PersonAdd from '@material-ui/icons/PersonAdd';\r\n// import Settings from '@material-ui/icons/Settings';\r\n// import Logout from '@material-ui/icons/Logout';\r\n\r\nexport function InGameMenu(props) {\r\n    let { handleNewGameClick, handleUndoClick } = props\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const openMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const closeMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl)   // Is open if anchor element set.\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"text\"\r\n                aria-describedby={id} \r\n                onClick={openMenu}\r\n                sx={{\r\n                    color: 'common.black',\r\n                    bgcolor: 'background',\r\n                    position: 'absolute',\r\n                    top: '1%',\r\n                    right: '1%',\r\n                    zIndex: 9999,\r\n                    padding: 0,\r\n                    minWidth: '10px',\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={closeMenu}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{ \r\n                    vertical: 'top', \r\n                    horizontal: 'right', \r\n                }}\r\n            >\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={closeMenu}\r\n                    onClick={closeMenu}\r\n                    PaperProps={{\r\n                        elevation: 0,\r\n                        sx: {\r\n                            overflow: 'visible',\r\n                            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                            mt: 1.5,\r\n                            '& .MuiAvatar-root': {\r\n                                width: 32,\r\n                                height: 32,\r\n                                ml: -0.5,\r\n                                mr: 1,\r\n                            },\r\n                            '&:before': {\r\n                                content: '\"\"',\r\n                                display: 'block',\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 14,\r\n                                width: 10,\r\n                                height: 10,\r\n                                bgcolor: 'background.paper',\r\n                                transform: 'translateY(-50%) rotate(45deg)',\r\n                                zIndex: 0,\r\n                            },\r\n                        },\r\n                    }}\r\n                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                >\r\n                    <MenuItem>\r\n                        <NewGameButton \r\n                            handleClick={handleNewGameClick}\r\n                        />\r\n                    </MenuItem>\r\n                    <MenuItem>\r\n                        <UndoButton \r\n                            handleClick={handleUndoClick}\r\n                        />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </Popover>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction NewGameButton(props) {\r\n    let { handleClick } = props\r\n    return (\r\n        <Button\r\n            variant=\"outlined\"\r\n            startIcon={<ReplayIcon />}\r\n            onClick={() => handleClick()}\r\n            sx={{\r\n                width: '100%'\r\n            }}\r\n        >\r\n            New&nbsp;Game\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction UndoButton(props) {\r\n    let { handleClick } = props\r\n    return (\r\n        <Button\r\n            variant=\"outlined\"\r\n            startIcon={<UndoIcon />}\r\n            onClick={() => handleClick()}\r\n            sx={{\r\n                width: '100%'\r\n            }}\r\n        >\r\n            Undo&nbsp;Move\r\n        </Button>\r\n    )\r\n}","// A \"line\" is a set of four cellIds that together form a win.\r\n// There are four 'types' of Line: 'vertical', 'horizontal', 'upslash', 'downslash'\r\n// There are 64 lines and 42 cells. \r\n// This module exports two high-level constants that map these two types of id to one another.\r\n// 1) lineIdToCellIdsMap  could be renamed \"cellsInLine\". It takes a lineId 0-63 and gives back the four cells in it.\r\n// 2) cellIdToLineIdsMap  could be renamed \"linesThatIncludeCell\". It takes a cellId 0-41 and gives back the 3 to 13 lines that cell is part of.\r\n\r\n// Low-level Constants\r\n// const cellsPerCol = 6;\r\n// const cellsPerRow = 7;\r\n// const totalCells = cellsPerCol * cellsPerRow;\r\n// const linesPerCol = (cellsPerCol >= 4) ? (cellsPerCol - 3) : 0;\r\n// const linesPerRow = (cellsPerRow >= 4) ? (cellsPerRow - 3) : 0;\r\n// const numberOfVerticalLines = linesPerCol * cellsPerRow;\r\n// const numberOfHorizontalLines = linesPerRow * cellsPerCol;\r\n// const numberOfUpslashLines = linesPerCol * linesPerRow;\r\n// const numberOfDownslashLines = linesPerCol * linesPerRow;\r\n\r\n\r\n\r\n\r\nconst lineToCellsArray = [\r\n    [\r\n        0,\r\n        [\r\n            0,\r\n            7,\r\n            14,\r\n            21\r\n        ]\r\n    ],\r\n    [\r\n        1,\r\n        [\r\n            0,\r\n            1,\r\n            2,\r\n            3\r\n        ]\r\n    ],\r\n    [\r\n        2,\r\n        [\r\n            0,\r\n            8,\r\n            16,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        3,\r\n        [\r\n            1,\r\n            8,\r\n            15,\r\n            22\r\n        ]\r\n    ],\r\n    [\r\n        4,\r\n        [\r\n            1,\r\n            2,\r\n            3,\r\n            4\r\n        ]\r\n    ],\r\n    [\r\n        5,\r\n        [\r\n            1,\r\n            9,\r\n            17,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        6,\r\n        [\r\n            2,\r\n            9,\r\n            16,\r\n            23\r\n        ]\r\n    ],\r\n    [\r\n        7,\r\n        [\r\n            2,\r\n            3,\r\n            4,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        8,\r\n        [\r\n            2,\r\n            10,\r\n            18,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        9,\r\n        [\r\n            3,\r\n            10,\r\n            17,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        10,\r\n        [\r\n            3,\r\n            4,\r\n            5,\r\n            6\r\n        ]\r\n    ],\r\n    [\r\n        11,\r\n        [\r\n            3,\r\n            11,\r\n            19,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        12,\r\n        [\r\n            4,\r\n            11,\r\n            18,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        13,\r\n        [\r\n            5,\r\n            12,\r\n            19,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        14,\r\n        [\r\n            6,\r\n            13,\r\n            20,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        15,\r\n        [\r\n            7,\r\n            14,\r\n            21,\r\n            28\r\n        ]\r\n    ],\r\n    [\r\n        16,\r\n        [\r\n            7,\r\n            8,\r\n            9,\r\n            10\r\n        ]\r\n    ],\r\n    [\r\n        17,\r\n        [\r\n            7,\r\n            15,\r\n            23,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        18,\r\n        [\r\n            8,\r\n            15,\r\n            22,\r\n            29\r\n        ]\r\n    ],\r\n    [\r\n        19,\r\n        [\r\n            8,\r\n            9,\r\n            10,\r\n            11\r\n        ]\r\n    ],\r\n    [\r\n        20,\r\n        [\r\n            8,\r\n            16,\r\n            24,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        21,\r\n        [\r\n            9,\r\n            16,\r\n            23,\r\n            30\r\n        ]\r\n    ],\r\n    [\r\n        22,\r\n        [\r\n            9,\r\n            10,\r\n            11,\r\n            12\r\n        ]\r\n    ],\r\n    [\r\n        23,\r\n        [\r\n            9,\r\n            17,\r\n            25,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        24,\r\n        [\r\n            10,\r\n            17,\r\n            24,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        25,\r\n        [\r\n            10,\r\n            11,\r\n            12,\r\n            13\r\n        ]\r\n    ],\r\n    [\r\n        26,\r\n        [\r\n            10,\r\n            18,\r\n            26,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        27,\r\n        [\r\n            11,\r\n            18,\r\n            25,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        28,\r\n        [\r\n            12,\r\n            19,\r\n            26,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        29,\r\n        [\r\n            13,\r\n            20,\r\n            27,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        30,\r\n        [\r\n            14,\r\n            21,\r\n            28,\r\n            35\r\n        ]\r\n    ],\r\n    [\r\n        31,\r\n        [\r\n            14,\r\n            15,\r\n            16,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        32,\r\n        [\r\n            14,\r\n            22,\r\n            30,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        33,\r\n        [\r\n            15,\r\n            22,\r\n            29,\r\n            36\r\n        ]\r\n    ],\r\n    [\r\n        34,\r\n        [\r\n            15,\r\n            16,\r\n            17,\r\n            18\r\n        ]\r\n    ],\r\n    [\r\n        35,\r\n        [\r\n            15,\r\n            23,\r\n            31,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        36,\r\n        [\r\n            16,\r\n            23,\r\n            30,\r\n            37\r\n        ]\r\n    ],\r\n    [\r\n        37,\r\n        [\r\n            16,\r\n            17,\r\n            18,\r\n            19\r\n        ]\r\n    ],\r\n    [\r\n        38,\r\n        [\r\n            16,\r\n            24,\r\n            32,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        39,\r\n        [\r\n            17,\r\n            24,\r\n            31,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        40,\r\n        [\r\n            17,\r\n            18,\r\n            19,\r\n            20\r\n        ]\r\n    ],\r\n    [\r\n        41,\r\n        [\r\n            17,\r\n            25,\r\n            33,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        42,\r\n        [\r\n            18,\r\n            25,\r\n            32,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        43,\r\n        [\r\n            19,\r\n            26,\r\n            33,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        44,\r\n        [\r\n            20,\r\n            27,\r\n            34,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        45,\r\n        [\r\n            21,\r\n            22,\r\n            23,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        46,\r\n        [\r\n            21,\r\n            15,\r\n            9,\r\n            3\r\n        ]\r\n    ],\r\n    [\r\n        47,\r\n        [\r\n            22,\r\n            23,\r\n            24,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        48,\r\n        [\r\n            22,\r\n            16,\r\n            10,\r\n            4\r\n        ]\r\n    ],\r\n    [\r\n        49,\r\n        [\r\n            23,\r\n            24,\r\n            25,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        50,\r\n        [\r\n            23,\r\n            17,\r\n            11,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        51,\r\n        [\r\n            24,\r\n            25,\r\n            26,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        52,\r\n        [\r\n            24,\r\n            18,\r\n            12,\r\n            6\r\n        ]\r\n    ],\r\n    [\r\n        53,\r\n        [\r\n            28,\r\n            29,\r\n            30,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        54,\r\n        [\r\n            28,\r\n            22,\r\n            16,\r\n            10\r\n        ]\r\n    ],\r\n    [\r\n        55,\r\n        [\r\n            29,\r\n            30,\r\n            31,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        56,\r\n        [\r\n            29,\r\n            23,\r\n            17,\r\n            11\r\n        ]\r\n    ],\r\n    [\r\n        57,\r\n        [\r\n            30,\r\n            31,\r\n            32,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        58,\r\n        [\r\n            30,\r\n            24,\r\n            18,\r\n            12\r\n        ]\r\n    ],\r\n    [\r\n        59,\r\n        [\r\n            31,\r\n            32,\r\n            33,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        60,\r\n        [\r\n            31,\r\n            25,\r\n            19,\r\n            13\r\n        ]\r\n    ],\r\n    [\r\n        61,\r\n        [\r\n            35,\r\n            36,\r\n            37,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        62,\r\n        [\r\n            35,\r\n            29,\r\n            23,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        63,\r\n        [\r\n            36,\r\n            37,\r\n            38,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        64,\r\n        [\r\n            36,\r\n            30,\r\n            24,\r\n            18\r\n        ]\r\n    ],\r\n    [\r\n        65,\r\n        [\r\n            37,\r\n            38,\r\n            39,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        66,\r\n        [\r\n            37,\r\n            31,\r\n            25,\r\n            19\r\n        ]\r\n    ],\r\n    [\r\n        67,\r\n        [\r\n            38,\r\n            39,\r\n            40,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        68,\r\n        [\r\n            38,\r\n            32,\r\n            26,\r\n            20\r\n        ]\r\n    ]\r\n]\r\nexport const lineToCellsMap = new Map(lineToCellsArray)\r\n\r\nconst cellToLinesArray = [\r\n    [\r\n        0,\r\n        [\r\n            0,\r\n            1,\r\n            2\r\n        ]\r\n    ],\r\n    [\r\n        1,\r\n        [\r\n            1,\r\n            3,\r\n            4,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        2,\r\n        [\r\n            1,\r\n            4,\r\n            6,\r\n            7,\r\n            8\r\n        ]\r\n    ],\r\n    [\r\n        3,\r\n        [\r\n            1,\r\n            4,\r\n            7,\r\n            9,\r\n            10,\r\n            11,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        4,\r\n        [\r\n            4,\r\n            7,\r\n            10,\r\n            12,\r\n            48\r\n        ]\r\n    ],\r\n    [\r\n        5,\r\n        [\r\n            7,\r\n            10,\r\n            13,\r\n            50\r\n        ]\r\n    ],\r\n    [\r\n        6,\r\n        [\r\n            10,\r\n            14,\r\n            52\r\n        ]\r\n    ],\r\n    [\r\n        7,\r\n        [\r\n            0,\r\n            15,\r\n            16,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        8,\r\n        [\r\n            2,\r\n            3,\r\n            16,\r\n            18,\r\n            19,\r\n            20\r\n        ]\r\n    ],\r\n    [\r\n        9,\r\n        [\r\n            5,\r\n            6,\r\n            16,\r\n            19,\r\n            21,\r\n            22,\r\n            23,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        10,\r\n        [\r\n            8,\r\n            9,\r\n            16,\r\n            19,\r\n            22,\r\n            24,\r\n            25,\r\n            26,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        11,\r\n        [\r\n            11,\r\n            12,\r\n            19,\r\n            22,\r\n            25,\r\n            27,\r\n            50,\r\n            56\r\n        ]\r\n    ],\r\n    [\r\n        12,\r\n        [\r\n            13,\r\n            22,\r\n            25,\r\n            28,\r\n            52,\r\n            58\r\n        ]\r\n    ],\r\n    [\r\n        13,\r\n        [\r\n            14,\r\n            25,\r\n            29,\r\n            60\r\n        ]\r\n    ],\r\n    [\r\n        14,\r\n        [\r\n            0,\r\n            15,\r\n            30,\r\n            31,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        15,\r\n        [\r\n            3,\r\n            17,\r\n            18,\r\n            31,\r\n            33,\r\n            34,\r\n            35,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        16,\r\n        [\r\n            2,\r\n            6,\r\n            20,\r\n            21,\r\n            31,\r\n            34,\r\n            36,\r\n            37,\r\n            38,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        17,\r\n        [\r\n            5,\r\n            9,\r\n            23,\r\n            24,\r\n            31,\r\n            34,\r\n            37,\r\n            39,\r\n            40,\r\n            41,\r\n            50,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        18,\r\n        [\r\n            8,\r\n            12,\r\n            26,\r\n            27,\r\n            34,\r\n            37,\r\n            40,\r\n            42,\r\n            52,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        19,\r\n        [\r\n            11,\r\n            13,\r\n            28,\r\n            37,\r\n            40,\r\n            43,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        20,\r\n        [\r\n            14,\r\n            29,\r\n            40,\r\n            44,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        21,\r\n        [\r\n            0,\r\n            15,\r\n            30,\r\n            45,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        22,\r\n        [\r\n            3,\r\n            18,\r\n            32,\r\n            33,\r\n            45,\r\n            47,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        23,\r\n        [\r\n            6,\r\n            17,\r\n            21,\r\n            35,\r\n            36,\r\n            45,\r\n            47,\r\n            49,\r\n            50,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        24,\r\n        [\r\n            2,\r\n            9,\r\n            20,\r\n            24,\r\n            38,\r\n            39,\r\n            45,\r\n            47,\r\n            49,\r\n            51,\r\n            52,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        25,\r\n        [\r\n            5,\r\n            12,\r\n            23,\r\n            27,\r\n            41,\r\n            42,\r\n            47,\r\n            49,\r\n            51,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        26,\r\n        [\r\n            8,\r\n            13,\r\n            26,\r\n            28,\r\n            43,\r\n            49,\r\n            51,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        27,\r\n        [\r\n            11,\r\n            14,\r\n            29,\r\n            44,\r\n            51\r\n        ]\r\n    ],\r\n    [\r\n        28,\r\n        [\r\n            15,\r\n            30,\r\n            53,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        29,\r\n        [\r\n            18,\r\n            33,\r\n            53,\r\n            55,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        30,\r\n        [\r\n            21,\r\n            32,\r\n            36,\r\n            53,\r\n            55,\r\n            57,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        31,\r\n        [\r\n            17,\r\n            24,\r\n            35,\r\n            39,\r\n            53,\r\n            55,\r\n            57,\r\n            59,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        32,\r\n        [\r\n            20,\r\n            27,\r\n            38,\r\n            42,\r\n            55,\r\n            57,\r\n            59,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        33,\r\n        [\r\n            23,\r\n            28,\r\n            41,\r\n            43,\r\n            57,\r\n            59\r\n        ]\r\n    ],\r\n    [\r\n        34,\r\n        [\r\n            26,\r\n            29,\r\n            44,\r\n            59\r\n        ]\r\n    ],\r\n    [\r\n        35,\r\n        [\r\n            30,\r\n            61,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        36,\r\n        [\r\n            33,\r\n            61,\r\n            63,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        37,\r\n        [\r\n            36,\r\n            61,\r\n            63,\r\n            65,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        38,\r\n        [\r\n            32,\r\n            39,\r\n            61,\r\n            63,\r\n            65,\r\n            67,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        39,\r\n        [\r\n            35,\r\n            42,\r\n            63,\r\n            65,\r\n            67\r\n        ]\r\n    ],\r\n    [\r\n        40,\r\n        [\r\n            38,\r\n            43,\r\n            65,\r\n            67\r\n        ]\r\n    ],\r\n    [\r\n        41,\r\n        [\r\n            41,\r\n            44,\r\n            67\r\n        ]\r\n    ]\r\n]\r\nexport const cellToLinesMap = new Map(cellToLinesArray)\r\n\r\n\r\nexport const numberOfLines = lineToCellsMap.size\r\n\r\n// These were used once in development and do not need to be run again. It is easier on the client device to just send the copied in hard coded Maps\r\n// export const lineToCellsMap = generateLineToCellsMap()\r\n// export const numberOfLines = lineToCellsMap.size\r\n// function generateLineToCellsMap() {\r\n//     console.warn(`generateLineToCellsMap was called.  This compute heavy function should only run once per game.`)\r\n//     let map = new Map()\r\n//     let currentLineId = 0\r\n//     for (let cell = 0; cell < totalCells; cell++) {\r\n//         if (isStartOfVerticalLine(cell)) {\r\n//             let line = verticalLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//         if (isStartOfHorizontalLine(cell)) {\r\n//             let line = horizontalLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//         if (isStartOfUpslashLine(cell)) {\r\n//             let line = upslashLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//         if (isStartOfDownslashLine(cell)) {\r\n//             let line = downslashLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//     }\r\n//     console.log(`Mapped each of the ${map.size} LineIds to the set of Cells in it.`)\r\n//     console.log([...map.entries()])\r\n//     return map\r\n// }\r\n// function verticalLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId + (0 * cellsPerRow),\r\n//         cellId + (1 * cellsPerRow),\r\n//         cellId + (2 * cellsPerRow),\r\n//         cellId + (3 * cellsPerRow)\r\n//     ]\r\n//     return line\r\n// }\r\n// function horizontalLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId + 0,\r\n//         cellId + 1,\r\n//         cellId + 2,\r\n//         cellId + 3\r\n//     ]\r\n//     return line\r\n// }\r\n// function upslashLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId + (0 * cellsPerRow) + 0,\r\n//         cellId + (1 * cellsPerRow) + 1,\r\n//         cellId + (2 * cellsPerRow) + 2,\r\n//         cellId + (3 * cellsPerRow) + 3\r\n//     ]\r\n//     return line\r\n// }\r\n// function downslashLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId - (0 * cellsPerRow) + 0,\r\n//         cellId - (1 * cellsPerRow) + 1,\r\n//         cellId - (2 * cellsPerRow) + 2,\r\n//         cellId - (3 * cellsPerRow) + 3\r\n//     ]\r\n//     return line\r\n// }\r\n\r\n\r\n// export const cellToLinesMap = generateCellToLinesMap()\r\n\r\n// function generateCellToLinesMap() {\r\n//     console.warn(`cellToLinesMap was called.  This is a compute heavy function which should run once per game.`)\r\n//     let cellToLinesMap = new Map()\r\n//     for (let cell = 0; cell < totalCells; cell++) {\r\n//         cellToLinesMap.set(cell, [])\r\n//     }\r\n//     for (let lineId = 0; lineId < numberOfLines; lineId++) {\r\n//         let cellsInLine = lineToCellsMap.get(lineId)\r\n//         cellsInLine.forEach(cell => {\r\n//             let prevLinesList = cellToLinesMap.get(cell)\r\n//             cellToLinesMap.set(cell, prevLinesList.concat(lineId))\r\n//         })\r\n//     }\r\n//     console.log(`Mapped each of the ${totalCells} CellIds to the set of all Lines that include it.`)\r\n//     console.log([...cellToLinesMap.entries()])\r\n\r\n//     // cellsToLinesMap.forEach(logMapElement);\r\n//     return cellToLinesMap\r\n// }\r\n\r\n// FIRST level BOOLEAN LINE helpers             // Currently there is only a Cell.js functional Component, however if I defined a Cell Class I would think that I could turn these functions that take cellId as a parameter and turn them into something that 'reads better' like Cell.isStartOfVerticalLine() written on the Cell object so that it has built in access to the relevant cellId and can be used in a no-parameter fashion. ??? \r\n// function isStartOfVerticalLine(cellId) {\r\n//     const rowNumber = getRowByCellId(cellId)\r\n//     return (cellsPerCol - rowNumber >= 4)\r\n// }\r\n// function isEndOfVerticalLine(cellId) {\r\n//     const rowNumber = getRowByCellId(cellId)\r\n//     return (rowNumber >= 3)\r\n// }\r\n// function isStartOfHorizontalLine(cellId) {\r\n//     // If we are in the 0-th row then the minimum cellsPerCol that should return true is 4\r\n//     const colNumber = getColByCellId(cellId)\r\n//     return (cellsPerRow - colNumber >= 4)\r\n// }\r\n// function isStartOfUpslashLine(cellId) {\r\n//     // A cell is the Start Of an Upslash Line IFF it is BOTH the \"start\" of a vertical line AND the \"start\" of a horizontal line.  \r\n//     return (isStartOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\r\n// }\r\n// function isStartOfDownslashLine(cellId) {\r\n//     // A cell is the Start Of an Downslash Line IFF it is BOTH the \"end\" of a vertical line AND the \"start\" of a horizontal line.  \r\n//     return (isEndOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\r\n// }\r\n\r\n// LOWEST LEVEL CELL-ROW-COL HELPERS\r\n// function getRowByCellId(id) {\r\n//     return (Math.floor(id / cellsPerRow))\r\n// }\r\n// function getColByCellId(id) {\r\n//     return (id % cellsPerRow)\r\n// }\r\n// function getCellIdByRowCol(row, col) {\r\n//     return (row * cellsPerRow + col);\r\n// }\r\n\r\n","\r\n\r\nexport function chooseRandomFromArray(array) {\r\n    let randomIndex = randomInt(0, array.length)\r\n    let choice = array[randomIndex]\r\n    // console.log(`CHOICE: ${choice}`);\r\n    return choice\r\n}\r\n\r\nexport function randomInt(min, max) { //The maximum is exclusive and the minimum is inclusive\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n\r\n\r\n\r\nexport function weightedChoice(choicePercents, arrayToChooseFrom) {\r\n    let randomIndex = randomInt(0, arrayToChooseFrom.length)\r\n    let choice = arrayToChooseFrom[randomIndex]\r\n    // console.log(`CHOICE: ${choice}`);\r\n    return choice\r\n}\r\n\r\n// This function could be made more efficient through using sorted arrays and pointers that \r\n// enabled us to not re-scan the leading portion of setTwo when we know we are looking for a \r\n// higher number it only makes sense to look in higher indices. Besides that, early returns \r\n// could be added in case the lowest or highest numbers in setOne fall outside the range of \r\n// setTwo. This intersect is being made with setOne.length === 4 (cells in line) and a \r\n// potentially much longer setTwo (player's numbers)\r\nexport function intersect(setOne, setTwo) {\r\n    return setOne.filter(item => setTwo.includes(item))\r\n}","// MY Logical components\r\nimport { lineToCellsMap, cellToLinesMap } from './winningLineMaps'\r\nimport { intersect } from \"./lowLevelHelpers\";\r\n\r\nexport function gameIsOver(gameStatus) {\r\n    return (gameStatus === 'playerOneWins' || gameStatus === 'playerTwoWins' || gameStatus === 'gameDrawn')\r\n}\r\n\r\n\r\n\r\nexport function playerOnesMoves(moveList) {\r\n    return moveList.filter((cell, turn) => turn % 2 === 0).filter(cell => cell !== -1)\r\n}\r\nexport function playerTwosMoves(moveList) {\r\n    return moveList.filter((cell, turn) => turn % 2 === 1).filter(cell => cell !== -1)\r\n}\r\n\r\nexport function getBoardData(moveList) {\r\n    let data = new Array(42).fill(\"unclaimed\")\r\n    moveList.forEach((move, turn) => {\r\n        if (move !== -1) {\r\n            let player = turn % 2 === 0 ? \"playerOne\" : \"playerTwo\"\r\n            data[move] = player\r\n        }\r\n    })\r\n    return data\r\n}\r\n// const boardData = getBoardData(moveList)  I don't like that getColumnData is called 7 times and each time it calls getBoardData rather than caching this result and reusing it, updating it automatically only when the moveList updates. useEffect could help?\r\nfunction getColumnData(columnIndex, moveList) {\r\n    let boardData = getBoardData(moveList)\r\n    return boardData.filter((claimStatus, cellId) => cellId % 7 === columnIndex)\r\n}\r\n\r\nexport function getLowestUnclaimedCell(columnIndex, moveList) {\r\n    let columnData = getColumnData(columnIndex, moveList)\r\n    let lowestUnclaimedRow = columnData.indexOf(\"unclaimed\")\r\n    let lowestUnclaimedCell = (lowestUnclaimedRow === -1) ? -1 : (lowestUnclaimedRow * 7 + columnIndex)\r\n    // console.log(`lowestUnclaimedCell in col ${columnIndex} is cell \"${lowestUnclaimedCell}\"`);\r\n    return lowestUnclaimedCell\r\n}\r\n\r\n\r\nexport function nextPlayer(gameStatus) {\r\n    if (gameIsOver(gameStatus)) {\r\n        console.error(`Do not call nextPlayer() when the game is over.`);\r\n    }\r\n    return (gameStatus === \"playerOnesTurn\") ? \"playerOne\" : \"playerTwo\"\r\n} \r\nexport function nextPlayersMoves(gameStatus, moveList) {\r\n    if (gameIsOver(gameStatus)) {\r\n        console.error(`Do not call nextPlayersMoves() when the game is over.`);\r\n    }\r\n    return (gameStatus === \"playerOnesTurn\") ? playerOnesMoves(moveList) : playerTwosMoves(moveList)\r\n}\r\nexport function nextPlayerColor(gameStatus) {\r\n    return gameIsOver(gameStatus) ? \"unclaimed\" : (gameStatus === \"playerOnesTurn\") ? \"playerOne\" : \"playerTwo\"\r\n}\r\n\r\n// function getLastChipDropped(moveList) {\r\n//     let ml = moveList.slice()\r\n//     let lastCellId\r\n//     do {\r\n//         lastCellId = ml.pop()\r\n//     } while (lastCellId === -1)\r\n//     return lastCellId\r\n// }\r\n\r\n// Returns ENUM: 'playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw'\r\n// This function efficiently checks to see if the last move created a win for the player who made it.\r\nexport function getGameStatus(moveList) {\r\n    let lastPlayerToMove = (moveList.length % 2 === 1) ? \"playerOne\" : \"playerTwo\"\r\n    let lastPlayersMoves = (lastPlayerToMove === \"playerOne\") ? playerOnesMoves(moveList) : playerTwosMoves(moveList)\r\n    let lastMoveMade = Number(lastPlayersMoves.slice(-1))\r\n    let linesAffectedByLastMove = cellToLinesMap.get(lastMoveMade)\r\n    for (let i = 0; i < linesAffectedByLastMove.length; i++) {\r\n        let line = linesAffectedByLastMove[i]\r\n        let cellsInLine = lineToCellsMap.get(line)\r\n        // For added efficiency I could at this point remove the lastMoveMade from cells in line and in the next line look for intersections of length 3.\r\n        if (intersect(cellsInLine, lastPlayersMoves).length === 4) {\r\n            return (lastPlayerToMove === 'playerOne') ? 'playerOneWins' : 'playerTwoWins'\r\n        }\r\n    }\r\n    let nonSkippedTurns = moveList.filter(cellId => cellId !== -1)\r\n    if (nonSkippedTurns.length >= 42) {\r\n        return 'gameOverDraw'\r\n    }\r\n    else {\r\n        return (moveList.length % 2 === 0) ? 'playerOnesTurn' : 'playerTwosTurn'\r\n    }\r\n}\r\n\r\n\r\nexport function cellIsUnclaimed(cellId, moveList) {\r\n    return (!moveList.includes(cellId))\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Logic\r\nimport { gameIsOver, nextPlayerColor } from '../logic/connectFourLogic'\r\n\r\n// MUI  components\r\nimport { Box, Container, Slide, Typography, Zoom } from '@material-ui/core'\r\n\r\n// Style & Layout Constants\r\nconst oneSixth = '16.666%'\r\nconst squarePercentage = '14.287%'\r\nconst rowHeightPercentage = '16.665%'\r\nconst columnWidthPercentage = '14.280%'\r\nconst headerHeightPercentage = columnWidthPercentage\r\nconst heightOfSixSquares = '85.714%'\r\n\r\nconst chipSizeRelativeToSquare = '84%'\r\n\r\nlet rowNumbers = [0, 1, 2, 3, 4, 5]\r\nlet columnNumbers = [0, 1, 2, 3, 4, 5, 6]\r\n\r\nexport function GameBoard(props) {\r\n    const { moveList, handleColumnClick, gameStatus } = props\r\n\r\n    function getColumnChipColors(columnIndex) {\r\n        let chipColors = boardChipColors().filter((player, cellId) => cellId % 7 === columnIndex)\r\n        // console.log(`CHIP COLORS for Column ${columnIndex}: ${chipColors}`)\r\n        return chipColors\r\n    }\r\n    function boardChipColors() {\r\n        let chipColors = new Array(42).fill('unclaimed')\r\n        moveList.forEach((cellId, turnNumber) => {\r\n            if (cellId !== -1) {              // -1 in moveList indicates a turn skipped due to wrong answer to math question\r\n                let player = (turnNumber % 2 === 0) ? \"playerOne\" : \"playerTwo\"  // Player One's moves are at Even indices in the moveList\r\n                chipColors[cellId] = player\r\n            }\r\n        })\r\n        // console.log(`Board Data: ${chipColors}`)\r\n        return chipColors\r\n    }\r\n    \r\n    return (\r\n        <Container id=\"gameBoard\"\r\n            disableGutters\r\n            sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                height: '95%',\r\n                width: '95%',\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-end'\r\n            }}\r\n        >\r\n            <InfoHeaderRow gameStatus={gameStatus} />  \r\n            {columnNumbers.map((columnIndex) => {\r\n                let chipColors = getColumnChipColors(columnIndex)\r\n                return (\r\n                    <Column \r\n                        key={columnIndex}\r\n                        index={columnIndex}\r\n                        chipColors={chipColors}\r\n                        gameStatus={gameStatus}\r\n                        nextPlayerColor={nextPlayerColor(gameStatus)}\r\n                        handleColumnClick={handleColumnClick}\r\n                    />\r\n                )\r\n            })}\r\n            <RoundedBoardFrame />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction InfoHeaderRow(props) {\r\n    let { gameStatus } = props\r\n    let gameOver = gameIsOver(gameStatus)\r\n    let message = \"\"\r\n    if (gameOver) {\r\n        message = (gameStatus === \"playerOneWins\" ? \"Red Wins!\" : \"Yellow Wins!\")\r\n    }\r\n    \r\n    return (\r\n        <Box id='infoHeaderRow'\r\n            sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: headerHeightPercentage,\r\n                zIndex: 15,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            <Zoom in={message !== \"\"} style={{ transitionDelay: '300ms' }} >\r\n                <Typography variant='h2' align='center' >\r\n                    {message}\r\n                </Typography>\r\n            </Zoom>\r\n            \r\n            \r\n        </Box>\r\n    )\r\n}\r\nfunction RoundedBoardFrame(props) {\r\n    return (\r\n        <Box id='roundedGameBorder'\r\n            sx={{\r\n                boxSizing: 'content-box',\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                left: '-9px',\r\n                width: 'calc(100% - 2px)',\r\n                height: heightOfSixSquares,\r\n                border: \"10px solid\",\r\n                borderColor: \"board.main\",\r\n                borderRadius: \"10px\",\r\n                borderTop: 0\r\n            }}\r\n        />\r\n    )\r\n}\r\nfunction Column(props) {\r\n    const { index, chipColors, gameStatus, nextPlayerColor, handleColumnClick } = props\r\n    let columnLetter = ''\r\n    if (!gameIsOver(gameStatus)) {\r\n        switch (index) {\r\n            case 0:\r\n                columnLetter = 'A'\r\n                break;\r\n            case 1:\r\n                columnLetter = 'B'\r\n                break;\r\n            case 2:\r\n                columnLetter = 'C'\r\n                break;\r\n            case 3:\r\n                columnLetter = 'D'\r\n                break;\r\n            case 4:\r\n                columnLetter = 'E'\r\n                break;\r\n            case 5:\r\n                columnLetter = 'F'\r\n                break;\r\n            case 6:\r\n                columnLetter = 'G'\r\n                break;\r\n            default:\r\n                columnLetter = 'error'\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <Box id=\"column\" \r\n            // ref={hoverRef} \r\n            onClick={() => handleColumnClick(index)}\r\n            sx={{\r\n                position: 'relative',\r\n                width: squarePercentage,\r\n                height: '100%',\r\n                zIndex: 9,\r\n                '&:hover #hoverChip': {\r\n                    backgroundColor: `chip.${nextPlayerColor}`,\r\n                },\r\n            }}\r\n        >\r\n            <HoverChipArea columnLetter={columnLetter} />\r\n            <ChipContainer chipColors={chipColors} />\r\n            <ColumnOfSquaresWithHoles />\r\n        </Box>\r\n    );\r\n}\r\nColumn.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    nextPlayerColor: PropTypes.oneOf(['playerOne', 'playerTwo', 'unclaimed']),\r\n    handleColumnClick: PropTypes.func,\r\n}\r\n\r\nfunction Chip(props) {\r\n    const { color } = props\r\n    let claimed = (color !== \"unclaimed\")\r\n    let bgcolor = `chip.${color}`\r\n    return (\r\n        <Slide in={claimed} \r\n            direction=\"down\"\r\n            // easing=\"easing.parabolicAcceleration\"\r\n            // easing={{ enter: 'transitions.easing.easeOut', exit: 'transitions.easing.sharp' }}\r\n        >\r\n            <Box id=\"transparentSquareFrame\"\r\n                sx={{\r\n                    width: '100%',\r\n                    height: rowHeightPercentage,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Box id=\"chip\"\r\n                    sx={{\r\n                        borderRadius: '50%',\r\n                        zIndex: 'chip',\r\n                        bgcolor: bgcolor,\r\n                        width: chipSizeRelativeToSquare,\r\n                        height: chipSizeRelativeToSquare,\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Slide>\r\n\r\n    )\r\n}\r\nChip.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    color: PropTypes.oneOf(['playerOne', 'playerTwo', 'unclaimed']),\r\n}\r\n\r\nfunction HoverChipArea(props) {\r\n    return (\r\n        <Box id=\"hoverChipContainer\"\r\n            sx={{\r\n                // border: 'solid red 1px',\r\n                width: '100%',\r\n                height: squarePercentage,\r\n                zIndex: 8,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}\r\n        >\r\n            <Box id=\"hoverChip\"\r\n                sx={{\r\n                    bgcolor: 'background',\r\n                    width: chipSizeRelativeToSquare,\r\n                    height: chipSizeRelativeToSquare,\r\n                    borderRadius: '50%',\r\n                    zIndex: 8,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-end',\r\n                    fontSize: '2rem'\r\n                }}\r\n            >\r\n                {props.columnLetter}  \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nfunction ChipContainer(props) {\r\n    return (\r\n        <Box id=\"chipContainer\"\r\n            sx={{\r\n                width: '100%',\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                bgcolor: 'transparent',\r\n                height: heightOfSixSquares,\r\n                zIndex: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column-reverse',\r\n            }}\r\n        >\r\n            {props.chipColors.map((color, index) => {\r\n                return <Chip\r\n                    key={index}\r\n                    id={index}\r\n                    color={color}\r\n                // transition={false}\r\n                />\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\nfunction ColumnOfSquaresWithHoles(props) {\r\n    function SquareWithHole(props) {\r\n        return (\r\n            <Box id=\"squareWithHole\"\r\n                key={props.index}\r\n                sx={{\r\n                    overflow: 'hidden',\r\n                    width: '100%',\r\n                    height: oneSixth,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    boxShadow: '0px 1px 1px 1px #0039cb',\r\n                }}\r\n            >\r\n                <Box id=\"hole\"\r\n                    sx={{\r\n                        boxShadow: \"0 0 0 99px #0039cb\",\r\n                        borderRadius: '50%',\r\n                        bgcolor: 'transparent',\r\n                        width: chipSizeRelativeToSquare,\r\n                        height: chipSizeRelativeToSquare,\r\n                    }}\r\n                />\r\n            </Box>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Box id=\"columnOfSquares\"\r\n            sx={{\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                bgcolor: 'transparent',\r\n                width: '100%',\r\n                height: heightOfSixSquares,\r\n                zIndex: 'board',\r\n                display: 'flex',\r\n                flexDirection: 'column-reverse',\r\n            }}\r\n        >\r\n            {rowNumbers.map((item, index) => {\r\n                return (<SquareWithHole key={index} />)\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n// MUI  components\r\nimport { Box, Button, IconButton, Dialog, Zoom, Typography, Grid } from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserFriends, faRobot } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Style & Layout Constants\r\nconst opponentHeight = \"25%\"\r\nconst topicHeight = \"35%\"\r\nconst difficultyHeight = \"25%\"\r\nconst inputHeight = \"15%\"\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom ref={ref} {...props} />;\r\n})\r\n\r\n\r\nexport function NewGameSettingsModal(props) {\r\n    let { \r\n        open,\r\n        boardSideLength,\r\n        startNewGame,\r\n        cancelNewGame,\r\n        opponent,\r\n        mathTopics,\r\n        difficultyMode,\r\n        toggleCombine,\r\n        toggleMultiply,\r\n        selectOpponent,\r\n        selectDifficulty\r\n    } = props\r\n\r\n    // let opponent = \"human\"\r\n    // let mathTopics = {\r\n    //     combine: false,\r\n    //     multiply: false,\r\n    // }\r\n    // let difficultyMode = \"increasing\"\r\n\r\n    let noneSelectedError = Object.values(mathTopics).filter((v) => v).length === 0;\r\n    \r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            aria-describedby=\"game settings dialog\"\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth='md'\r\n            PaperProps={{\r\n                sx: {\r\n                    height: `${0.85 * boardSideLength}px`,\r\n                    width: `${0.7 * boardSideLength}px`,\r\n                    minHeight: \"550px\",\r\n                    minWidth: \"375px\",\r\n                    borderRadius: '3rem',\r\n                    justifySelf: 'flex-start',\r\n                    alignSelf: 'flex-start',\r\n                    px: 2,\r\n                    py: 2\r\n                }\r\n            }}\r\n        >\r\n            <OpponentSelector />\r\n            <MathTopicSelector />\r\n            <DifficultyModeSelector />\r\n            <StartAndCancelButtons \r\n                cancelNewGame={cancelNewGame}\r\n                startNewGame={startNewGame}\r\n            />\r\n            \r\n\r\n        </Dialog>\r\n    )\r\n\r\n\r\n    function OpponentSelector() {\r\n        return (\r\n            <Box sx={{ \r\n                // border: 'solid red 1px',\r\n                height: opponentHeight, \r\n                display: 'flex', \r\n                flexDirection: 'column' \r\n                }} >\r\n                <Typography \r\n                    variant='h5'\r\n                    align=\"center\"\r\n                >\r\n                    Play vs. Human or Bot?\r\n                </Typography>\r\n                <Grid container spacing={2} sx={{ height: '100%', p: \"0 2rem\" }} >\r\n                    <Grid item xs={6} >\r\n                        <PlayVsHumanButton   />\r\n                    </Grid>\r\n                    <Grid item xs={6} >\r\n                        <PlayVsBotButton />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            </Box>\r\n        )\r\n\r\n        function PlayVsHumanButton(props){\r\n            return (\r\n                <IconButton\r\n                    // onClick={() => { opponent = \"human\" }}\r\n                    onClick={() => selectOpponent(\"human\")}\r\n                    sx={{\r\n                        height: \"100%\",\r\n                        width: '100%'\r\n                    }}\r\n                    color={(opponent === \"human\") ? \"primary\" : \"secondary\"}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faUserFriends}\r\n                        size=\"2x\"\r\n                    />\r\n                </IconButton>\r\n            )\r\n        }\r\n        function PlayVsBotButton(props) {\r\n            return (\r\n                <IconButton\r\n                    // onClick={() => {opponent = \"bot\"}}\r\n                    onClick={() => selectOpponent(\"bot\")}\r\n                    sx={{ \r\n                        height: \"100%\",\r\n                        width: '100%' \r\n                    }}\r\n                    color={(opponent === \"bot\") ? \"primary\" : \"secondary\"}\r\n\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faRobot}\r\n                        size=\"2x\"\r\n                    />\r\n                </IconButton>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    function MathTopicSelector() {\r\n        \r\n        return (\r\n            <Box sx={{\r\n                // border: 'solid red 1px',\r\n                height: topicHeight,  \r\n                display: 'flex', \r\n                flexDirection: 'column' \r\n            }}>\r\n                <Typography\r\n                    variant='h5'\r\n                    align=\"center\"\r\n                    gutterBottom\r\n                >\r\n                    What math topics should we include?\r\n                </Typography>\r\n                <Grid container spacing={1} px=\"2rem\" >\r\n                    <Grid item xs={12} >\r\n                        <CombineButton />\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <MultiplyButton />\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{ py: 0 }}>\r\n                        <Typography\r\n                            variant='body1'\r\n                            align=\"center\"\r\n                            color=\"error\"\r\n                            display={noneSelectedError ? \"flex\" : \"none\"}\r\n                            gutterBottom\r\n                        >\r\n                            *** You must select at least one topic.\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </Box>\r\n        )\r\n        function CombineButton(props) {\r\n            let selected = (mathTopics.combine === true)\r\n            return (\r\n                <Button\r\n                    onClick={toggleCombine}\r\n                    variant={selected ? \"contained\" : \"outlined\"}\r\n                    sx={{ width: '100%' }}\r\n                    children={\r\n                        \"Combine & Split Up\"\r\n                    }\r\n                />\r\n            )\r\n        }\r\n        function MultiplyButton(props) {\r\n            let selected = (mathTopics.multiply === true)\r\n            return (\r\n                <Button\r\n                    onClick={toggleMultiply}\r\n                    variant={selected ? \"contained\" : \"outlined\"}\r\n                    sx={{ width: '100%' }}\r\n                    children={\r\n                        \"Multiply & Factor\"\r\n                    }\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    function DifficultyModeSelector() {\r\n        return (\r\n            <Box sx={{\r\n                height: difficultyHeight,\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n            }}>\r\n                <Typography\r\n                    variant='h5'\r\n                    align=\"center\"\r\n                    gutterBottom\r\n                >\r\n                    How hard should the questions be?\r\n                </Typography>\r\n                <Grid container spacing={1} px=\"2rem\" >\r\n                    <Grid item xs={4} >\r\n                        <DifficultyModeButton mode=\"easy\" />\r\n                    </Grid>\r\n                    <Grid item xs={4} >\r\n                        <DifficultyModeButton mode=\"medium\" />\r\n                    </Grid>\r\n                    <Grid item xs={4} >\r\n                        <DifficultyModeButton mode=\"hard\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <DifficultyModeButton mode=\"increasing\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        )\r\n        function DifficultyModeButton(props) {\r\n            let { mode } = props\r\n            return (\r\n                <Button\r\n                    onClick={() => selectDifficulty(mode)}\r\n                    variant={(difficultyMode === mode) ? \"contained\" : \"outlined\"}\r\n                    sx={{\r\n                        width: \"100%\"\r\n                    }}\r\n                    children={(mode === \"increasing\") ? \"increasing difficulty\" : `${mode}`}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    function StartAndCancelButtons() {\r\n        return(\r\n            <Box sx={{\r\n                borderTop: `solid green 3px`,\r\n                borderColor: 'primary.main',\r\n                height: inputHeight,\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n                mt: 3,\r\n                mb: 1,\r\n                pt: 2,\r\n                pr: 1,\r\n            }}>\r\n                <CancelButton\r\n                    cancelNewGame={cancelNewGame}\r\n                />\r\n                <StartGameButton\r\n                    startNewGame={startNewGame}\r\n                />\r\n            </Box>\r\n        )\r\n    }\r\n    function CancelButton(props) {\r\n        const { cancelNewGame } = props\r\n        return (\r\n            <Button\r\n                onClick={cancelNewGame}\r\n                variant='outlined'\r\n                // color=\"error\"\r\n                disabled={noneSelectedError}\r\n                sx={{\r\n                    m: 1,\r\n                    width: '42%'\r\n                }}\r\n                children=\"Cancel\"\r\n            />\r\n        )\r\n    }\r\n    function StartGameButton(props) {\r\n        const { startNewGame } = props\r\n        return (\r\n            <Button\r\n                onClick={() => startNewGame(mathTopics, difficultyMode, opponent)}\r\n                variant='contained'\r\n                disabled={noneSelectedError}\r\n                sx={{\r\n                    m: 1,\r\n                    width: '42%'\r\n                }}\r\n                children=\"Start Game\"\r\n            />\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\n// MUI  components\r\nimport { Box, Button, Dialog, Zoom, Typography, FormControl, InputLabel, OutlinedInput } from '@material-ui/core'\r\n\r\n// Style & Layout Constants\r\nconst instructionsHeight = \"33%\"\r\nconst equationHeight = \"32%\"\r\nconst inputHeight = \"35%\"\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom ref={ref} {...props} />;\r\n})\r\n\r\nexport function MathQuestionModal(props) {\r\n    let { question, \r\n        open,\r\n        headerText,\r\n        nextPlayerColor,\r\n        handleAnswerSubmit, \r\n        boardSideLength } = props \r\n    \r\n    let { correctAnswer, equationString, inputType } = question\r\n    let borderColor = `chip.${nextPlayerColor}`\r\n\r\n    return (\r\n        <Dialog \r\n            // keepMounted\r\n            disableEscapeKeyDown\r\n            open={open}\r\n            onBackdropClick={() => {}}  // disable close on bg click\r\n            aria-describedby=\"math-question-dialog\"\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth='md'\r\n            PaperProps={{\r\n                sx: {\r\n                    // border: `solid ${nextPlayerColor(gameStatus)} 5px`,\r\n                    border: `solid green 0.5rem`,\r\n                    // border: `solid ${borderColor} 5px`,\r\n                    borderColor: borderColor,\r\n                    margin: `${0.05 * boardSideLength}px`,\r\n                    height: `${0.9 * boardSideLength}px`,\r\n                    width: `${0.9 * boardSideLength}px`,\r\n                    borderRadius: '50%',\r\n                    justifySelf: 'flex-start',\r\n                    alignSelf: 'flex-start'\r\n\r\n                }\r\n            }}\r\n        >\r\n            <HeaderText headerText={headerText} />\r\n            <QuestionEquation equationString={equationString} />\r\n            <AnswerInputComponent \r\n                inputType={inputType}\r\n                correctAnswer={correctAnswer}\r\n                handleAnswerSubmit={handleAnswerSubmit}\r\n            />\r\n        </Dialog>\r\n    )\r\n    \r\n    function HeaderText(props) {\r\n        return (\r\n            <Typography id=\"Instructions\"\r\n                variant='h3'\r\n                sx={{\r\n                    height: instructionsHeight,\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexFlow: 'row wrap',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-end',\r\n                }}\r\n            >\r\n                {props.headerText}\r\n            </Typography>\r\n        )\r\n    }\r\n    function QuestionEquation(props) {\r\n        const { equationString } = props\r\n        const fontStyle = (equationString.length > 12) ? 'h2' : 'h1'\r\n\r\n        return (\r\n            <Typography variant={fontStyle} \r\n                sx={{\r\n                    width: '100%',\r\n                    height: equationHeight,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    overflow: 'visible',\r\n                }}\r\n            >\r\n                {equationString}\r\n            </Typography>\r\n        )\r\n    }\r\n    function AnswerInputComponent(props) {\r\n        const { inputType, correctAnswer, handleAnswerSubmit } = props\r\n\r\n        // const [submitted, setSubmitted] = useState(false)\r\n        const [playersAnswer, setPlayersAnswer] = useState(\"\")\r\n        const answerIsNum = /^\\d+$/.test(playersAnswer)\r\n        const error = (playersAnswer.length > 0 && !answerIsNum)\r\n\r\n        const handlePlayersAnswerChange = (event) => {\r\n            let updatedAnswer = event.target.value.trim()\r\n            setPlayersAnswer(updatedAnswer)\r\n        }\r\n        const handlePlayersAnswerSubmit = () => {\r\n            // if (submitted) {\r\n                // return // No Effect\r\n            // }\r\n            // else {\r\n                // setSubmitted(true)\r\n                handleAnswerSubmit(playersAnswer)\r\n            // }\r\n        }\r\n\r\n        if (inputType === \"textField\") {\r\n            return (\r\n                <NumericalTextInput\r\n                    error={error}\r\n                    handleSubmitButtonClick={handlePlayersAnswerSubmit}\r\n                />\r\n            )\r\n        }\r\n        else if (inputType === \"compareButtons\") {\r\n            return (\r\n                <CompareButtons \r\n                    // handleSubmitButtonClick={() => handleAnswerSubmit(playersAnswer)}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            console.error(`getInputComponent failed. Invalid inputType: ${inputType}`)\r\n        }\r\n\r\n        function NumericalTextInput(props) {\r\n            const { error, handleSubmitButtonClick } = props\r\n\r\n            return (\r\n                <Box sx={{\r\n                    height: inputHeight,\r\n                    width: '100%',\r\n                    padding: '0 20%',\r\n                }}>\r\n                    <FormControl \r\n                        id=\"answer-input-form\"\r\n                        color=\"primary\"\r\n                        error={error}\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexFlow: 'row nowrap',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'flex-start',\r\n                        }}\r\n                    >\r\n                        <InputLabel>{(error === false) ? \"Your Answer\" : \"Enter a whole number\"}</InputLabel>\r\n                        <OutlinedInput\r\n                            label={(error === false) ? \"Your Answer\" : \"Enter a whole number\"}\r\n                            value={playersAnswer}\r\n                            id=\"answer-input\"\r\n                            fullWidth\r\n                            size=\"medium\"\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            // type=\"number\"\r\n                            type=\"tel\"\r\n                            // pattern=\"\\d*\"\r\n                            pattern='[0-9]*'\r\n                            onChange={handlePlayersAnswerChange}\r\n                            inputProps={{ \r\n                                style: { fontSize: '2rem', height: '2rem' }\r\n                            }}\r\n                            sx={{ width: '62%' }}\r\n                            onKeyDown={(event) => {\r\n                                if (event.key === \"Enter\") {\r\n                                    // setSubmitted(true)\r\n                                    handleSubmitButtonClick()\r\n                                }\r\n                            }}\r\n                        />\r\n                        <SubmitButton\r\n                            disabled={error}\r\n                            playersAnswer={playersAnswer}\r\n                            correctAnswer={correctAnswer}\r\n                            handleSubmitButtonClick={handleSubmitButtonClick}\r\n                        />\r\n                    </FormControl>\r\n                </Box>\r\n            )\r\n        }\r\n        function SubmitButton(props) {\r\n            const { handleSubmitButtonClick } = props\r\n            return (\r\n                <Button\r\n                    onClick={handleSubmitButtonClick}\r\n                    variant='contained'\r\n                    // size=\"large\"\r\n                    sx={{ \r\n                        ml: 1, \r\n                        px: 2.5,\r\n                        lineHeight: '3rem',\r\n                        width: '42%'\r\n                    }}\r\n                    children=\"Submit\"\r\n                />\r\n            )\r\n        }\r\n\r\n        function CompareButtons(props) {\r\n            // let { handleSubmitButtonClick } = props\r\n\r\n            return (\r\n                <Box \r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                >\r\n                    <Button />\r\n                    <Button />\r\n                    <Button />\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","// Exports helper for when questionGenerator has selected the \"combining\" topic\r\nimport { randomInt, chooseRandomFromArray } from \"../lowLevelHelpers\";\r\n\r\nconst missingMinuendInstructions = [\r\n    \"Minus how many?\",\r\n    \"Take away what?\",\r\n    \"How far apart?\",\r\n]\r\n\r\n\r\nexport function getCombiningQuestion(difficulty) {\r\n    console.assert((difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\"), `getCombiningQuestion recieved invalid difficulty ${difficulty}` )\r\n    console.log(`Generating Combining Question of difficulty \"${difficulty}\"`)\r\n    \r\n    let types = [\r\n        missingSumTwo,\r\n        missingSumThree,\r\n        missingDifference,\r\n        missingAddendTwo,\r\n        missingAddendThree,\r\n        doubleTripleQuadruple,\r\n        howFarApart,\r\n    ]\r\n    return chooseRandomFromArray(types)(difficulty)\r\n    \r\n}\r\n\r\n\r\n/////////////////////////////////////////////////////////////////\r\n//  INSTRUCTIONS\r\n/////////////////////////////////////////////////////////////////\r\n\r\nconst missingSumInstructions = [\r\n    \"Add\",\r\n    \"What's the Sum?\",\r\n    \"Find the Total\"\r\n]\r\nconst missingDifferenceInstructions = [\r\n    \"Subtract\",\r\n    \"Find the Difference\",\r\n    \"How much is left?\"\r\n]\r\nconst missingAddendInstructions = [\r\n    \"Plus what?\",\r\n    \"Add how many?\",\r\n    \"How many more?\"\r\n]\r\nconst howFarApartInstructions = [\r\n    \"How far apart?\"\r\n]\r\n\r\nfunction missingSumTwo(difficulty) { \r\n    let vars = {}\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        vars.a = randomInt(3,20)\r\n        vars.b = randomInt(3,20)\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(20, 100)\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        vars.a = randomInt(100, 1000)\r\n        vars.b = randomInt(100, 1000)\r\n    }\r\n    vars.c = vars.a + vars.b\r\n    return {\r\n        type: \"missingSumTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} + ${vars.b} = __`,\r\n        instructions: chooseRandomFromArray(missingSumInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingSumThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        vars.a = randomInt(2, 13)\r\n        vars.b = randomInt(2, 13)\r\n        vars.c = randomInt(2, 13)\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        vars.a = randomInt(10, 100)\r\n        vars.b = randomInt(10, 100)\r\n        vars.c = randomInt(10, 100)\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        vars.a = randomInt(100, 600)\r\n        vars.b = randomInt(50, 100)\r\n        vars.c = randomInt(50, 100)\r\n    }\r\n    vars.d = vars.a + vars.b + vars.c\r\n    return {\r\n        type: \"missingSumThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.d,\r\n        equationString: `${vars.a} + ${vars.b} + ${vars.c} =__`,\r\n        instructions: chooseRandomFromArray(missingSumInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingDifference(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        vars.a = randomInt(10, 40)\r\n        vars.b = randomInt(3, 10)\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        vars.a = randomInt(40, 200)\r\n        vars.b = randomInt(10, 40)\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        vars.a = randomInt(300, 1000)\r\n        vars.b = randomInt(50, 300)\r\n    }\r\n    vars.c = vars.a - vars.b\r\n    return {\r\n        type: \"missingDifference\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} - ${vars.b} = __`,\r\n        instructions: chooseRandomFromArray(missingDifferenceInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\nfunction missingAddendTwo(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        vars.a = randomInt(10, 40)\r\n        vars.b = randomInt(3, 10)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        vars.a = randomInt(40, 200)\r\n        vars.b = randomInt(10, 40)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        vars.a = randomInt(100, 700)\r\n        vars.b = randomInt(50, 300)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    return {\r\n        type: \"missingAddendTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.a} + __ = ${vars.c}`,\r\n        instructions: chooseRandomFromArray(missingAddendInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingAddendThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        vars.a = randomInt(2, 12)\r\n        vars.b = randomInt(2, 12)\r\n        vars.c = randomInt(2, 12)\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        vars.a = randomInt(11, 33)\r\n        vars.b = randomInt(11, 33)\r\n        vars.c = randomInt(11, 33)\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        vars.a = randomInt(30, 100)\r\n        vars.b = randomInt(30, 100)\r\n        vars.c = randomInt(30, 100)\r\n    }\r\n    vars.d = vars.a + vars.b + vars.c\r\n    return {\r\n        type: \"missingAddendThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} + ${vars.b} + __ = ${vars.d}`,\r\n        instructions: chooseRandomFromArray(missingAddendInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction howFarApart(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        vars.a = randomInt(3, 10)\r\n        vars.b = randomInt(10, 20)\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        vars.a = randomInt(10, 40)\r\n        vars.b = randomInt(20, 100)\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        vars.a = randomInt(100, 1000)\r\n        vars.b = randomInt(100, 1000)\r\n    }\r\n    vars.c = Math.abs(vars.a - vars.b)\r\n    return {\r\n        type: \"howFarApart\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a}  &  ${vars.b}`,\r\n        instructions: chooseRandomFromArray(howFarApartInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n// DOUBLE TRIPLE QUADRUPLE\r\nfunction doubleTripleQuadruple(difficulty) {\r\n    let vars = {}\r\n    let dtqInstructions = \"\"\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        dtqInstructions = \"Double\"\r\n        vars.a = randomInt(3, 50)\r\n        vars.b = vars.a * 2\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        dtqInstructions = \"Triple\"\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = vars.a * 3\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        dtqInstructions = chooseRandomFromArray([\"Quadruple\", \"Double Double\"])\r\n        vars.a = randomInt(20, 250)\r\n        vars.b = vars.a * 4\r\n    }\r\n    return {\r\n        type: \"doubleTripleQuadruple\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.a}`,\r\n        instructions: dtqInstructions,\r\n        inputType: \"textField\",\r\n    }\r\n\r\n}\r\n\r\nfunction missingMinuend(params) {\r\n    // vars.c = randomInt(3, 20)\r\n    // vars.a = randomInt(2, vars.c)\r\n    // vars.b = vars.c - vars.a\r\n}\r\n\r\n\r\n\r\n// [\"compareSums\", `${vars[0]} + ${vars[1]} __ ${vars[2]} + ${vars[3]}`],\r\n","// Exports helpers for when questionGenerator has selected the \"multiplying\" topic\r\nimport { randomInt, chooseRandomFromArray } from \"../lowLevelHelpers\";\r\n\r\n\r\nexport function getMultiplyingQuestion(difficulty) {\r\n    console.assert((difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\"), `getMultiplyingQuestion recieved invalid difficulty ${difficulty}`)\r\n    console.log(`Generating Multiplying Question of difficulty \"${difficulty}\"`)\r\n    \r\n    let types = [\r\n        missingProductTwo,\r\n        missingProductThree,\r\n        missingFactorTwo,\r\n        missingFactorThree,\r\n        halfThirdQuarter\r\n\r\n    ]\r\n    return chooseRandomFromArray(types)(difficulty)\r\n\r\n}\r\n\r\nconst mediumFactor = () => chooseRandomFromArray([4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90])\r\n\r\n\r\n/////////////////////////////////////////////////////////////////\r\n//  INSTRUCTIONS\r\n/////////////////////////////////////////////////////////////////\r\nconst missingProductInstructions = [\r\n    \"Multiply\",\r\n    \"Find the Product\",\r\n]\r\nconst missingFactorInstructions = [\r\n    \"What's missing?\",\r\n    \"Times what?\"\r\n]\r\nconst missingDivisorInstructions = [\r\n    \"Find the Divisor\",\r\n    \"How many groups of...\",\r\n    \"Divide by what?\"\r\n]\r\nconst missingQuotientInstructions = [\r\n    \"Find the Quotient\",\r\n    \"How many per group?\"\r\n]\r\n\r\n// MISSING PRODUCT\r\nfunction missingProductTwo(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {            // Grade 2\r\n        vars.a = randomInt(2, 11)\r\n        vars.b = randomInt(2, 11)\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 3\r\n        vars.a = mediumFactor()\r\n        vars.b = randomInt(2, 16)\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 5\r\n        vars.a = randomInt(11, 100)\r\n        vars.b = randomInt(11, 100)\r\n    }\r\n    vars.c = vars.a * vars.b\r\n\r\n    return {\r\n        type: \"missingProductTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} x ${vars.b} = __`,\r\n        instructions: chooseRandomFromArray(missingProductInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingProductThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(2, 7)\r\n        vars.b = randomInt(2, 7)\r\n        vars.c = randomInt(2, 7)\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(2, 11)\r\n        vars.b = randomInt(2, 11)\r\n        vars.c = randomInt(2, 11)\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(2, 26)\r\n        vars.b = randomInt(2, 16)\r\n        vars.c = randomInt(2, 11)\r\n    }\r\n    vars.d = vars.a * vars.b * vars.c\r\n    return {\r\n        type: \"missingProductThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.d,\r\n        equationString: `${vars.a} x ${vars.b} x ${vars.c} = __`,\r\n        instructions: chooseRandomFromArray(missingProductInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\n// MISSING FACTOR\r\nfunction missingFactorTwo(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(2, 11)\r\n        vars.b = randomInt(2, 11)\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(5, 31)\r\n        vars.b = mediumFactor()\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(5, 20)\r\n    }\r\n    vars.c = vars.a * vars.b\r\n    return {\r\n        type: \"missingFactorTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.a} x __ = ${vars.c}`,\r\n        instructions: chooseRandomFromArray(missingFactorInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingFactorThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(2, 7)\r\n        vars.b = randomInt(2, 7)\r\n        vars.c = randomInt(2, 7)\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(3, 11)\r\n        vars.b = randomInt(3, 11)\r\n        vars.c = randomInt(3, 11)\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(4, 26)\r\n        vars.b = randomInt(4, 11)\r\n        vars.c = randomInt(4, 16)\r\n    }\r\n    vars.d = vars.a * vars.b * vars.c\r\n\r\n    return {\r\n        type: \"missingFactorThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} x ${vars.b} x __ = ${vars.d}`,\r\n        instructions: chooseRandomFromArray(missingFactorInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\n// MISSING DIVIDEND\r\n\r\n\r\n// MISSING DIVISOR\r\nfunction missingDivisor(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(3, 16)\r\n        vars.b = randomInt(2, 11)\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(5, 31)\r\n        vars.b = randomInt(5, 16)\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(11, 26)\r\n    }\r\n    vars.c = vars.a * vars.b\r\n\r\n    return {\r\n        type: \"missingDivisor\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.c} ÷ __ = ${vars.a}`,\r\n        instructions: chooseRandomFromArray(missingDivisorInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\n// MISSING QUOTIENT\r\nfunction missingQuotient(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(3, 16)\r\n        vars.b = randomInt(2, 11)\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(5, 31)\r\n        vars.b = randomInt(5, 16)\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(11, 26)\r\n    }\r\n    vars.c = vars.a * vars.b\r\n\r\n    return {\r\n        type: \"missingQuotient\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.c} ÷ ${vars.a} = __`,\r\n        instructions: chooseRandomFromArray(missingQuotientInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n// DOUBLE TRIPLE QUADRUPLE  --> Now lives in Combining\r\n\r\n// HALF THIRD QUARTER \r\nfunction halfThirdQuarter(difficulty) {\r\n    let vars = {}\r\n    let instructions = \"\"\r\n    if (difficulty === \"easy\") {            // Grade 1\r\n        instructions = \"What's half of\"\r\n        // instructions = chooseRandomFromArray([\"What's half of\", \"Split evenly\"])\r\n        vars.a = randomInt(3, 50)\r\n        vars.b = vars.a * 2\r\n    }\r\n    else if (difficulty === \"medium\") {     // Grade 2\r\n        instructions = \"What's a third of\"\r\n        // instructions = chooseRandomFromArray([\"Find a third of\", \"Split three ways\"])\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = vars.a * 3\r\n    }\r\n    else if (difficulty === \"hard\") {       // Grade 3\r\n        instructions = \"What's a quarter of\"\r\n        // instructions = chooseRandomFromArray([\"Find a quarter of\", \"Half and half again\"])\r\n        vars.a = randomInt(20, 250)\r\n        vars.b = vars.a * 4\r\n    }\r\n    return {\r\n        type: \"doubleTripleQuadruple\",\r\n        vars: vars,\r\n        correctAnswer: vars.a,\r\n        equationString: `${vars.b} ?`,\r\n        instructions: instructions,\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n// [\"completeMultiplication\", `${vars[0]} x ${vars[1]} = ${vars[2]} x __`],\r\n        // [\"divisibility\", \"divisibilityCheckboxes\"],\r\n// [\"divisibility\", \"divisibilityCheckboxes NOT BUILT YET\"],  \r\n\r\n// [\"completeMultiplication\", chooseRandomFromArray([\"Find that factor!\", \"How many copies?\"])],\r\n//     [\"compareFractions\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\r\n//     [\"compareSums\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\r\n//     [\"divisibility\", chooseRandomFromArray([\"Is divisible by...\", \"Is a multiple of...\"])],","import { chooseRandomFromArray } from \"../lowLevelHelpers\";\r\nimport { getCombiningQuestion } from \"./combiningGenerator\";\r\nimport { getMultiplyingQuestion } from \"./multiplyingGenerator\";\r\n// import { getFractionsQuestion } from \"./fractionsGenerator\";\r\n\r\n\r\nexport function testQuestion() {\r\n    let vars = [1, 2, 3, 6]\r\n    return {\r\n        type: \"missingSumThree\",\r\n        vars: vars,\r\n        correctAnswer: vars[3],\r\n        equationString: `${vars[0]} + ${vars[1]} + ${vars[2]} = __`,\r\n        instructions: \"Test Question\",\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\nlet generatorFuntions = new Map([\r\n    ['combine', getCombiningQuestion],\r\n    ['multiply', getMultiplyingQuestion]\r\n])\r\n\r\n\r\nexport function generateQuestion(topic, difficulty) {\r\n    return new Promise((resolve, reject) => {\r\n        let question = (generatorFuntions.get(topic)(difficulty))\r\n        console.log(`Generated an \"${difficulty}\" ${topic} Question --> ${JSON.stringify(question, null, 4)}`);\r\n        resolve(question)\r\n    });\r\n}\r\n\r\n// function getSequencesQuestion(difficulty) {\r\n\r\n// }\r\n// function getFractionsQuestion(difficulty) {\r\n\r\n// }\r\n// function getExponentsQuestion(difficulty) {\r\n\r\n// }\r\n\r\n","import { getLowestUnclaimedCell, playerOnesMoves, playerTwosMoves, cellIsUnclaimed } from './connectFourLogic';\r\nimport { lineToCellsMap, numberOfLines } from \"./winningLineMaps\";\r\nimport { chooseRandomFromArray, intersect } from './lowLevelHelpers';\r\n\r\n\r\n\r\nexport function getBotMove(moveList) {\r\n    let wins = getWinningMovesForBot(moveList)\r\n    let blocks = getDefensiveMovesForBot(moveList)\r\n    let legalMoves = getLegalMoves(moveList)\r\n    let winningMoves = intersect(wins, legalMoves)\r\n    let blockingMoves = intersect(blocks, legalMoves)\r\n\r\n    if (winningMoves.length > 0) {\r\n        console.log(`Bot found Winning move \"${wins}\" in legal options ${legalMoves}`);\r\n        return chooseRandomFromArray(winningMoves)\r\n    }\r\n    else if (blockingMoves.length > 0) {\r\n        console.log(`Choosing bot move with threats: ${blocks} and legal options ${legalMoves}`);\r\n        return chooseRandomFromArray(blockingMoves)\r\n    }\r\n    else {\r\n        console.log(`Choosing RANDOM bot move with NO ways to win and NO ways to block.`);\r\n        return chooseRandomFromArray(legalMoves)\r\n    }\r\n}\r\n\r\nfunction getLegalMoves(moveList) {\r\n    let moves = []\r\n    for (let col = 0; col < 7; col++) {\r\n        moves.push(getLowestUnclaimedCell(col, moveList))\r\n    }\r\n    // console.log(`legalMoves: ${moves} `);\r\n    return moves\r\n}\r\n\r\nfunction getDefensiveMovesForBot(moveList) {\r\n    let threats = []\r\n    let humansMoves = playerOnesMoves(moveList)\r\n    for (let lineId = 0; lineId < numberOfLines; lineId++) {\r\n        let cellsInLine = lineToCellsMap.get(lineId)\r\n        if (intersect(cellsInLine, humansMoves).length === 3) {\r\n            console.log(`Found Threat in Line ${lineId}: ${cellsInLine}`);\r\n            threats = threats.concat(cellsInLine.filter(cellId => !humansMoves.includes(cellId)))\r\n        }\r\n    }\r\n    return threats\r\n}\r\n\r\nexport function getWinningMovesForBot(moveList) {\r\n    let wins = []\r\n    let botsMoves = playerTwosMoves(moveList)\r\n    for (let lineId = 0; lineId < numberOfLines; lineId++) {\r\n        let cellsInLine = lineToCellsMap.get(lineId)\r\n        if (intersect(cellsInLine, botsMoves).length === 3) {\r\n            wins = wins.concat(cellsInLine.filter(cellId => cellIsUnclaimed(cellId, moveList)))\r\n        }\r\n    }\r\n    console.log(`Found Wins: ${wins}`);\r\n    return wins\r\n}","import {\r\n    createTheme,\r\n    responsiveFontSizes,\r\n} from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#669944',\r\n            main: '#2e6b12',\r\n            dark: '#004000',  // Color applied on Button Hover\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        secondary: {\r\n            light: '#FFFFF',\r\n            // main: 'rgba(46, 107, 18, 0.8)',  // washed out shade of primary.main\r\n            main: '#78ba59',\r\n            dark: '#004000',  // Color applied on Button Hover\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        text: {\r\n            primary: 'rgba(0, 0, 0, 0.87)',\r\n            secondary: 'rgba(0, 0, 0, 0.54)',\r\n            disabled: 'rgba(0, 0, 0, 0.38)',\r\n            hint: 'rgba(0, 0, 0, 0.38)',\r\n        },\r\n        action: {\r\n            disabledBackground: '#2e6b12',\r\n            disabledOpacity: '0.5'\r\n        },\r\n        board: {\r\n            light: '#2962ff',\r\n            main: '#0039cb',\r\n            dark: '#001399',\r\n        },\r\n        chip: {\r\n            playerOne: '#d50000',  // red\r\n            playerTwo: '#ffea00',  // yellow\r\n            unclaimed: '#b3e5fc',  // light blue\r\n        },\r\n        background: '#b3e5fc',\r\n        white: '#FFFFFF',\r\n        transparent: 'rgba(0, 0, 0, 0)',\r\n        selectedButton: 'rgba(46, 107, 18, 1.0)',     // Same as primary.main\r\n        unselectedButton: 'rgba(46, 107, 18, 0.65)',\r\n    },\r\n    components: {\r\n        MuiPaper: {\r\n            styleOverrides: {  // Name of the slot\r\n                root: {        // Some CSS\r\n                    backgroundColor: '#fff',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    typography: {\r\n        h1: {\r\n            fontSize: '5.5rem',\r\n        },\r\n        h2: {\r\n            fontSize: '4.0rem',\r\n        },\r\n        h3: {\r\n            fontSize: '2.3rem',\r\n        },\r\n        button: {\r\n            fontSize: '1.0rem',\r\n            fontWeight: '700'\r\n        }\r\n    },\r\n    status: {\r\n       \r\n    },\r\n    shape: {\r\n        borderRadius: 8,\r\n    },\r\n    spacing: 8,\r\n    transitions: {\r\n        easing: {\r\n            bounce: \"cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\r\n            parabolicAcceleration: \"cubic-bezier(0.5, 0.0, 1.0, 0.5)\"\r\n        }\r\n    },\r\n    zIndex: {\r\n        chip: 10,\r\n        board: 20\r\n    }\r\n\r\n});\r\n\r\nexport default responsiveFontSizes(theme, {factor: 2})\r\n// https://mui.com/customization/theming/#responsivefontsizes-theme-options-theme","import React from 'react'\r\n\r\n// PAGES\r\n// import WelcomePage from \"./pages/Welcome\"\r\n// import SettingsPage from \"./pages/Settings\"\r\n// import PlayPage from \"./pages/Play\"\r\n// import InfoPage from \"./pages/Info\"\r\n// MY components\r\nimport { InGameMenu } from \"./modals/Menu\";\r\nimport { GameBoard } from \"./pages/GameBoard\";\r\nimport { NewGameSettingsModal } from \"./modals/NewGameSettingsModal\";\r\nimport { MathQuestionModal } from \"./modals/MathQuestionModal\";\r\n// import { GameSettingsModal } from \"./components/GameSettingsModal\";\r\n\r\n// Game Logic\r\nimport { gameIsOver, \r\n    getLowestUnclaimedCell,\r\n    getGameStatus, \r\n    nextPlayersMoves, \r\n    nextPlayerColor } from './logic/connectFourLogic'\r\nimport { testQuestion, generateQuestion } from './logic/questionGenerators/questionGenerator'\r\nimport { chooseRandomFromArray } from './logic/lowLevelHelpers'\r\nimport { getBotMove } from \"./logic/getBotMove\";\r\n\r\n// Custom Hooks\r\nimport { useScreenWidth, useScreenHeight } from \"./hooks\"\r\n\r\n// MUI  components\r\nimport { CssBaseline, Box } from '@material-ui/core'\r\n\r\n// THEME\r\nimport theme from \"./theme\"\r\nimport { ThemeProvider, } from '@material-ui/core/styles'\r\n\r\nexport default function App() {\r\n    // GAME SETTINGS\r\n    const [opponent, setOpponent] = React.useState(\"human\")\r\n    const [mathTopics, setMathTopics] = React.useState({\r\n        combine: true,\r\n        multiply: false,\r\n    })\r\n    const [difficultyMode, setDifficultyMode] = React.useState(\"increasing\")  // One of \"easy\" \"medium\" \"hard\" \"increasing\"\r\n    // I chose to use three separate useState calls rather than one settings object with these same three keys because this way I avoid having to use spread syntax to keep all other state as-is when updating one piece in the settings modal.  This may be misguided.\r\n\r\n    // GAME STATE\r\n    const [moveList, setMoveList] = React.useState([])  // An Array of integers ranging -1 thru 41 of indeterminate length\r\n    const [gameStatus, setGameStatus] = React.useState('playerOnesTurn')  // Enum ['playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw']\r\n    const [openModal, setOpenModal] = React.useState(\"newGameSettings\") // Enum: \"none\", \"question\", \"newGameSettings\", \r\n    const [activeCell, setActiveCell] = React.useState(null) \r\n\r\n    // QUESTION MODAL PROPS\r\n    const [question, setQuestion] = React.useState(testQuestion())\r\n    const [headerText, setHeaderText] = React.useState(\"\")\r\n    const waysToSayCorrect = [\r\n        \"Correct!\",\r\n        \"Right!\",\r\n        \"That's it!\",\r\n        \"Good job!\",\r\n        \"Very good!\"\r\n    ]\r\n\r\n    // LAYOUT\r\n    const height = useScreenHeight()\r\n    const width = useScreenWidth()\r\n    const boardSideLength = (height <= width) ? height : width\r\n\r\n    \r\n    ///////////////////////////////////////////////////////\r\n    // CLICK HANDLERS\r\n    ///////////////////////////////////////////////////////\r\n    function handleColumnClick(columnIndex) {\r\n        if (gameIsOver(gameStatus)) {\r\n            console.log(`handleColumnClick() had NO EFFECT since game is already over!`)\r\n            return \r\n        }\r\n        let lowestUnclaimedCell = getLowestUnclaimedCell(columnIndex, moveList)\r\n        if (lowestUnclaimedCell === -1) {\r\n            console.log(`handleColumnClick() had NO EFFECT since column is full!`)\r\n            return\r\n        }\r\n        openMathQuestionModal(lowestUnclaimedCell)\r\n    }\r\n\r\n    function openMathQuestionModal(activeCell) {\r\n        const score = nextPlayersMoves(gameStatus, moveList).length\r\n        let difficulty = (difficultyMode === \"increasing\") ? determineDifficulty(score) : difficultyMode\r\n\r\n        const mathTopicsArray = Object.entries(mathTopics).filter(entry => entry[1]).map(entry => entry[0])\r\n        console.log(`Math Topics Array: ${mathTopicsArray}`);\r\n        let topic = chooseRandomFromArray(mathTopicsArray)\r\n\r\n        // My first Promise     \r\n        generateQuestion(topic, difficulty).then(newQuestion => {\r\n            // console.log(`Opening Modal with Question --> ${JSON.stringify(newQuestion, null, 4)}`);\r\n            setQuestion(newQuestion)\r\n            setHeaderText(newQuestion.instructions)\r\n            setOpenModal(\"question\")\r\n            setActiveCell(activeCell)\r\n        })\r\n    }\r\n    \r\n    function handleAnswerSubmit(playersAnswer) {\r\n        const answerIsCorrect = (Number(playersAnswer.trim()) === question.correctAnswer)\r\n        const answerFeedbackHeaderText = (answerIsCorrect ? chooseRandomFromArray(waysToSayCorrect) : `Nope. It was ${question.correctAnswer}.`)\r\n        setHeaderText(answerFeedbackHeaderText)\r\n\r\n        let moveToAdd = (answerIsCorrect) ? activeCell : -1\r\n        let updatedMoveList = moveList.concat(moveToAdd)\r\n        let updatedGameStatus = getGameStatus(updatedMoveList)\r\n        \r\n        console.log(`Adding ${moveToAdd} to the moveList. Game status: ${updatedGameStatus}`);\r\n        setTimeout(() => {\r\n            setOpenModal(\"none\")\r\n        }, 1500);\r\n        setTimeout(() => {\r\n            setMoveList(updatedMoveList)\r\n            setGameStatus(updatedGameStatus)\r\n            setActiveCell(null)\r\n        }, 1850)\r\n\r\n        if (opponent === \"bot\" && !gameIsOver(updatedGameStatus)) {\r\n            let botMove = getBotMove(updatedMoveList)\r\n            let moveListAfterBot = updatedMoveList.concat(botMove)\r\n            let gameStatusAfterBot = getGameStatus(moveListAfterBot)\r\n            console.log(`Adding Bot Move: ${botMove} to the moveList. Game status: ${gameStatusAfterBot}`);\r\n            setTimeout(() => {\r\n                setMoveList(moveListAfterBot)\r\n                setGameStatus(gameStatusAfterBot)\r\n            }, 2200)\r\n        }\r\n        \r\n    }\r\n\r\n    function toggleCombine() {\r\n        setMathTopics(prev => { return { ...prev, combine: !prev.combine } })\r\n    }\r\n    function toggleMultiply() {\r\n        setMathTopics(prev => { return { ...prev, multiply: !prev.multiply } })\r\n    }\r\n    function selectOpponent(opponent) {\r\n        setOpponent(opponent)\r\n    }\r\n    function selectDifficulty(difficulty) {\r\n        setDifficultyMode(difficulty)\r\n    }\r\n\r\n    function determineDifficulty(score) {\r\n        console.log(`determineDifficulty called with ${score} `);\r\n        if (score < 8) {\r\n            return \"easy\"\r\n        }\r\n        else if (score < 16) {\r\n            return \"medium\"\r\n        }\r\n        else if (score >= 16) {\r\n            return \"hard\"\r\n        }\r\n        else {\r\n            console.error(`Invalid number of question right so far: ${score}`);\r\n            return \"error\"\r\n        }\r\n    }\r\n \r\n    function startNewGame(mathTopics, difficultyMode, opponent ) {\r\n        console.log(`STARTING NEW GAME with ...`);\r\n        console.log(`opponent: \"${opponent}\"`);\r\n        console.log(`mathTopics: \"${JSON.stringify(mathTopics, null, 4)}\", `);\r\n        console.log(`difficultyMode: \"${difficultyMode}\"`);\r\n\r\n        setMathTopics(mathTopics)\r\n        setDifficultyMode(difficultyMode)\r\n        setMoveList([])\r\n        setGameStatus('playerOnesTurn')\r\n        setOpenModal(\"none\")\r\n        setActiveCell(null)\r\n    }\r\n    function cancelNewGame() {\r\n        setOpenModal(\"none\")\r\n    }\r\n\r\n    function handleUndoClick() {\r\n        let shortenedMoveList = moveList.slice(0, -1)\r\n        setMoveList(shortenedMoveList)\r\n        setGameStatus(getGameStatus(shortenedMoveList))\r\n        setOpenModal(\"none\")\r\n    }\r\n\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <Box id='root'\r\n                    sx={{\r\n                        bgcolor: 'background',\r\n                        height: '100vh',\r\n                        width: '100vw',\r\n                        overflow: 'hidden',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                >\r\n                    {/* <WelcomePage /> */}\r\n                    {/* <PlayPage /> */}\r\n                    {/* <InfoPage /> */}\r\n                    <Box id='play-page' \r\n                        sx={{\r\n                            height:  boardSideLength,\r\n                            width:  boardSideLength,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            position: 'relative'\r\n                    }}>\r\n                        <InGameMenu\r\n                            handleNewGameClick={() => {setOpenModal(\"newGameSettings\")}}\r\n                            handleUndoClick={handleUndoClick}\r\n                        />\r\n\r\n                        <NewGameSettingsModal \r\n                            open={(openModal === \"newGameSettings\")}\r\n                            startNewGame={startNewGame}\r\n                            cancelNewGame={cancelNewGame}\r\n                            boardSideLength={boardSideLength}\r\n\r\n                            opponent={opponent}\r\n                            mathTopics={mathTopics}\r\n                            difficultyMode={difficultyMode}\r\n\r\n                            toggleCombine={toggleCombine}\r\n                            toggleMultiply={toggleMultiply}\r\n                            selectOpponent={selectOpponent}\r\n                            selectDifficulty={selectDifficulty}\r\n\r\n                        />\r\n\r\n                        <MathQuestionModal\r\n                            open={(openModal === \"question\")}\r\n                            nextPlayerColor={nextPlayerColor(gameStatus)}\r\n                            gameStatus={gameStatus}\r\n                            question={question}\r\n                            headerText={headerText}\r\n                            handleAnswerSubmit={handleAnswerSubmit}\r\n                            boardSideLength={boardSideLength}\r\n                        />\r\n\r\n\r\n                        <GameBoard\r\n                            moveList={moveList}\r\n                            gameStatus={gameStatus}\r\n                            handleColumnClick={handleColumnClick}\r\n\r\n                        />\r\n                        \r\n                    </Box>\r\n                </Box>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}","import { useState, useEffect, useRef } from 'react'\r\n\r\n// Usage\r\n//\r\n// function App() {\r\n//     const [hoverRef, isHovered] = useHover();\r\n//     return <div ref={hoverRef}>{isHovered ? \"😁\" : \"☹️\"}</div>;\r\n// }\r\n// Hook\r\nexport function useHover() {\r\n    const [value, setValue] = useState(false);\r\n    const ref = useRef(null);\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n    useEffect(\r\n        () => {\r\n            const node = ref.current;\r\n            if (node) {\r\n                node.addEventListener(\"mouseover\", handleMouseOver);\r\n                node.addEventListener(\"mouseout\", handleMouseOut);\r\n                return () => {\r\n                    node.removeEventListener(\"mouseover\", handleMouseOver);\r\n                    node.removeEventListener(\"mouseout\", handleMouseOut);\r\n                };\r\n            }\r\n        },\r\n        // [ref.current] // Recall only if ref changes\r\n    );\r\n    return [ref, value];\r\n}\r\n\r\nexport function useScreenHeight() {\r\n    const [screenHeight, setScreenHeight] = useState(window.innerHeight)\r\n\r\n    useEffect(() => {\r\n        const handleScreenSizeChange = () => setScreenHeight(window.innerHeight)\r\n        window.addEventListener('resize', handleScreenSizeChange)\r\n        return () => window.removeEventListener('resize', handleScreenSizeChange)\r\n    }, []);\r\n\r\n    return screenHeight;\r\n}\r\n\r\nexport function useScreenWidth() {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        const handleScreenSizeChange = () => setScreenWidth(window.innerWidth)\r\n        window.addEventListener('resize', handleScreenSizeChange)\r\n        return () => window.removeEventListener('resize', handleScreenSizeChange)\r\n    }, []);\r\n\r\n    return screenWidth;\r\n}\r\n\r\nexport function useScreenOrientation() {\r\n    const [orientation, setOrientation] = useState(window.screen.orientation.type)\r\n\r\n    useEffect(() => {\r\n        const handleOrientationChange = () => setOrientation(window.screen.orientation.type)\r\n        window.addEventListener('orientationchange', handleOrientationChange)\r\n        return () => window.removeEventListener('orientationchange', handleOrientationChange)\r\n    }, []);\r\n\r\n    return orientation;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
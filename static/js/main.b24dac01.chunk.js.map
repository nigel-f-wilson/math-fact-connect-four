{"version":3,"sources":["hooks.js","modals/Menu.js","logic/winningLineMaps.js","logic/connectFourLogic.js","pages/GameBoard.js","logic/lowLevelHelpers.js","logic/questionGenerator.js","modals/MathQuestionModal.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["useScreenHeight","useState","window","innerHeight","screenHeight","setScreenHeight","useEffect","handleScreenSizeChange","addEventListener","removeEventListener","useScreenWidth","innerWidth","screenWidth","setScreenWidth","InGameMenu","props","handleNewGameClick","handleUndoClick","React","anchorEl","setAnchorEl","closeMenu","open","Boolean","id","undefined","Button","variant","onClick","event","currentTarget","sx","color","bgcolor","position","top","right","zIndex","padding","minWidth","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Menu","PaperProps","elevation","overflow","filter","mt","width","height","ml","mr","content","display","transform","MenuItem","NewGameButton","handleClick","UndoButton","startIcon","lineToCellsMap","Map","cellToLinesMap","size","gameIsOver","gameStatus","intersect","setOne","setTwo","item","includes","playerOnesNumbers","moveList","cell","turn","playerTwosNumbers","getColumnData","columnIndex","data","Array","fill","forEach","move","player","getBoardData","claimStatus","cellId","nextPlayerColor","getGameStatus","lastPlayerToMove","length","lastPlayersNumbers","lastMoveMade","Number","slice","linesAffectedByLastMove","get","i","line","squarePercentage","heightOfSixSquares","chipSizeRelativeToSquare","rowNumbers","columnNumbers","GameBoard","handleColumnClick","getColumnChipColors","chipColors","turnNumber","boardChipColors","Container","disableGutters","flexDirection","alignItems","InfoHeaderRow","map","Column","index","RoundedBoardFrame","message","Box","left","justifyContent","Zoom","in","style","transitionDelay","Typography","align","boxSizing","border","borderColor","borderRadius","borderTop","columnLetter","backgroundColor","HoverChipArea","ChipContainer","ColumnOfSquaresWithHoles","Chip","claimed","Slide","direction","fontSize","SquareWithHole","boxShadow","chooseRandomFromArray","array","randomInt","min","max","Math","ceil","floor","random","generateQuestion","mathTopics","score","question","topic","console","log","difficulty","type","vars","difficultyLevel","getEasyAddend","getMediumAddend","getHardAddend","a","b","c","d","error","getCombiningFact","correctAnswer","questionTypeToCorrectAnswerMap","has","getCorrectAnswer","instructions","questionTypeToInstructionsMap","getInstructions","equationString","questionTypeToEquationStringMap","getEquationString","inputType","questionTypeToInputTypeMap","getInputType","JSON","stringify","getCombiningQuestion","pickCombiningDifficulty","Transition","forwardRef","ref","MathQuestionModal","handleAnswerSubmit","boardSideLength","setQuestion","playersAnswer","setPlayersAnswer","headerText","setHeaderText","answerIsNum","test","Dialog","keepMounted","disableEscapeKeyDown","onBackdropClick","TransitionComponent","fullWidth","maxWidth","margin","justifySelf","alignSelf","HeaderText","QuestionEquation","AnswerInputComponent","handlePlayersAnswerChange","updatedAnswer","target","value","trim","handleSubmitButtonClick","warn","correct","ca","answerIsCorrect","answerFeedbackHeaderText","setTimeout","flexFlow","fontStyle","answerInputType","NumericalTextInput","CompareButtons","FormControl","InputLabel","OutlinedInput","label","autoFocus","autoComplete","pattern","onChange","inputProps","onKeyDown","key","SubmitButton","disabled","px","lineHeight","children","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","text","hint","action","disabledBackground","disabledOpacity","board","chip","playerOne","playerTwo","unclaimed","background","white","transparent","selectedButton","unselectedButton","components","MuiPaper","styleOverrides","root","typography","button","fontWeight","status","shape","spacing","transitions","easing","bounce","parabolicAcceleration","responsiveFontSizes","factor","App","setMoveList","setGameStatus","openModal","setOpenModal","activeCell","setActiveCell","nextPlayersMoves","questionsRightSoFar","Fragment","CssBaseline","ThemeProvider","handleAbandonGameClick","shortenedMoveList","moveToAdd","updatedMoveList","concat","updatedGameStatus","lowestUnclaimedRow","indexOf","lowestUnclaimedCell","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LA+BO,SAASA,IACZ,MAAwCC,mBAASC,OAAOC,aAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KAQA,OANAC,qBAAU,WACN,IAAMC,EAAyB,kBAAMF,EAAgBH,OAAOC,cAE5D,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACnD,IAEIH,EAGJ,SAASM,IACZ,MAAsCT,mBAASC,OAAOS,YAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAP,qBAAU,WACN,IAAMC,EAAyB,kBAAMM,EAAeX,OAAOS,aAE3D,OADAT,OAAOM,iBAAiB,SAAUD,GAC3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACnD,IAEIK,E,sJCxBJ,SAASE,EAAWC,GACvB,IAAMC,EAAwCD,EAAxCC,mBAAoBC,EAAoBF,EAApBE,gBAE1B,EAAgCC,WAAe,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAY,WACdD,EAAY,OAGVE,EAAOC,QAAQJ,GACfK,EAAKF,EAAO,sBAAmBG,EAErC,OACI,eAAC,WAAD,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OACZ,mBAAkBH,EAClBI,QAfK,SAACC,GACdT,EAAYS,EAAMC,gBAeVC,GAAI,CACAC,MAAO,eACPC,QAAS,aACTC,SAAU,WACVC,IAAK,KACLC,MAAO,KACPC,OAAQ,KACRC,QAAS,EACTC,SAAU,QAXlB,SAcI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CACIhB,GAAIA,EACJF,KAAMA,EACNH,SAAUA,EACVsB,QAASpB,EACTqB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAXpB,SAcI,eAACE,EAAA,EAAD,CACI3B,SAAUA,EACVG,KAAMA,EACNmB,QAASpB,EACTO,QAASP,EACT0B,WAAY,CACRC,UAAW,EACXjB,GAAI,CACAkB,SAAU,UACVC,OAAQ,4CACRC,GAAI,IACJ,oBAAqB,CACjBC,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLC,GAAI,GAER,WAAY,CACRC,QAAS,KACTC,QAAS,QACTvB,SAAU,WACVC,IAAK,EACLC,MAAO,GACPgB,MAAO,GACPC,OAAQ,GACRpB,QAAS,mBACTyB,UAAW,iCACXrB,OAAQ,KAIpBQ,gBAAiB,CAAED,WAAY,QAASD,SAAU,OAClDD,aAAc,CAAEE,WAAY,QAASD,SAAU,UAhCnD,UAkCI,cAACgB,EAAA,EAAD,UACI,cAACC,EAAD,CACIC,YAAa7C,MAGrB,cAAC2C,EAAA,EAAD,UACI,cAACG,EAAD,CACID,YAAa5C,cAUzC,SAAS2C,EAAc7C,GACnB,IAAM8C,EAAgB9C,EAAhB8C,YACN,OACI,cAACnC,EAAA,EAAD,CACIC,QAAQ,WACRoC,UAAW,cAAC,IAAD,IACXnC,QAAS,kBAAMiC,KACf9B,GAAI,CACAqB,MAAO,QALf,yBAaR,SAASU,EAAW/C,GAChB,IAAM8C,EAAgB9C,EAAhB8C,YACN,OACI,cAACnC,EAAA,EAAD,CACIC,QAAQ,WACRoC,UAAW,cAAC,IAAD,IACXnC,QAAS,kBAAMiC,KACf9B,GAAI,CACAqB,MAAO,QALf,0B,WCkfKY,G,MAAiB,IAAIC,IA/mBT,CACrB,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,EACA,IAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,EACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,EACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,QA8eCC,EAAiB,IAAID,IAxeT,CACrB,CACI,EACA,CACI,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CA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","file":"static/js/main.b24dac01.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\n\r\n// Usage\r\n//\r\n// function App() {\r\n//     const [hoverRef, isHovered] = useHover();\r\n//     return <div ref={hoverRef}>{isHovered ? \"😁\" : \"☹️\"}</div>;\r\n// }\r\n// Hook\r\nexport function useHover() {\r\n    const [value, setValue] = useState(false);\r\n    const ref = useRef(null);\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n    useEffect(\r\n        () => {\r\n            const node = ref.current;\r\n            if (node) {\r\n                node.addEventListener(\"mouseover\", handleMouseOver);\r\n                node.addEventListener(\"mouseout\", handleMouseOut);\r\n                return () => {\r\n                    node.removeEventListener(\"mouseover\", handleMouseOver);\r\n                    node.removeEventListener(\"mouseout\", handleMouseOut);\r\n                };\r\n            }\r\n        },\r\n        [ref.current] // Recall only if ref changes\r\n    );\r\n    return [ref, value];\r\n}\r\n\r\nexport function useScreenHeight() {\r\n    const [screenHeight, setScreenHeight] = useState(window.innerHeight)\r\n\r\n    useEffect(() => {\r\n        const handleScreenSizeChange = () => setScreenHeight(window.innerHeight)\r\n        window.addEventListener('resize', handleScreenSizeChange)\r\n        return () => window.removeEventListener('resize', handleScreenSizeChange)\r\n    }, []);\r\n\r\n    return screenHeight;\r\n}\r\n\r\nexport function useScreenWidth() {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        const handleScreenSizeChange = () => setScreenWidth(window.innerWidth)\r\n        window.addEventListener('resize', handleScreenSizeChange)\r\n        return () => window.removeEventListener('resize', handleScreenSizeChange)\r\n    }, []);\r\n\r\n    return screenWidth;\r\n}\r\n\r\nexport function useScreenOrientation() {\r\n    const [orientation, setOrientation] = useState(window.screen.orientation.type)\r\n\r\n    useEffect(() => {\r\n        const handleOrientationChange = () => setOrientation(window.screen.orientation.type)\r\n        window.addEventListener('orientationchange', handleOrientationChange)\r\n        return () => window.removeEventListener('orientationchange', handleOrientationChange)\r\n    }, []);\r\n\r\n    return orientation;\r\n}","import * as React from 'react';\r\nimport { Popover, Typography, Button } from '@material-ui/core'\r\nimport {\r\n    Box,\r\n    Avatar,\r\n    Menu,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    IconButton,\r\n    Tooltip } from '@material-ui/core'\r\n\r\n\r\n\r\n\r\n\r\n// Icons\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport Settings from '@material-ui/icons/Settings';\r\n// import Logout from '@material-ui/icons/Logout';\r\n\r\n\r\n\r\n\r\n\r\nexport function InGameMenu(props) {\r\n    let { handleNewGameClick, handleUndoClick } = props\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const openMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const closeMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl)   // Is open if anchor element set.\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"text\"\r\n                aria-describedby={id} \r\n                onClick={openMenu}\r\n                sx={{\r\n                    color: 'common.black',\r\n                    bgcolor: 'background',\r\n                    position: 'absolute',\r\n                    top: '1%',\r\n                    right: '1%',\r\n                    zIndex: 9999,\r\n                    padding: 0,\r\n                    minWidth: '10px',\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={closeMenu}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{ \r\n                    vertical: 'top', \r\n                    horizontal: 'right', \r\n                }}\r\n            >\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={closeMenu}\r\n                    onClick={closeMenu}\r\n                    PaperProps={{\r\n                        elevation: 0,\r\n                        sx: {\r\n                            overflow: 'visible',\r\n                            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                            mt: 1.5,\r\n                            '& .MuiAvatar-root': {\r\n                                width: 32,\r\n                                height: 32,\r\n                                ml: -0.5,\r\n                                mr: 1,\r\n                            },\r\n                            '&:before': {\r\n                                content: '\"\"',\r\n                                display: 'block',\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 14,\r\n                                width: 10,\r\n                                height: 10,\r\n                                bgcolor: 'background.paper',\r\n                                transform: 'translateY(-50%) rotate(45deg)',\r\n                                zIndex: 0,\r\n                            },\r\n                        },\r\n                    }}\r\n                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                >\r\n                    <MenuItem>\r\n                        <NewGameButton \r\n                            handleClick={handleNewGameClick}\r\n                        />\r\n                    </MenuItem>\r\n                    <MenuItem>\r\n                        <UndoButton \r\n                            handleClick={handleUndoClick}\r\n                        />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </Popover>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction NewGameButton(props) {\r\n    let { handleClick } = props\r\n    return (\r\n        <Button\r\n            variant=\"outlined\"\r\n            startIcon={<ReplayIcon />}\r\n            onClick={() => handleClick()}\r\n            sx={{\r\n                width: '100%'\r\n            }}\r\n        >\r\n            New&nbsp;Game\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction UndoButton(props) {\r\n    let { handleClick } = props\r\n    return (\r\n        <Button\r\n            variant=\"outlined\"\r\n            startIcon={<UndoIcon />}\r\n            onClick={() => handleClick()}\r\n            sx={{\r\n                width: '100%'\r\n            }}\r\n        >\r\n            Undo&nbsp;Move\r\n        </Button>\r\n    )\r\n}","// A \"line\" is a set of four cellIds that together form a win.\r\n// There are four 'types' of Line: 'vertical', 'horizontal', 'upslash', 'downslash'\r\n// There are 64 lines and 42 cells. \r\n// This module exports two high-level constants that map these two types of id to one another.\r\n// 1) lineIdToCellIdsMap  could be renamed \"cellsInLine\". It takes a lineId 0-63 and gives back the four cells in it.\r\n// 2) cellIdToLineIdsMap  could be renamed \"linesThatIncludeCell\". It takes a cellId 0-41 and gives back the 3 to 13 lines that cell is part of.\r\n\r\n// Low-level Constants\r\nconst cellsPerCol = 6;\r\nconst cellsPerRow = 7;\r\nconst totalCells = cellsPerCol * cellsPerRow;\r\nconst linesPerCol = (cellsPerCol >= 4) ? (cellsPerCol - 3) : 0;\r\nconst linesPerRow = (cellsPerRow >= 4) ? (cellsPerRow - 3) : 0;\r\nconst numberOfVerticalLines = linesPerCol * cellsPerRow;\r\nconst numberOfHorizontalLines = linesPerRow * cellsPerCol;\r\nconst numberOfUpslashLines = linesPerCol * linesPerRow;\r\nconst numberOfDownslashLines = linesPerCol * linesPerRow;\r\n\r\n\r\n\r\n\r\nconst lineToCellsArray = [\r\n    [\r\n        0,\r\n        [\r\n            0,\r\n            7,\r\n            14,\r\n            21\r\n        ]\r\n    ],\r\n    [\r\n        1,\r\n        [\r\n            0,\r\n            1,\r\n            2,\r\n            3\r\n        ]\r\n    ],\r\n    [\r\n        2,\r\n        [\r\n            0,\r\n            8,\r\n            16,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        3,\r\n        [\r\n            1,\r\n            8,\r\n            15,\r\n            22\r\n        ]\r\n    ],\r\n    [\r\n        4,\r\n        [\r\n            1,\r\n            2,\r\n            3,\r\n            4\r\n        ]\r\n    ],\r\n    [\r\n        5,\r\n        [\r\n            1,\r\n            9,\r\n            17,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        6,\r\n        [\r\n            2,\r\n            9,\r\n            16,\r\n            23\r\n        ]\r\n    ],\r\n    [\r\n        7,\r\n        [\r\n            2,\r\n            3,\r\n            4,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        8,\r\n        [\r\n            2,\r\n            10,\r\n            18,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        9,\r\n        [\r\n            3,\r\n            10,\r\n            17,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        10,\r\n        [\r\n            3,\r\n            4,\r\n            5,\r\n            6\r\n        ]\r\n    ],\r\n    [\r\n        11,\r\n        [\r\n            3,\r\n            11,\r\n            19,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        12,\r\n        [\r\n            4,\r\n            11,\r\n            18,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        13,\r\n        [\r\n            5,\r\n            12,\r\n            19,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        14,\r\n        [\r\n            6,\r\n            13,\r\n            20,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        15,\r\n        [\r\n            7,\r\n            14,\r\n            21,\r\n            28\r\n        ]\r\n    ],\r\n    [\r\n        16,\r\n        [\r\n            7,\r\n            8,\r\n            9,\r\n            10\r\n        ]\r\n    ],\r\n    [\r\n        17,\r\n        [\r\n            7,\r\n            15,\r\n            23,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        18,\r\n        [\r\n            8,\r\n            15,\r\n            22,\r\n            29\r\n        ]\r\n    ],\r\n    [\r\n        19,\r\n        [\r\n            8,\r\n            9,\r\n            10,\r\n            11\r\n        ]\r\n    ],\r\n    [\r\n        20,\r\n        [\r\n            8,\r\n            16,\r\n            24,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        21,\r\n        [\r\n            9,\r\n            16,\r\n            23,\r\n            30\r\n        ]\r\n    ],\r\n    [\r\n        22,\r\n        [\r\n            9,\r\n            10,\r\n            11,\r\n            12\r\n        ]\r\n    ],\r\n    [\r\n        23,\r\n        [\r\n            9,\r\n            17,\r\n            25,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        24,\r\n        [\r\n            10,\r\n            17,\r\n            24,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        25,\r\n        [\r\n            10,\r\n            11,\r\n            12,\r\n            13\r\n        ]\r\n    ],\r\n    [\r\n        26,\r\n        [\r\n            10,\r\n            18,\r\n            26,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        27,\r\n        [\r\n            11,\r\n            18,\r\n            25,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        28,\r\n        [\r\n            12,\r\n            19,\r\n            26,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        29,\r\n        [\r\n            13,\r\n            20,\r\n            27,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        30,\r\n        [\r\n            14,\r\n            21,\r\n            28,\r\n            35\r\n        ]\r\n    ],\r\n    [\r\n        31,\r\n        [\r\n            14,\r\n            15,\r\n            16,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        32,\r\n        [\r\n            14,\r\n            22,\r\n            30,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        33,\r\n        [\r\n            15,\r\n            22,\r\n            29,\r\n            36\r\n        ]\r\n    ],\r\n    [\r\n        34,\r\n        [\r\n            15,\r\n            16,\r\n            17,\r\n            18\r\n        ]\r\n    ],\r\n    [\r\n        35,\r\n        [\r\n            15,\r\n            23,\r\n            31,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        36,\r\n        [\r\n            16,\r\n            23,\r\n            30,\r\n            37\r\n        ]\r\n    ],\r\n    [\r\n        37,\r\n        [\r\n            16,\r\n            17,\r\n            18,\r\n            19\r\n        ]\r\n    ],\r\n    [\r\n        38,\r\n        [\r\n            16,\r\n            24,\r\n            32,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        39,\r\n        [\r\n            17,\r\n            24,\r\n            31,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        40,\r\n        [\r\n            17,\r\n            18,\r\n            19,\r\n            20\r\n        ]\r\n    ],\r\n    [\r\n        41,\r\n        [\r\n            17,\r\n            25,\r\n            33,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        42,\r\n        [\r\n            18,\r\n            25,\r\n            32,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        43,\r\n        [\r\n            19,\r\n            26,\r\n            33,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        44,\r\n        [\r\n            20,\r\n            27,\r\n            34,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        45,\r\n        [\r\n            21,\r\n            22,\r\n            23,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        46,\r\n        [\r\n            21,\r\n            15,\r\n            9,\r\n            3\r\n        ]\r\n    ],\r\n    [\r\n        47,\r\n        [\r\n            22,\r\n            23,\r\n            24,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        48,\r\n        [\r\n            22,\r\n            16,\r\n            10,\r\n            4\r\n        ]\r\n    ],\r\n    [\r\n        49,\r\n        [\r\n            23,\r\n            24,\r\n            25,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        50,\r\n        [\r\n            23,\r\n            17,\r\n            11,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        51,\r\n        [\r\n            24,\r\n            25,\r\n            26,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        52,\r\n        [\r\n            24,\r\n            18,\r\n            12,\r\n            6\r\n        ]\r\n    ],\r\n    [\r\n        53,\r\n        [\r\n            28,\r\n            29,\r\n            30,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        54,\r\n        [\r\n            28,\r\n            22,\r\n            16,\r\n            10\r\n        ]\r\n    ],\r\n    [\r\n        55,\r\n        [\r\n            29,\r\n            30,\r\n            31,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        56,\r\n        [\r\n            29,\r\n            23,\r\n            17,\r\n            11\r\n        ]\r\n    ],\r\n    [\r\n        57,\r\n        [\r\n            30,\r\n            31,\r\n            32,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        58,\r\n        [\r\n            30,\r\n            24,\r\n            18,\r\n            12\r\n        ]\r\n    ],\r\n    [\r\n        59,\r\n        [\r\n            31,\r\n            32,\r\n            33,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        60,\r\n        [\r\n            31,\r\n            25,\r\n            19,\r\n            13\r\n        ]\r\n    ],\r\n    [\r\n        61,\r\n        [\r\n            35,\r\n            36,\r\n            37,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        62,\r\n        [\r\n            35,\r\n            29,\r\n            23,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        63,\r\n        [\r\n            36,\r\n            37,\r\n            38,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        64,\r\n        [\r\n            36,\r\n            30,\r\n            24,\r\n            18\r\n        ]\r\n    ],\r\n    [\r\n        65,\r\n        [\r\n            37,\r\n            38,\r\n            39,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        66,\r\n        [\r\n            37,\r\n            31,\r\n            25,\r\n            19\r\n        ]\r\n    ],\r\n    [\r\n        67,\r\n        [\r\n            38,\r\n            39,\r\n            40,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        68,\r\n        [\r\n            38,\r\n            32,\r\n            26,\r\n            20\r\n        ]\r\n    ]\r\n]\r\nexport const lineToCellsMap = new Map(lineToCellsArray)\r\n\r\nconst cellToLinesArray = [\r\n    [\r\n        0,\r\n        [\r\n            0,\r\n            1,\r\n            2\r\n        ]\r\n    ],\r\n    [\r\n        1,\r\n        [\r\n            1,\r\n            3,\r\n            4,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        2,\r\n        [\r\n            1,\r\n            4,\r\n            6,\r\n            7,\r\n            8\r\n        ]\r\n    ],\r\n    [\r\n        3,\r\n        [\r\n            1,\r\n            4,\r\n            7,\r\n            9,\r\n            10,\r\n            11,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        4,\r\n        [\r\n            4,\r\n            7,\r\n            10,\r\n            12,\r\n            48\r\n        ]\r\n    ],\r\n    [\r\n        5,\r\n        [\r\n            7,\r\n            10,\r\n            13,\r\n            50\r\n        ]\r\n    ],\r\n    [\r\n        6,\r\n        [\r\n            10,\r\n            14,\r\n            52\r\n        ]\r\n    ],\r\n    [\r\n        7,\r\n        [\r\n            0,\r\n            15,\r\n            16,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        8,\r\n        [\r\n            2,\r\n            3,\r\n            16,\r\n            18,\r\n            19,\r\n            20\r\n        ]\r\n    ],\r\n    [\r\n        9,\r\n        [\r\n            5,\r\n            6,\r\n            16,\r\n            19,\r\n            21,\r\n            22,\r\n            23,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        10,\r\n        [\r\n            8,\r\n            9,\r\n            16,\r\n            19,\r\n            22,\r\n            24,\r\n            25,\r\n            26,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        11,\r\n        [\r\n            11,\r\n            12,\r\n            19,\r\n            22,\r\n            25,\r\n            27,\r\n            50,\r\n            56\r\n        ]\r\n    ],\r\n    [\r\n        12,\r\n        [\r\n            13,\r\n            22,\r\n            25,\r\n            28,\r\n            52,\r\n            58\r\n        ]\r\n    ],\r\n    [\r\n        13,\r\n        [\r\n            14,\r\n            25,\r\n            29,\r\n            60\r\n        ]\r\n    ],\r\n    [\r\n        14,\r\n        [\r\n            0,\r\n            15,\r\n            30,\r\n            31,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        15,\r\n        [\r\n            3,\r\n            17,\r\n            18,\r\n            31,\r\n            33,\r\n            34,\r\n            35,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        16,\r\n        [\r\n            2,\r\n            6,\r\n            20,\r\n            21,\r\n            31,\r\n            34,\r\n            36,\r\n            37,\r\n            38,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        17,\r\n        [\r\n            5,\r\n            9,\r\n            23,\r\n            24,\r\n            31,\r\n            34,\r\n            37,\r\n            39,\r\n            40,\r\n            41,\r\n            50,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        18,\r\n        [\r\n            8,\r\n            12,\r\n            26,\r\n            27,\r\n            34,\r\n            37,\r\n            40,\r\n            42,\r\n            52,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        19,\r\n        [\r\n            11,\r\n            13,\r\n            28,\r\n            37,\r\n            40,\r\n            43,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        20,\r\n        [\r\n            14,\r\n            29,\r\n            40,\r\n            44,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        21,\r\n        [\r\n            0,\r\n            15,\r\n            30,\r\n            45,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        22,\r\n        [\r\n            3,\r\n            18,\r\n            32,\r\n            33,\r\n            45,\r\n            47,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        23,\r\n        [\r\n            6,\r\n            17,\r\n            21,\r\n            35,\r\n            36,\r\n            45,\r\n            47,\r\n            49,\r\n            50,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        24,\r\n        [\r\n            2,\r\n            9,\r\n            20,\r\n            24,\r\n            38,\r\n            39,\r\n            45,\r\n            47,\r\n            49,\r\n            51,\r\n            52,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        25,\r\n        [\r\n            5,\r\n            12,\r\n            23,\r\n            27,\r\n            41,\r\n            42,\r\n            47,\r\n            49,\r\n            51,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        26,\r\n        [\r\n            8,\r\n            13,\r\n            26,\r\n            28,\r\n            43,\r\n            49,\r\n            51,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        27,\r\n        [\r\n            11,\r\n            14,\r\n            29,\r\n            44,\r\n            51\r\n        ]\r\n    ],\r\n    [\r\n        28,\r\n        [\r\n            15,\r\n            30,\r\n            53,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        29,\r\n        [\r\n            18,\r\n            33,\r\n            53,\r\n            55,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        30,\r\n        [\r\n            21,\r\n            32,\r\n            36,\r\n            53,\r\n            55,\r\n            57,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        31,\r\n        [\r\n            17,\r\n            24,\r\n            35,\r\n            39,\r\n            53,\r\n            55,\r\n            57,\r\n            59,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        32,\r\n        [\r\n            20,\r\n            27,\r\n            38,\r\n            42,\r\n            55,\r\n            57,\r\n            59,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        33,\r\n        [\r\n            23,\r\n            28,\r\n            41,\r\n            43,\r\n            57,\r\n            59\r\n        ]\r\n    ],\r\n    [\r\n        34,\r\n        [\r\n            26,\r\n            29,\r\n            44,\r\n            59\r\n        ]\r\n    ],\r\n    [\r\n        35,\r\n        [\r\n            30,\r\n            61,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        36,\r\n        [\r\n            33,\r\n            61,\r\n            63,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        37,\r\n        [\r\n            36,\r\n            61,\r\n            63,\r\n            65,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        38,\r\n        [\r\n            32,\r\n            39,\r\n            61,\r\n            63,\r\n            65,\r\n            67,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        39,\r\n        [\r\n            35,\r\n            42,\r\n            63,\r\n            65,\r\n            67\r\n        ]\r\n    ],\r\n    [\r\n        40,\r\n        [\r\n            38,\r\n            43,\r\n            65,\r\n            67\r\n        ]\r\n    ],\r\n    [\r\n        41,\r\n        [\r\n            41,\r\n            44,\r\n            67\r\n        ]\r\n    ]\r\n]\r\nexport const cellToLinesMap = new Map(cellToLinesArray)\r\n\r\n\r\nexport const numberOfLines = lineToCellsMap.size\r\n\r\n// These were used once in development and do not need to rerun. It is easier on the client device to just send the copied in hard coded Maps\r\n// export const lineToCellsMap = generateLineToCellsMap()\r\n// export const numberOfLines = lineToCellsMap.size\r\n\r\nfunction generateLineToCellsMap() {\r\n    console.warn(`generateLineToCellsMap was called.  This compute heavy function should only run once per game.`)\r\n    let map = new Map()\r\n    let currentLineId = 0\r\n    for (let cell = 0; cell < totalCells; cell++) {\r\n        if (isStartOfVerticalLine(cell)) {\r\n            let line = verticalLineByStartCell(cell)\r\n            map.set(currentLineId++, line)\r\n        }\r\n        if (isStartOfHorizontalLine(cell)) {\r\n            let line = horizontalLineByStartCell(cell)\r\n            map.set(currentLineId++, line)\r\n        }\r\n        if (isStartOfUpslashLine(cell)) {\r\n            let line = upslashLineByStartCell(cell)\r\n            map.set(currentLineId++, line)\r\n        }\r\n        if (isStartOfDownslashLine(cell)) {\r\n            let line = downslashLineByStartCell(cell)\r\n            map.set(currentLineId++, line)\r\n        }\r\n    }\r\n    console.log(`Mapped each of the ${map.size} LineIds to the set of Cells in it.`)\r\n    console.log([...map.entries()])\r\n    return map\r\n}\r\nfunction verticalLineByStartCell(cellId) {\r\n    let line = [\r\n        cellId + (0 * cellsPerRow),\r\n        cellId + (1 * cellsPerRow),\r\n        cellId + (2 * cellsPerRow),\r\n        cellId + (3 * cellsPerRow)\r\n    ]\r\n    return line\r\n}\r\nfunction horizontalLineByStartCell(cellId) {\r\n    let line = [\r\n        cellId + 0,\r\n        cellId + 1,\r\n        cellId + 2,\r\n        cellId + 3\r\n    ]\r\n    return line\r\n}\r\nfunction upslashLineByStartCell(cellId) {\r\n    let line = [\r\n        cellId + (0 * cellsPerRow) + 0,\r\n        cellId + (1 * cellsPerRow) + 1,\r\n        cellId + (2 * cellsPerRow) + 2,\r\n        cellId + (3 * cellsPerRow) + 3\r\n    ]\r\n    return line\r\n}\r\nfunction downslashLineByStartCell(cellId) {\r\n    let line = [\r\n        cellId - (0 * cellsPerRow) + 0,\r\n        cellId - (1 * cellsPerRow) + 1,\r\n        cellId - (2 * cellsPerRow) + 2,\r\n        cellId - (3 * cellsPerRow) + 3\r\n    ]\r\n    return line\r\n}\r\n\r\n\r\n// export const cellToLinesMap = generateCellToLinesMap()\r\n\r\nfunction generateCellToLinesMap() {\r\n    console.warn(`cellToLinesMap was called.  This is a compute heavy function which should run once per game.`)\r\n    let cellToLinesMap = new Map()\r\n    for (let cell = 0; cell < totalCells; cell++) {\r\n        cellToLinesMap.set(cell, [])\r\n    }\r\n    for (let lineId = 0; lineId < numberOfLines; lineId++) {\r\n        let cellsInLine = lineToCellsMap.get(lineId)\r\n        cellsInLine.forEach(cell => {\r\n            let prevLinesList = cellToLinesMap.get(cell)\r\n            cellToLinesMap.set(cell, prevLinesList.concat(lineId))\r\n        })\r\n    }\r\n    console.log(`Mapped each of the ${totalCells} CellIds to the set of all Lines that include it.`)\r\n    console.log([...cellToLinesMap.entries()])\r\n\r\n    // cellsToLinesMap.forEach(logMapElement);\r\n    return cellToLinesMap\r\n}\r\n\r\n// FIRST level BOOLEAN LINE helpers             // Currently there is only a Cell.js functional Component, however if I defined a Cell Class I would think that I could turn these functions that take cellId as a parameter and turn them into something that 'reads better' like Cell.isStartOfVerticalLine() written on the Cell object so that it has built in access to the relevant cellId and can be used in a no-parameter fashion. ??? \r\nfunction isStartOfVerticalLine(cellId) {\r\n    const rowNumber = getRowByCellId(cellId)\r\n    return (cellsPerCol - rowNumber >= 4)\r\n}\r\nfunction isEndOfVerticalLine(cellId) {\r\n    const rowNumber = getRowByCellId(cellId)\r\n    return (rowNumber >= 3)\r\n}\r\nfunction isStartOfHorizontalLine(cellId) {\r\n    // If we are in the 0-th row then the minimum cellsPerCol that should return true is 4\r\n    const colNumber = getColByCellId(cellId)\r\n    return (cellsPerRow - colNumber >= 4)\r\n}\r\nfunction isStartOfUpslashLine(cellId) {\r\n    // A cell is the Start Of an Upslash Line IFF it is BOTH the \"start\" of a vertical line AND the \"start\" of a horizontal line.  \r\n    return (isStartOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\r\n}\r\nfunction isStartOfDownslashLine(cellId) {\r\n    // A cell is the Start Of an Downslash Line IFF it is BOTH the \"end\" of a vertical line AND the \"start\" of a horizontal line.  \r\n    return (isEndOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\r\n}\r\n\r\n// LOWEST LEVEL CELL-ROW-COL HELPERS\r\nfunction getRowByCellId(id) {\r\n    return (Math.floor(id / cellsPerRow))\r\n}\r\nfunction getColByCellId(id) {\r\n    return (id % cellsPerRow)\r\n}\r\nfunction getCellIdByRowCol(row, col) {\r\n    return (row * cellsPerRow + col);\r\n}\r\n\r\n","// MY Logical components\r\nimport { lineToCellsMap, cellToLinesMap } from './winningLineMaps'\r\n\r\n\r\nexport function gameIsOver(gameStatus) {\r\n    return (gameStatus === 'playerOneWins' || gameStatus === 'playerTwoWins' || gameStatus === 'gameDrawn')\r\n}\r\n\r\n// This function could be made more efficient through using sorted arrays and pointers that \r\n// enabled us to not re-scan the leading portion of setTwo when we know we are looking for a \r\n// higher number it only makes sense to look in higher indices. Besides that, early returns \r\n// could be added in case the lowest or highest numbers in setOne fall outside the range of \r\n// setTwo. This intersect is being made with setOne.length === 4 (cells in line) and a \r\n// potentially much longer setTwo (player's numbers)\r\nexport function intersect(setOne, setTwo) {\r\n    return setOne.filter(item => setTwo.includes(item))\r\n}\r\n\r\nexport function playerOnesNumbers(moveList) {\r\n    return moveList.filter((cell, turn) => turn % 2 === 0).filter(cell => cell !== -1)\r\n}\r\nexport function playerTwosNumbers(moveList) {\r\n    return moveList.filter((cell, turn) => turn % 2 === 1).filter(cell => cell !== -1)\r\n}\r\n\r\nexport function getBoardData(moveList) {\r\n    let data = new Array(42).fill(\"unclaimed\")\r\n    moveList.forEach((move, turn) => {\r\n        if (move !== -1) {\r\n            let player = turn % 2 === 0 ? \"playerOne\" : \"playerTwo\"\r\n            data[move] = player\r\n        }\r\n    })\r\n    return data\r\n}\r\n// const boardData = getBoardData(moveList)  I don't like that getColumnData is called 7 times and each time it calls getBoardData rather than caching this result and reusing it, updating it automatically only when the moveList updates. useEffect could help?\r\nexport function getColumnData(columnIndex, moveList) {\r\n    let boardData = getBoardData(moveList)\r\n    return boardData.filter((claimStatus, cellId) => cellId % 7 === columnIndex)\r\n}\r\n\r\nexport function nextPlayerColor(gameStatus) {\r\n    return gameIsOver(gameStatus) ? \"unclaimed\" : (gameStatus === \"playerOnesTurn\") ? \"playerOne\" : \"playerTwo\"\r\n}\r\n\r\n\r\nfunction getLastChipDropped(moveList) {\r\n    let ml = moveList.slice()\r\n    let lastCellId\r\n    do {\r\n        lastCellId = ml.pop()\r\n    } while (lastCellId === -1)\r\n    return lastCellId\r\n}\r\n\r\n// Returns ENUM: 'playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw'\r\n// This function efficiently checks to see if the last move created a win for the player who made it.\r\nexport function getGameStatus(moveList) {\r\n    let lastPlayerToMove = (moveList.length % 2 === 1) ? \"playerOne\" : \"playerTwo\"\r\n    let lastPlayersNumbers = (lastPlayerToMove === \"playerOne\") ? playerOnesNumbers(moveList) : playerTwosNumbers(moveList)\r\n    let lastMoveMade = Number(lastPlayersNumbers.slice(-1))\r\n    let linesAffectedByLastMove = cellToLinesMap.get(lastMoveMade)\r\n    for (let i = 0; i < linesAffectedByLastMove.length; i++) {\r\n        let line = linesAffectedByLastMove[i]\r\n        let cellsInLine = lineToCellsMap.get(line)\r\n        // For added efficiency I could at this point remove the lastMoveMade from cells in line and in the next line look for intersections of length 3.\r\n        if (intersect(cellsInLine, lastPlayersNumbers).length === 4) {\r\n            return (lastPlayerToMove === 'playerOne') ? 'playerOneWins' : 'playerTwoWins'\r\n        }\r\n    }\r\n    let nonSkippedTurns = moveList.filter(cellId => cellId !== -1)\r\n    if (nonSkippedTurns.length >= 42) {\r\n        return 'gameOverDraw'\r\n    }\r\n    else {\r\n        return (moveList.length % 2 === 0) ? 'playerOnesTurn' : 'playerTwosTurn'\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Logic\r\nimport { gameIsOver, nextPlayerColor } from '../logic/connectFourLogic'\r\n// Custom Hooks\r\nimport { useScreenWidth, useScreenHeight } from \"../hooks\"\r\n\r\n// MUI  components\r\nimport { Box, Container, Switch, Paper, Slide, FormControlLabel, Typography, Zoom } from '@material-ui/core'\r\n\r\n// Style & Layout Constants\r\nconst oneSixth = '16.666%'\r\nconst squarePercentage = '14.287%'\r\nconst rowHeightPercentage = '16.665%'\r\nconst columnWidthPercentage = '14.280%'\r\nconst headerHeightPercentage = columnWidthPercentage\r\nconst heightOfSixSquares = '85.714%'\r\n\r\nconst chipSizeRelativeToSquare = '84%'\r\n\r\nlet rowNumbers = [0, 1, 2, 3, 4, 5]\r\nlet columnNumbers = [0, 1, 2, 3, 4, 5, 6]\r\n\r\nexport function GameBoard(props) {\r\n    const { moveList, handleColumnClick, gameStatus } = props\r\n\r\n    const height = useScreenHeight()\r\n    const width = useScreenWidth()\r\n    const boardSideLength = (height <= width) ? height * 0.95 : width * 0.95\r\n    // const boardSideLength = (height <= width) ? height : width\r\n\r\n\r\n    function getColumnChipColors(columnIndex) {\r\n        let chipColors = boardChipColors().filter((player, cellId) => cellId % 7 === columnIndex)\r\n        // console.log(`CHIP COLORS for Column ${columnIndex}: ${chipColors}`)\r\n        return chipColors\r\n    }\r\n    function boardChipColors() {\r\n        let chipColors = new Array(42).fill('unclaimed')\r\n        moveList.forEach((cellId, turnNumber) => {\r\n            if (cellId !== -1) {              // -1 in moveList indicates a turn skipped due to wrong answer to math question\r\n                let player = (turnNumber % 2 === 0) ? \"playerOne\" : \"playerTwo\"  // Player One's moves are at Even indices in the moveList\r\n                chipColors[cellId] = player\r\n            }\r\n        })\r\n        // console.log(`Board Data: ${chipColors}`)\r\n        return chipColors\r\n    }\r\n    \r\n    return (\r\n        <Container id=\"gameBoard\"\r\n            disableGutters\r\n            sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                height: '95%',\r\n                width: '95%',\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-end'\r\n            }}\r\n        >\r\n            <InfoHeaderRow gameStatus={gameStatus} />  \r\n\r\n            {columnNumbers.map((columnIndex) => {\r\n                let chipColors = getColumnChipColors(columnIndex)\r\n                {/* console.log(`Column Chip Colors for column ${columnIndex}: ${chipColors}`) */}\r\n                return (\r\n                    <Column \r\n                        key={columnIndex}\r\n                        index={columnIndex}\r\n                        chipColors={chipColors}\r\n                        gameStatus={gameStatus}\r\n                        nextPlayerColor={nextPlayerColor(gameStatus)}\r\n                        handleColumnClick={handleColumnClick}\r\n                    />\r\n                )\r\n            })}\r\n            \r\n            <RoundedBoardFrame />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction InfoHeaderRow(props) {\r\n    let { gameStatus } = props\r\n    let gameOver = gameIsOver(gameStatus)\r\n    let message = \"\"\r\n    if (gameOver) {\r\n        message = (gameStatus === \"playerOneWins\" ? \"Player One Wins!\" : \"Player Two Wins!\")\r\n    }\r\n    \r\n    return (\r\n        <Box id='infoHeaderRow'\r\n            sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: headerHeightPercentage,\r\n                zIndex: 15,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            <Zoom in={message !== \"\"} style={{ transitionDelay: '300ms' }} >\r\n                <Typography variant='h2' align='center' >\r\n                    {message}\r\n                </Typography>\r\n            </Zoom>\r\n            \r\n            \r\n        </Box>\r\n    )\r\n}\r\nfunction RoundedBoardFrame(props) {\r\n    return (\r\n        <Box id='roundedGameBorder'\r\n            sx={{\r\n                boxSizing: 'content-box',\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                left: '-9px',\r\n                width: 'calc(100% - 2px)',\r\n                height: heightOfSixSquares,\r\n                border: \"10px solid\",\r\n                borderColor: \"board.main\",\r\n                borderRadius: \"10px\",\r\n                borderTop: 0\r\n            }}\r\n        />\r\n    )\r\n}\r\nfunction Column(props) {\r\n    const { index, chipColors, gameStatus, nextPlayerColor, handleColumnClick } = props\r\n    let columnLetter = ''\r\n    if (!gameIsOver(gameStatus)) {\r\n        switch (index) {\r\n            case 0:\r\n                columnLetter = 'A'\r\n                break;\r\n            case 1:\r\n                columnLetter = 'B'\r\n                break;\r\n            case 2:\r\n                columnLetter = 'C'\r\n                break;\r\n            case 3:\r\n                columnLetter = 'D'\r\n                break;\r\n            case 4:\r\n                columnLetter = 'E'\r\n                break;\r\n            case 5:\r\n                columnLetter = 'F'\r\n                break;\r\n            case 6:\r\n                columnLetter = 'G'\r\n                break;\r\n            default:\r\n                columnLetter = 'error'\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <Box id=\"column\" \r\n            // ref={hoverRef} \r\n            onClick={() => handleColumnClick(index)}\r\n            sx={{\r\n                position: 'relative',\r\n                width: squarePercentage,\r\n                height: '100%',\r\n                zIndex: 9,\r\n                '&:hover #hoverChip': {\r\n                    // backgroundColor: `chip.playerOne`,\r\n                    backgroundColor: `chip.${nextPlayerColor}`,\r\n                },\r\n            }}\r\n        >\r\n            <HoverChipArea columnLetter={columnLetter} />\r\n            <ChipContainer chipColors={chipColors} />\r\n            <ColumnOfSquaresWithHoles />\r\n        </Box>\r\n    );\r\n}\r\nColumn.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    nextPlayerColor: PropTypes.oneOf(['playerOne', 'playerTwo', 'unclaimed']),\r\n    handleColumnClick: PropTypes.func,\r\n}\r\n\r\nfunction Chip(props) {\r\n    const { id, color } = props\r\n    let claimed = (color !== \"unclaimed\")\r\n    let bgcolor = `chip.${color}`\r\n    return (\r\n        <Slide in={claimed} \r\n            direction=\"down\"\r\n            // easing=\"easing.parabolicAcceleration\"\r\n            // easing={{ enter: 'transitions.easing.easeOut', exit: 'transitions.easing.sharp' }}\r\n        >\r\n            <Box id=\"transparentSquareFrame\"\r\n                sx={{\r\n                    width: '100%',\r\n                    height: rowHeightPercentage,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Box id=\"chip\"\r\n                    sx={{\r\n                        borderRadius: '50%',\r\n                        zIndex: 'chip',\r\n                        bgcolor: bgcolor,\r\n                        width: chipSizeRelativeToSquare,\r\n                        height: chipSizeRelativeToSquare,\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Slide>\r\n\r\n    )\r\n}\r\nChip.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    color: PropTypes.oneOf(['playerOne', 'playerTwo', 'unclaimed']),\r\n}\r\n\r\nfunction HoverChipArea(props) {\r\n    return (\r\n        <Box id=\"hoverChipContainer\"\r\n            sx={{\r\n                // border: 'solid red 1px',\r\n                width: '100%',\r\n                height: squarePercentage,\r\n                zIndex: 8,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}\r\n        >\r\n            <Box id=\"hoverChip\"\r\n                sx={{\r\n                    bgcolor: 'background',\r\n                    width: chipSizeRelativeToSquare,\r\n                    height: chipSizeRelativeToSquare,\r\n                    borderRadius: '50%',\r\n                    zIndex: 8,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-end',\r\n                    fontSize: '2rem'\r\n                }}\r\n            >\r\n                {props.columnLetter}  \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nfunction ChipContainer(props) {\r\n    return (\r\n        <Box id=\"chipContainer\"\r\n            sx={{\r\n                bgcolor: 'primary.main',\r\n                width: '100%',\r\n                height: '100%',\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                bgcolor: 'transparent',\r\n                height: heightOfSixSquares,\r\n                zIndex: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column-reverse',\r\n            }}\r\n        >\r\n            {props.chipColors.map((color, index) => {\r\n                return <Chip\r\n                    key={index}\r\n                    id={index}\r\n                    color={color}\r\n                // transition={false}\r\n                />\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\nfunction ColumnOfSquaresWithHoles(props) {\r\n    function SquareWithHole(props) {\r\n        return (\r\n            <Box id=\"squareWithHole\"\r\n                key={props.index}\r\n                sx={{\r\n                    overflow: 'hidden',\r\n                    width: '100%',\r\n                    height: oneSixth,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    boxShadow: '0px 1px 1px 1px #0039cb',\r\n                }}\r\n            >\r\n                <Box id=\"hole\"\r\n                    sx={{\r\n                        boxShadow: \"0 0 0 99px #0039cb\",\r\n                        borderRadius: '50%',\r\n                        bgcolor: 'transparent',\r\n                        width: chipSizeRelativeToSquare,\r\n                        height: chipSizeRelativeToSquare,\r\n                    }}\r\n                />\r\n            </Box>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Box id=\"columnOfSquares\"\r\n            sx={{\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                bgcolor: 'transparent',\r\n                width: '100%',\r\n                height: heightOfSixSquares,\r\n                zIndex: 'board',\r\n                display: 'flex',\r\n                flexDirection: 'column-reverse',\r\n            }}\r\n        >\r\n            {rowNumbers.map((item, index) => {\r\n                return (<SquareWithHole key={index} />)\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n","export function chooseRandomFromArray(array) {\r\n    let randomIndex = randomInt(0, array.length)\r\n    let choice = array[randomIndex]\r\n    // console.log(`CHOICE: ${choice}`);\r\n    return choice\r\n}\r\n\r\nexport function randomInt(min, max) { //The maximum is exclusive and the minimum is inclusive\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n}","import { randomInt, chooseRandomFromArray } from \"./lowLevelHelpers\";\r\n\r\n\r\nexport function blankQuestion() {\r\n    return {\r\n        type: \"missingSumThree\",\r\n        vars: [0,0,0,0],\r\n        correctAnswer: 0,\r\n        instructions: \"\",\r\n        equationString: `0 + 0 + 0 = __`,\r\n        inputType: \"textField\",\r\n    }\r\n\r\n}\r\n\r\nexport function generateQuestion(mathTopics, score) {\r\n    const topic = chooseRandomFromArray(mathTopics)\r\n    console.log(`GENERATING QUESTION!!! with topic \"${topic}\" and ${score} questions Right So Far`)\r\n    let question\r\n    if (topic === \"combining\") {\r\n        question = getCombiningQuestion(pickCombiningDifficulty(score))\r\n    }\r\n    else if (topic === \"multiplying\") {\r\n        // question = getMultiplyingQuestion(pickMultiplyingDifficulty(score))\r\n        question = getMultiplyingQuestion(pickCombiningDifficulty(score))\r\n    }\r\n    // else if (topic === \"fractions\") {\r\n    //     question = getFractionsQuestion(difficulty)\r\n    // }\r\n    // else if (topic === \"exponents\") {\r\n    //     question = getExponentsQuestion(difficulty)\r\n    // }\r\n    // else if (topic === \"algebra\") {\r\n    //     question = getAlgebraQuestion(difficulty)\r\n    // }\r\n    else {\r\n        console.error(`FAILED TO GET QUESTION!!! with topic \"${topic}\" and ${score} questions Right So Far`)\r\n    }\r\n    return question\r\n\r\n}\r\n\r\nfunction pickCombiningDifficulty(score) {\r\n    if (score < 6) {\r\n        return \"easy\"\r\n    }\r\n    else if (score < 12) {\r\n        return \"medium\"\r\n    }\r\n    else if (score >= 12) {\r\n        return \"hard\"\r\n    }\r\n    else {\r\n        console.error(`Invalid number of question right so far: ${score}`);\r\n    }\r\n    return\r\n}\r\n\r\nfunction getCombiningQuestion(difficulty) {\r\n    let types = [\r\n        \"missingSumTwo\",\r\n        \"missingAddendTwo\",\r\n        \"missingSumThree\",\r\n        \"missingAddendThree\",\r\n    ]\r\n        // \"combineAndCompare\"   // a + b _ c - d\r\n        // \"missingDifference\",  // a - b = _\r\n        // \"missingMinuend\",     // a - _ = c\r\n        // \"howFarApart\",        // a and b\r\n    \r\n    let type = chooseRandomFromArray(types)\r\n    console.log(`Get Combining question type: \"${type}\"`);\r\n    let vars = getCombiningFact(type, difficulty) \r\n    let correctAnswer = getCorrectAnswer(type, vars)\r\n    let instructions = getInstructions(type)\r\n    let equationString = getEquationString(type, vars)\r\n    let inputType = getInputType(type, vars)\r\n\r\n    let question = {\r\n        type: type,\r\n        vars: vars,\r\n        correctAnswer: correctAnswer,\r\n        instructions: instructions,\r\n        equationString: equationString,\r\n        inputType: inputType,\r\n    }\r\n    console.log(`Generated Combining Question --> ${JSON.stringify(question, null, 4)}`);\r\n    return question\r\n    \r\n    \r\n    \r\n}\r\n\r\n\r\n// Returns a 3 or 4 element array where the last element is the sum of the others\r\nfunction getCombiningFact(type, difficultyLevel) {\r\n    const getEasyAddend = () => { return randomInt(1, 20)  }\r\n    const getMediumAddend = () => { return randomInt(20, 99) }\r\n    const getHardAddend = () => { return randomInt(99, 999) }\r\n    \r\n    // A + B = C\r\n    if ([\"missingSumTwo\", \"missingAddendTwo\"].includes(type)) {\r\n        let a = (difficultyLevel === \"hard\") ? getHardAddend() : getMediumAddend()\r\n        let b = (difficultyLevel === \"easy\") ? getEasyAddend() : getMediumAddend()\r\n        let c = a + b\r\n        console.log(`Combining Vars of difficulty \"${difficultyLevel}\": ${[a, b, c]}`);\r\n        return [a, b, c]\r\n    }\r\n    else if ([\"missingSumThree\", \"missingAddendThree\"].includes(type)) {\r\n        let a = (difficultyLevel === \"hard\") ? getHardAddend() : getEasyAddend()\r\n        let b = (difficultyLevel === \"easy\") ? getEasyAddend() : getMediumAddend()\r\n        let c = (difficultyLevel === \"easy\") ? getEasyAddend() : getMediumAddend()\r\n        let d = a + b + c\r\n        console.log(`Combining Vars of difficulty \"${difficultyLevel}\": ${[a, b, c, d]}`);\r\n        return [a, b, c, d]\r\n    }\r\n    else {\r\n        console.error(`Failed to get combining fact of type: \"${type}\" difficulty Level \"${difficultyLevel}\"`);\r\n    }\r\n}\r\n\r\n\r\nfunction getMultiplyingQuestion(difficultyLevel) {\r\n\r\n}\r\nfunction getFractionsQuestion(difficultyLevel) {\r\n\r\n}\r\nfunction getExponentsQuestion(difficultyLevel) {\r\n\r\n}\r\nfunction getAlgebraQuestion(difficultyLevel) {\r\n\r\n}\r\n\r\nfunction getEquationString(type, vars) {\r\n    let questionTypeToEquationStringMap = new Map([\r\n        [\"missingSumTwo\", `${vars[0]} + ${vars[1]} = __`],\r\n        [\"missingSumThree\", `${vars[0]} + ${vars[1]} + ${vars[2]} = __`],\r\n        [\"missingAddendTwo\", `${vars[0]} + __ = ${vars[2]}`],\r\n        [\"missingAddendThree\", `${vars[0]} + __ + ${vars[2]} = ${vars[3]}`],\r\n        [\"missingProductTwo\", `${vars[0]} x ${vars[1]} = __}`],\r\n        [\"missingFactorTwo\", `${vars[0]} x __ = ${vars[2]}`],\r\n        [\"completeMultiplication\", `${vars[0]} x ${vars[1]} = ${vars[2]} x __`],\r\n        [\"compareFractions\", \"FRACTIONS NOT BUILT YET\"],\r\n        [\"compareSums\", `${vars[0]} + ${vars[1]} __ ${vars[2]} + ${vars[3]}`],\r\n        [\"divisibility\", \"divisibilityCheckboxes NOT BUILT YET\"],\r\n    ])\r\n    if (questionTypeToEquationStringMap.has(type)) {\r\n        console.log(`Equation String: ${questionTypeToEquationStringMap.get(type)}`);\r\n        return questionTypeToEquationStringMap.get(type)\r\n    }\r\n    else {\r\n        console.error(`Failed to getEquationString with type: \"${type}\" and vars: \"${vars}\"`)\r\n    }\r\n}\r\n\r\nfunction getInputType(type) {\r\n    let questionTypeToInputTypeMap = new Map([\r\n        [\"missingSumTwo\", \"textField\"],\r\n        [\"missingSumThree\", \"textField\"],\r\n        [\"missingAddendTwo\", \"textField\"],\r\n        [\"missingAddendThree\", \"textField\"],\r\n        [\"missingProductTwo\", \"textField\"],\r\n        [\"missingFactorTwo\", \"textField\"],\r\n        [\"completeMultiplication\", \"textField\"],\r\n        [\"compareFractions\", \"compareButtons\"],\r\n        [\"compareSums\", \"compareButtons\"],\r\n        [\"divisibility\", \"divisibilityCheckboxes\"],\r\n    ])\r\n    if (questionTypeToInputTypeMap.has(type)) {\r\n        // console.log(`Input Type: ${questionTypeToInputTypeMap.get(type)}`);\r\n        return questionTypeToInputTypeMap.get(type)\r\n    }\r\n    else {\r\n        console.error(`Failed to getInputType with type: \"${type}\"`)\r\n    }\r\n}\r\n\r\nfunction getCorrectAnswer(type, vars) {\r\n    if (vars === undefined) {\r\n        console.error(`Correct Answer called with no Vars.`);\r\n        return -1\r\n    }\r\n    let questionTypeToCorrectAnswerMap = new Map([\r\n        [\"missingSumTwo\", vars[vars.length - 1]],\r\n        [\"missingSumThree\", vars[vars.length - 1]],\r\n        [\"missingAddendTwo\", vars[1]],\r\n        [\"missingAddendThree\", vars[1]],\r\n        [\"missingProductTwo\", vars[vars.length - 1]],\r\n        [\"missingFactorTwo\", vars[1]],\r\n        [\"completeMultiplication\", vars[3]],\r\n        [\"compareFractions\", \"compareButtons\"],\r\n        [\"compareSums\", \"compareButtons\"],\r\n        [\"divisibility\", \"divisibilityCheckboxes\"]\r\n    ])\r\n    if (questionTypeToCorrectAnswerMap.has(type)) {\r\n        const correctAnswer = questionTypeToCorrectAnswerMap.get(type)\r\n        console.log(`Correct Answer: ${correctAnswer}`);\r\n        return correctAnswer\r\n    }\r\n    else {\r\n        console.error(`Failed to getCorrectAnswer with type: \"${type}\" and vars: \"${vars}\"`)\r\n    }\r\n}\r\n\r\nfunction getInstructions(type) {\r\n    let questionTypeToInstructionsMap = new Map([\r\n        [\"double\", chooseRandomFromArray([\"Double it!\", \"Add it to itself\"])],\r\n        [\"triple\", chooseRandomFromArray([\"Triple it!\", \"Three of them\"])],\r\n        [\"quadruple\", chooseRandomFromArray([\"Quadruple it!\", \"Double double it!\"])],\r\n        [\"half\", chooseRandomFromArray([\"Half it!\", \"Add it to itself\"])],\r\n        [\"third\", chooseRandomFromArray([\"What's a third of\", \"Cut in three\"])],\r\n        [\"quarter\", chooseRandomFromArray([\"Quarter it!\", \"Half half it!\", \"What's a fourth of\"])],\r\n\r\n        [\"missingSumTwo\", chooseRandomFromArray([\"What's the Sum?\", \"Find the Total.\"])],\r\n        [\"missingSumThree\", chooseRandomFromArray([\"What's the Sum?\", \"Find the Total.\"])],\r\n        [\"missingAddendTwo\", chooseRandomFromArray([\"What's missing?\", \"How many more?\"])],\r\n        [\"missingAddendThree\", chooseRandomFromArray([\"What's missing?\", \"How many more?\"])],\r\n        [\"missingProductTwo\", chooseRandomFromArray([\"Find the Product.\", \"Multiply.\"])],\r\n        [\"missingFactorTwo\", chooseRandomFromArray([\"What's missing?\", \"How many groups?\"])],\r\n        [\"completeMultiplication\", chooseRandomFromArray([\"Find that factor!\", \"How many copies?\"])],\r\n        [\"compareFractions\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\r\n        [\"compareSums\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\r\n        [\"divisibility\", chooseRandomFromArray([\"Is divisible by...\", \"Is a multiple of...\"])],\r\n    ])\r\n    if (questionTypeToInstructionsMap.has(type)) {\r\n        const instructions = questionTypeToInstructionsMap.get(type)\r\n        console.log(`Instructions for Question type \"${type}\"--> \"${instructions}\"`);\r\n        return instructions\r\n    }\r\n    else {\r\n        console.error(`Failed to getInstructions with type: \"${type}\"`)\r\n    }\r\n}","import React, { useState } from 'react'\r\n\r\n\r\n// MUI  components\r\nimport { Box, Button, Dialog, Zoom, Typography, \r\n    TextField, FormControl, InputLabel, OutlinedInput, FormHelperText,  \r\n} from '@material-ui/core'\r\nimport { generateQuestion } from '../logic/questionGenerator'\r\n\r\n// Style & Layout Constants\r\nconst instructionsHeight = \"30%\"\r\nconst equationHeight = \"35%\"\r\nconst inputHeight = \"35%\"\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom ref={ref} {...props} />;\r\n})\r\n\r\n\r\n\r\nexport function MathQuestionModal(props) {\r\n    let { mathTopics, topic, score, turnNumber, open, handleAnswerSubmit, boardSideLength } = props\r\n    \r\n    const [question, setQuestion] = React.useState(generateQuestion(mathTopics, score))\r\n    // let question = generateQuestion(mathTopics, score)\r\n    console.log(`NEW QUESTION: ${JSON.stringify(question, null, 4)}`)\r\n\r\n    \r\n    let { type, vars, correctAnswer, instructions, equationString } = question\r\n\r\n    const [playersAnswer, setPlayersAnswer] = React.useState(\"\")\r\n    const [headerText, setHeaderText] = React.useState(instructions)\r\n\r\n    const answerIsNum = /^\\d+$/.test(playersAnswer)\r\n    const error = (playersAnswer.length > 0 && !answerIsNum)\r\n    \r\n    function answerIsCorrect(pa = playersAnswer, ca = correctAnswer) {\r\n        return (Number(pa.trim()) === ca)\r\n    }\r\n    const handlePlayersAnswerChange = (event) => {\r\n        let updatedAnswer = event.target.value.trim()\r\n        setPlayersAnswer(updatedAnswer)\r\n    }\r\n    function handleSubmitButtonClick() {\r\n        if (error) {\r\n            console.warn(`Returning early from answer submit b/c answer is blank or not a number.`);\r\n            return -1\r\n        }\r\n        const correct = answerIsCorrect()\r\n        const answerFeedbackHeaderText = (correct ? \"Correct!\" : `Nope. It was ${correctAnswer}.`)\r\n        setHeaderText(answerFeedbackHeaderText)\r\n        console.log(`answerFeedbackHeaderText: ${answerFeedbackHeaderText} `)\r\n        handleAnswerSubmit(correct)\r\n        setTimeout(() => {\r\n            setPlayersAnswer(\"\")\r\n            setHeaderText(instructions)\r\n            setQuestion(generateQuestion(mathTopics, score))\r\n        }, 1500);\r\n\r\n    }\r\n\r\n    return (\r\n        <Dialog \r\n            keepMounted\r\n            disableEscapeKeyDown\r\n            open={open}\r\n            onBackdropClick={() => {}}  // disable close on bg click\r\n            aria-describedby=\"math-question-dialog\"\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth='md'\r\n            PaperProps={{\r\n                style: {\r\n                    margin: `${0.05 * boardSideLength}px`,\r\n                    height: `${0.9 * boardSideLength}px`,\r\n                    width: `${0.9 * boardSideLength}px`,\r\n                    borderRadius: '50%',\r\n                    justifySelf: 'flex-start',\r\n                    alignSelf: 'flex-start'\r\n\r\n                }\r\n            }}\r\n        >\r\n            <HeaderText \r\n                // key={1}\r\n                key={turnNumber}  // May be able to use key prop to force state reset to initial.\r\n                headerText={headerText}\r\n            />\r\n            <QuestionEquation \r\n                equationString={equationString}\r\n            />\r\n            <AnswerInputComponent \r\n                question={question}\r\n                error={error}\r\n                handlePlayersAnswerChange={handlePlayersAnswerChange}\r\n                handleSubmitButtonClick={handleSubmitButtonClick}\r\n            />\r\n        </Dialog>\r\n    )\r\n\r\n    \r\n    \r\n    function HeaderText(props) {\r\n        return (\r\n            <Typography id=\"Instructions\"\r\n                variant='h3'\r\n                sx={{\r\n                    height: instructionsHeight,\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexFlow: 'row wrap',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-end',\r\n                }}\r\n            >\r\n                {props.headerText}\r\n            </Typography>\r\n        )\r\n    }\r\n    function QuestionEquation(props) {\r\n        const { equationString } = props\r\n        const fontStyle = (equationString.length > 14) ? 'h2' : 'h1'\r\n\r\n        return (\r\n            <Typography variant={fontStyle} \r\n                sx={{\r\n                    width: '100%',\r\n                    height: equationHeight,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    overflow: 'visible',\r\n                }}\r\n            >\r\n                {equationString}\r\n            </Typography>\r\n        )\r\n    }\r\n    function AnswerInputComponent(props) {\r\n        const { question, error, handleSubmitButtonClick, handlePlayersAnswerChange } = props\r\n        const answerInputType = question.inputType\r\n\r\n        if (answerInputType === \"textField\") {\r\n            return (\r\n                <NumericalTextInput\r\n                    error={error}\r\n                    handleSubmitButtonClick={handleSubmitButtonClick}\r\n                />\r\n            )\r\n        }\r\n        else if (answerInputType === \"compareButtons\") {\r\n            return (\r\n                <CompareButtons \r\n                    // handleAnswerSubmit={handleAnswerSubmit}\r\n                    // handleSubmitButtonClick={handleSubmitButtonClick}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            console.log(`getInputComponent failed. Invalid answerInputType: ${answerInputType}`)\r\n        }\r\n\r\n        function NumericalTextInput(props) {\r\n            const { error, handleSubmitButtonClick } = props\r\n            \r\n\r\n            return (\r\n                <Box sx={{\r\n                    height: inputHeight,\r\n                    width: '100%',\r\n                    padding: '0 20%',\r\n                }}>\r\n                    <FormControl \r\n                        id=\"answer-input-form\"\r\n                        color=\"primary\"\r\n                        error={error}\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexFlow: 'row nowrap',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'flex-start',\r\n                        }}\r\n                    >\r\n                        <InputLabel>{(error === false) ? \"Your Answer\" : \"Enter a whole number\"}</InputLabel>\r\n                        <OutlinedInput\r\n                            label={(error === false) ? \"Your Answer\" : \"Enter a whole number\"}\r\n                            value={playersAnswer}\r\n                            id=\"answer-input\"\r\n                            fullWidth\r\n                            size=\"medium\"\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            // type=\"number\"\r\n                            type=\"tel\"\r\n                            // pattern=\"\\d*\"\r\n                            pattern='[0-9]*'\r\n                            onChange={handlePlayersAnswerChange}\r\n                            inputProps={{ \r\n                                style: { fontSize: '2rem', height: '2rem' }\r\n                            }}\r\n                            sx={{ width: '62%' }}\r\n                            onKeyDown={(event) => {\r\n                                if (event.key === \"Enter\") {\r\n                                    handleSubmitButtonClick()\r\n                                }\r\n                            }}\r\n                        />\r\n                        {/* <FormHelperText \r\n                            label={(error === false) ? \"\" : \"Enter a whole number\"}\r\n                        /> */}\r\n                        <SubmitButton\r\n                            disabled={error}\r\n                            playersAnswer={playersAnswer}\r\n                            correctAnswer={correctAnswer}\r\n                            handleSubmitButtonClick={handleSubmitButtonClick}\r\n                            \r\n\r\n                        />\r\n                    </FormControl>\r\n                </Box>\r\n\r\n\r\n            )\r\n        }\r\n        function SubmitButton(props) {\r\n            const { playersAnswer, correctAnswer, handleSubmitButtonClick } = props\r\n            return (\r\n                <Button\r\n                    onClick={handleSubmitButtonClick}\r\n                    variant='contained'\r\n                    // size=\"large\"\r\n                    sx={{ \r\n                        ml: 1, \r\n                        px: 2.5,\r\n                        lineHeight: '3rem',\r\n                        width: '42%'\r\n                    }}\r\n                    // children=\"Check\"\r\n                    children=\"Submit\"\r\n                />\r\n            )\r\n        }\r\n\r\n        function CompareButtons(props) {\r\n            // let { handleAnswerSubmit, handleSubmitButtonClick } = props\r\n\r\n\r\n            return (\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}\r\n\r\n                >\r\n                    <Button />\r\n                    <Button />\r\n\r\n                    <Button />\r\n\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n    createTheme,\r\n    responsiveFontSizes,\r\n} from '@material-ui/core/styles';\r\n\r\nimport { useScreenWidth, useScreenHeight } from \"./hooks\"\r\nimport { height, width } from '@material-ui/system'\r\n\r\n// const height = useScreenHeight()\r\n// const width = useScreenWidth()\r\n// const boardSideLength = (height <= width) ? height * 0.95 : width * 0.95\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#669944',\r\n            main: '#2e6b12',\r\n            dark: '#004000',  // Color applied on Button Hover\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        secondary: {\r\n            light: '#FFFFF',\r\n            // main: 'rgba(46, 107, 18, 0.8)',  // washed out shade of primary.main\r\n            main: '#78ba59',\r\n            dark: '#004000',  // Color applied on Button Hover\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        text: {\r\n            primary: 'rgba(0, 0, 0, 0.87)',\r\n            secondary: 'rgba(0, 0, 0, 0.54)',\r\n            disabled: 'rgba(0, 0, 0, 0.38)',\r\n            hint: 'rgba(0, 0, 0, 0.38)',\r\n        },\r\n        action: {\r\n            disabledBackground: '#2e6b12',\r\n            disabledOpacity: '0.5'\r\n        },\r\n        board: {\r\n            light: '#2962ff',\r\n            main: '#0039cb',\r\n            dark: '#001399',\r\n        },\r\n        chip: {\r\n            playerOne: '#d50000',  // red\r\n            playerTwo: '#ffea00',  // yellow\r\n            unclaimed: '#b3e5fc',  // light blue\r\n        },\r\n        background: '#b3e5fc',\r\n        white: '#FFFFFF',\r\n        transparent: 'rgba(0, 0, 0, 0)',\r\n        selectedButton: 'rgba(46, 107, 18, 1.0)',     // Same as primary.main\r\n        unselectedButton: 'rgba(46, 107, 18, 0.65)',\r\n    },\r\n    components: {\r\n        MuiPaper: {\r\n            styleOverrides: {  // Name of the slot\r\n                root: {        // Some CSS\r\n                    backgroundColor: '#fff',\r\n                },\r\n            },\r\n        },\r\n        // MuiPaper: {\r\n        //     styleOverrides: {  // Name of the slot\r\n        //         root: {        // Some CSS\r\n        //             backgroundColor: '#fff',\r\n        //             borderRadius: '50%',\r\n        //             // borderRadius: '5%',\r\n        //             height: 'min(85vh, 85vw)',\r\n        //             width: 'min(85vh, 85vw)',\r\n        //             transform: 'translate(0, 27vh)',\r\n        //             // display: 'flex',\r\n        //             // justifyContent: 'center',\r\n\r\n        //         },\r\n        //     },\r\n        // },\r\n    },\r\n    typography: {\r\n        button: {\r\n            fontSize: '1.0rem',\r\n            fontWeight: '700'\r\n        }\r\n    },\r\n    status: {\r\n       \r\n    },\r\n    shape: {\r\n        borderRadius: 8,\r\n    },\r\n    spacing: 8,\r\n    transitions: {\r\n        easing: {\r\n            bounce: \"cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\r\n            parabolicAcceleration: \"cubic-bezier(0.5, 0.0, 1.0, 0.5)\"\r\n        }\r\n    },\r\n    zIndex: {\r\n        chip: 10,\r\n        board: 20\r\n    }\r\n\r\n});\r\n\r\nexport default responsiveFontSizes(theme, {factor: 2})\r\n// https://mui.com/customization/theming/#responsivefontsizes-theme-options-theme","import React from 'react'\r\n\r\n// PAGES\r\nimport WelcomePage from \"./pages/Welcome\"\r\n// import SettingsPage from \"./pages/Settings\"\r\n// import PlayPage from \"./pages/Play\"\r\nimport InfoPage from \"./pages/Info\"\r\n// MY components\r\nimport { InGameMenu } from \"./modals/Menu\";\r\nimport { GameBoard } from \"./pages/GameBoard\";\r\nimport { MathQuestionModal } from \"./modals/MathQuestionModal\";\r\n// import { GameSettingsModal } from \"./components/GameSettingsModal\";\r\n\r\n// Game Logic\r\nimport { gameIsOver, getColumnData, getGameStatus, playerOnesNumbers, playerTwosNumbers } from './logic/connectFourLogic'\r\n// import { blankQuestion, generateQuestion } from './logic/questionGenerator'\r\n// import { chooseRandomFromArray } from \"./logic/lowLevelHelpers\";\r\n\r\n// Custom Hooks\r\nimport { useScreenWidth, useScreenHeight } from \"./hooks\"\r\n\r\n// MUI  components\r\nimport { CssBaseline, Box } from '@material-ui/core'\r\n\r\n// THEME\r\nimport theme from \"./theme\"\r\nimport { ThemeProvider, } from '@material-ui/core/styles'\r\n\r\n\r\nexport default function App() {\r\n    // GAME SETTINGS\r\n    const [opponent, setOpponent] = React.useState(\"human\")\r\n    const [mathTopics, setMathTopics] = React.useState([\"combining\"])  // An array of all types player wants\r\n\r\n    // GAME STATE\r\n    const [moveList, setMoveList] = React.useState([])  // An Array of integers ranging -1 thru 41 of indeterminate length\r\n    const [gameStatus, setGameStatus] = React.useState('playerOnesTurn')  // Enum ['playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw']\r\n    const [openModal, setOpenModal] = React.useState(\"none\") // Enum: \"none\", \"question\", \"abandonGame\", \"newGameSettings\", \r\n    const [activeCell, setActiveCell] = React.useState(null) \r\n\r\n    \r\n    // LAYOUT\r\n    const height = useScreenHeight()\r\n    const width = useScreenWidth()\r\n    const boardSideLength = (height <= width) ? height : width\r\n\r\n    \r\n    ///////////////////////////////////////////////////////\r\n    // CLICK HANDLERS\r\n    ///////////////////////////////////////////////////////\r\n    function handleColumnClick(columnIndex) {\r\n        if (gameIsOver(gameStatus)) {\r\n            console.log(`handleColumnClick() had NO EFFECT since game is already over!`)\r\n            return \r\n        }\r\n        let columnData = getColumnData(columnIndex, moveList)\r\n        let lowestUnclaimedRow = columnData.indexOf(\"unclaimed\")\r\n        let lowestUnclaimedCell = lowestUnclaimedRow * 7 + columnIndex\r\n        if (lowestUnclaimedRow === -1) {\r\n            console.log(`handleColumnClick() had NO EFFECT since column is full!`)\r\n            return\r\n        }\r\n        \r\n        // let newQuestion = generateQuestion(mathTopics, questionsRightSoFar())\r\n        // console.log(`NEW QUESTION: ${JSON.stringify(newQuestion, null, 4)}`)\r\n        // setQuestion(newQuestion)\r\n        setOpenModal(\"question\")\r\n        setActiveCell(lowestUnclaimedCell)\r\n\r\n    }\r\n\r\n    function handleAnswerSubmit(answerIsCorrect) {\r\n        let moveToAdd = (answerIsCorrect) ? activeCell : -1\r\n        let updatedMoveList = moveList.concat(moveToAdd)\r\n        let updatedGameStatus = getGameStatus(updatedMoveList)\r\n        console.log(`Adding ${moveToAdd} to the moveList. Game status: ${updatedGameStatus}`);\r\n        setTimeout(() => {\r\n            setOpenModal(\"none\")\r\n        }, 1500);\r\n        setTimeout(() => {\r\n            setMoveList(updatedMoveList)\r\n            setGameStatus(updatedGameStatus)\r\n            setActiveCell(null)\r\n        }, 1800)\r\n        \r\n        // if (opponent === \"bot\") {\r\n        //     console.error(`IT IS THE BOT'S TURN BUT GETBOTMOVE HAS NOT BEEN DEFINED`)\r\n        // }\r\n    }\r\n\r\n    function closeModal() {\r\n        setOpenModal(\"none\")\r\n    }\r\n    \r\n    \r\n\r\n    function pickTopic() {\r\n        return mathTopics[(Math.random() * mathTopics.length)]\r\n    }\r\n \r\n    function openAbandonGameModal() {\r\n        setOpenModal(\"abandonGame\")\r\n        \r\n    }\r\n    function openSettingsModal() {\r\n        setMoveList([])\r\n        setGameStatus('playerOnesTurn')\r\n        setOpenModal(\"newGameSettings\")\r\n    }\r\n    function handlePlayNowClick() {\r\n        setMoveList([])\r\n        setGameStatus('playerOnesTurn')\r\n        setOpenModal(\"question\")\r\n        setActiveCell(null)\r\n    }\r\n\r\n    function handleUndoClick() {\r\n        let shortenedMoveList = moveList.slice(0, -1)\r\n        setMoveList(shortenedMoveList)\r\n        setGameStatus(getGameStatus(shortenedMoveList))\r\n        setOpenModal(\"none\")\r\n    }\r\n\r\n    function getNextPlayersMoves() {\r\n        if (gameStatus === \"playerOnesTurn\") {\r\n            return playerOnesNumbers(moveList)\r\n        }\r\n        else if (gameStatus === \"playerTwosTurn\") {\r\n            return playerTwosNumbers(moveList)\r\n        }\r\n        else {\r\n            console.warn(`getNextPlayersMoves was called but the game is already over`);\r\n            return []\r\n        }\r\n    }\r\n    let turnNumber = moveList.length\r\n    let nextPlayersMoves = getNextPlayersMoves()\r\n    console.log(`nextPlayersMoves ${nextPlayersMoves}`);\r\n    let questionsRightSoFar = Math.max(1, nextPlayersMoves.length)\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <Box id='root'\r\n                    sx={{\r\n                        // border: 'solid red 5px',\r\n                        bgcolor: 'background',\r\n                        height: '100vh',\r\n                        width: '100vw',\r\n                        overflow: 'hidden',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                >\r\n                    {/* <WelcomePage /> */}\r\n                    {/* <PlayPage /> */}\r\n                    {/* <InfoPage /> */}\r\n                    <Box id='play-page' sx={{\r\n                        height:  boardSideLength,\r\n                        width:  boardSideLength,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n\r\n                        alignItems: 'center',\r\n                        position: 'relative'\r\n                    }}>\r\n                        <InGameMenu\r\n                            handleNewGameClick={openAbandonGameModal}\r\n                            handleAbandonGameClick={openSettingsModal}\r\n                            handleUndoClick={handleUndoClick}\r\n                        />\r\n                        <MathQuestionModal\r\n                            key={1}\r\n                            // turnNumber={moveList.length}\r\n                            turnNumber={turnNumber}\r\n                            open={(openModal === \"question\")}\r\n                            // question={question}\r\n                            mathTopics={mathTopics}\r\n                            questionsRightSoFar={questionsRightSoFar}\r\n                            handleAnswerSubmit={handleAnswerSubmit}\r\n                            boardSideLength={boardSideLength}\r\n                        />\r\n                        <GameBoard\r\n                            moveList={moveList}\r\n                            gameStatus={gameStatus}\r\n                            handleColumnClick={handleColumnClick}\r\n\r\n                        />\r\n                        \r\n                    </Box>\r\n                </Box>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["modals/Menu.js","logic/winningLineMaps.js","logic/connectFourLogic.js","pages/GameBoard.js","modals/MathQuestionModal.js","logic/lowLevelHelpers.js","logic/questionGenerators/combiningGenerator.js","logic/questionGenerators/multiplyingGenerator.js","logic/questionGenerators/questionGenerator.js","theme.js","App.js","hooks.js","reportWebVitals.js","index.js"],"names":["InGameMenu","props","handleNewGameClick","handleUndoClick","React","anchorEl","setAnchorEl","closeMenu","open","Boolean","id","undefined","Button","variant","onClick","event","currentTarget","sx","color","bgcolor","position","top","right","zIndex","padding","minWidth","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Menu","PaperProps","elevation","overflow","filter","mt","width","height","ml","mr","content","display","transform","MenuItem","NewGameButton","handleClick","UndoButton","startIcon","lineToCellsMap","Map","cellToLinesMap","size","gameIsOver","gameStatus","intersect","setOne","setTwo","item","includes","playerOnesMoves","moveList","cell","turn","playerTwosMoves","getColumnData","columnIndex","data","Array","fill","forEach","move","player","getBoardData","claimStatus","cellId","nextPlayerColor","getGameStatus","lastPlayerToMove","length","lastPlayersMoves","lastMoveMade","Number","slice","linesAffectedByLastMove","get","i","line","squarePercentage","heightOfSixSquares","chipSizeRelativeToSquare","rowNumbers","columnNumbers","GameBoard","handleColumnClick","getColumnChipColors","chipColors","turnNumber","boardChipColors","Container","disableGutters","flexDirection","alignItems","InfoHeaderRow","map","Column","index","RoundedBoardFrame","message","Box","left","justifyContent","Zoom","in","style","transitionDelay","Typography","align","boxSizing","border","borderColor","borderRadius","borderTop","columnLetter","backgroundColor","HoverChipArea","ChipContainer","ColumnOfSquaresWithHoles","Chip","claimed","Slide","direction","fontSize","SquareWithHole","boxShadow","Transition","forwardRef","ref","MathQuestionModal","question","headerText","handleAnswerSubmit","boardSideLength","correctAnswer","equationString","inputType","Dialog","disableEscapeKeyDown","onBackdropClick","TransitionComponent","fullWidth","maxWidth","margin","justifySelf","alignSelf","HeaderText","QuestionEquation","AnswerInputComponent","flexFlow","fontStyle","useState","playersAnswer","setPlayersAnswer","answerIsNum","test","error","handlePlayersAnswerChange","updatedAnswer","target","value","trim","NumericalTextInput","handleSubmitButtonClick","CompareButtons","FormControl","InputLabel","OutlinedInput","label","autoFocus","autoComplete","type","pattern","onChange","inputProps","onKeyDown","key","SubmitButton","disabled","px","lineHeight","children","console","chooseRandomFromArray","array","randomInt","min","max","Math","ceil","floor","random","getCombiningQuestion","difficulty","assert","log","missingSumTwo","missingSumThree","missingDifference","missingAddendTwo","missingSumInstructions","vars","a","b","c","instructions","d","missingAddendInstructions","getMultiplyingQuestion","missingProductTwo","missingProductThree","missingFactorTwo","missingFactorThree","doubleTripleQuadruple","missingProductInstructions","missingFactorInstructions","generateQuestion","mathTopics","score","Promise","resolve","reject","determineDifficulty","questionTopics","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","text","hint","action","disabledBackground","disabledOpacity","board","chip","playerOne","playerTwo","unclaimed","background","white","transparent","selectedButton","unselectedButton","components","MuiPaper","styleOverrides","root","typography","button","fontWeight","status","shape","spacing","transitions","easing","bounce","parabolicAcceleration","responsiveFontSizes","factor","App","setMoveList","setGameStatus","openModal","setOpenModal","activeCell","setActiveCell","testQuestion","setQuestion","setHeaderText","waysToSayCorrect","window","innerHeight","screenHeight","setScreenHeight","useEffect","handleScreenSizeChange","addEventListener","removeEventListener","useScreenHeight","innerWidth","screenWidth","setScreenWidth","useScreenWidth","Fragment","CssBaseline","ThemeProvider","handleAbandonGameClick","shortenedMoveList","answerIsCorrect","answerFeedbackHeaderText","moveToAdd","updatedMoveList","concat","updatedGameStatus","setTimeout","lowestUnclaimedRow","indexOf","nextPlayersMoves","then","newQuestion","JSON","stringify","openMathQuestionModal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAWO,SAASA,EAAWC,GACvB,IAAMC,EAAwCD,EAAxCC,mBAAoBC,EAAoBF,EAApBE,gBAE1B,EAAgCC,WAAe,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAKMC,EAAY,WACdD,EAAY,OAEVE,EAAOC,QAAQJ,GACfK,EAAKF,EAAO,sBAAmBG,EAErC,OACI,eAAC,WAAD,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OACZ,mBAAkBH,EAClBI,QAbK,SAACC,GACdT,EAAYS,EAAMC,gBAaVC,GAAI,CACAC,MAAO,eACPC,QAAS,aACTC,SAAU,WACVC,IAAK,KACLC,MAAO,KACPC,OAAQ,KACRC,QAAS,EACTC,SAAU,QAXlB,SAcI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CACIhB,GAAIA,EACJF,KAAMA,EACNH,SAAUA,EACVsB,QAASpB,EACTqB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAXpB,SAcI,eAACE,EAAA,EAAD,CACI3B,SAAUA,EACVG,KAAMA,EACNmB,QAASpB,EACTO,QAASP,EACT0B,WAAY,CACRC,UAAW,EACXjB,GAAI,CACAkB,SAAU,UACVC,OAAQ,4CACRC,GAAI,IACJ,oBAAqB,CACjBC,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLC,GAAI,GAER,WAAY,CACRC,QAAS,KACTC,QAAS,QACTvB,SAAU,WACVC,IAAK,EACLC,MAAO,GACPgB,MAAO,GACPC,OAAQ,GACRpB,QAAS,mBACTyB,UAAW,iCACXrB,OAAQ,KAIpBQ,gBAAiB,CAAED,WAAY,QAASD,SAAU,OAClDD,aAAc,CAAEE,WAAY,QAASD,SAAU,UAhCnD,UAkCI,cAACgB,EAAA,EAAD,UACI,cAACC,EAAD,CACIC,YAAa7C,MAGrB,cAAC2C,EAAA,EAAD,UACI,cAACG,EAAD,CACID,YAAa5C,cAUzC,SAAS2C,EAAc7C,GACnB,IAAM8C,EAAgB9C,EAAhB8C,YACN,OACI,cAACnC,EAAA,EAAD,CACIC,QAAQ,WACRoC,UAAW,cAAC,IAAD,IACXnC,QAAS,kBAAMiC,KACf9B,GAAI,CACAqB,MAAO,QALf,yBAaR,SAASU,EAAW/C,GAChB,IAAM8C,EAAgB9C,EAAhB8C,YACN,OACI,cAACnC,EAAA,EAAD,CACIC,QAAQ,WACRoC,UAAW,cAAC,IAAD,IACXnC,QAAS,kBAAMiC,KACf9B,GAAI,CACAqB,MAAO,QALf,0BC1GR,IA+mBaY,EAAiB,IAAIC,IA/mBT,CACrB,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,EACA,IAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,EACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,EACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,IAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,OA8eCC,EAAiB,IAAID,IAxeT,CACrB,CACI,EACA,CACI,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,EACA,IAGR,CACI,EACA,CACI,EACA,EACA,EACA,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,GACA,KAGR,CACI,EACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,GACA,KAGR,CACI,GACA,CACI,GACA,GACA,OAOiBD,EAAeG,KC7mCrC,SAASC,EAAWC,GACvB,MAAuB,kBAAfA,GAAiD,kBAAfA,GAAiD,cAAfA,EASzE,SAASC,EAAUC,EAAQC,GAC9B,OAAOD,EAAOrB,QAAO,SAAAuB,GAAI,OAAID,EAAOE,SAASD,MAG1C,SAASE,EAAgBC,GAC5B,OAAOA,EAAS1B,QAAO,SAAC2B,EAAMC,GAAP,OAAgBA,EAAO,IAAM,KAAG5B,QAAO,SAAA2B,GAAI,OAAc,IAAVA,KAEnE,SAASE,EAAgBH,GAC5B,OAAOA,EAAS1B,QAAO,SAAC2B,EAAMC,GAAP,OAAgBA,EAAO,IAAM,KAAG5B,QAAO,SAAA2B,GAAI,OAAc,IAAVA,KAcnE,SAASG,EAAcC,EAAaL,GAEvC,OAbG,SAAsBA,GACzB,IAAIM,EAAO,IAAIC,MAAM,IAAIC,KAAK,aAO9B,OANAR,EAASS,SAAQ,SAACC,EAAMR,GACpB,IAAc,IAAVQ,EAAa,CACb,IAAIC,EAAST,EAAO,IAAM,EAAI,YAAc,YAC5CI,EAAKI,GAAQC,MAGdL,EAISM,CAAaZ,GACZ1B,QAAO,SAACuC,EAAaC,GAAd,OAAyBA,EAAS,IAAMT,KAgB7D,SAASU,EAAgBtB,GAC5B,OAAOD,EAAWC,GAAc,YAA8B,mBAAfA,EAAmC,YAAc,YA2B7F,SAASuB,EAAchB,GAK1B,IAJA,IAAIiB,EAAoBjB,EAASkB,OAAS,IAAM,EAAK,YAAc,YAC/DC,EAAyC,cAArBF,EAAoClB,EAAgBC,GAAYG,EAAgBH,GACpGoB,EAAeC,OAAOF,EAAiBG,OAAO,IAC9CC,EAA0BjC,EAAekC,IAAIJ,GACxCK,EAAI,EAAGA,EAAIF,EAAwBL,OAAQO,IAAK,CACrD,IAAIC,EAAOH,EAAwBE,GAGnC,GAAwD,IAApD/B,EAFcN,EAAeoC,IAAIE,GAEVP,GAAkBD,OACzC,MAA6B,cAArBD,EAAoC,gBAAkB,gBAItE,OADsBjB,EAAS1B,QAAO,SAAAwC,GAAM,OAAgB,IAAZA,KAC5BI,QAAU,GACnB,eAGClB,EAASkB,OAAS,IAAM,EAAK,iBAAmB,iB,iDCzF1DS,EAAmB,UAInBC,EAAqB,UAErBC,EAA2B,MAE7BC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhC,SAASC,EAAU7F,GACtB,IAAQ6D,EAA4C7D,EAA5C6D,SAAUiC,EAAkC9F,EAAlC8F,kBAAmBxC,EAAetD,EAAfsD,WAErC,SAASyC,EAAoB7B,GAGzB,OAEJ,WACI,IAAI8B,EAAa,IAAI5B,MAAM,IAAIC,KAAK,aAQpC,OAPAR,EAASS,SAAQ,SAACK,EAAQsB,GACtB,IAAgB,IAAZtB,EAAe,CACf,IAAIH,EAAUyB,EAAa,IAAM,EAAK,YAAc,YACpDD,EAAWrB,GAAUH,MAItBwB,EAbUE,GAAkB/D,QAAO,SAACqC,EAAQG,GAAT,OAAoBA,EAAS,IAAMT,KAgBjF,OACI,eAACiC,EAAA,EAAD,CAAW1F,GAAG,YACV2F,gBAAc,EACdpF,GAAI,CACAG,SAAU,WACVC,IAAK,EACLkB,OAAQ,MACRD,MAAO,MACPK,QAAS,OACT2D,cAAe,MACfC,WAAY,YATpB,UAYI,cAACC,EAAD,CAAejD,WAAYA,IAC1BsC,EAAcY,KAAI,SAACtC,GAChB,IAAI8B,EAAaD,EAAoB7B,GACrC,OACI,cAACuC,EAAD,CAEIC,MAAOxC,EACP8B,WAAYA,EACZ1C,WAAYA,EACZsB,gBAAiBA,EAAgBtB,GACjCwC,kBAAmBA,GALd5B,MASjB,cAACyC,EAAD,OAMZ,SAASJ,EAAcvG,GACnB,IAAMsD,EAAetD,EAAfsD,WAEFsD,EAAU,GAKd,OANevD,EAAWC,KAGtBsD,EAA0B,kBAAftD,EAAiC,mBAAqB,oBAIjE,cAACuD,EAAA,EAAD,CAAKpG,GAAG,gBACJO,GAAI,CACAG,SAAU,WACVC,IAAK,EACL0F,KAAM,EACNzE,MAAO,OACPC,OA7Ec,UA8EdhB,OAAQ,GACRoB,QAAS,OACTqE,eAAgB,SAChBT,WAAY,UAVpB,SAaI,cAACU,EAAA,EAAD,CAAMC,GAAgB,KAAZL,EAAgBM,MAAO,CAAEC,gBAAiB,SAApD,SACI,cAACC,EAAA,EAAD,CAAYxG,QAAQ,KAAKyG,MAAM,SAA/B,SACKT,QAQrB,SAASD,EAAkB3G,GACvB,OACI,cAAC6G,EAAA,EAAD,CAAKpG,GAAG,oBACJO,GAAI,CACAsG,UAAW,cACXnG,SAAU,WACVC,IAAKoE,EACLsB,KAAM,OACNzE,MAAO,mBACPC,OAAQmD,EACR8B,OAAQ,aACRC,YAAa,aACbC,aAAc,OACdC,UAAW,KAK3B,SAASjB,EAAOzG,GACZ,IAAQ0G,EAAsE1G,EAAtE0G,MAAOV,EAA+DhG,EAA/DgG,WAAY1C,EAAmDtD,EAAnDsD,WAAYsB,EAAuC5E,EAAvC4E,gBAAiBkB,EAAsB9F,EAAtB8F,kBACpD6B,EAAe,GACnB,IAAKtE,EAAWC,GACZ,OAAQoD,GACJ,KAAK,EACDiB,EAAe,IACf,MACJ,KAAK,EACDA,EAAe,IACf,MACJ,KAAK,EACDA,EAAe,IACf,MACJ,KAAK,EACDA,EAAe,IACf,MACJ,KAAK,EACDA,EAAe,IACf,MACJ,KAAK,EACDA,EAAe,IACf,MACJ,KAAK,EACDA,EAAe,IACf,MACJ,QACIA,EAAe,QAI3B,OACI,eAACd,EAAA,EAAD,CAAKpG,GAAG,SAEJI,QAAS,kBAAMiF,EAAkBY,IACjC1F,GAAI,CACAG,SAAU,WACVkB,MAAOmD,EACPlD,OAAQ,OACRhB,OAAQ,EACR,qBAAsB,CAClBsG,gBAAgB,QAAD,OAAUhD,KATrC,UAaI,cAACiD,EAAD,CAAeF,aAAcA,IAC7B,cAACG,EAAD,CAAe9B,WAAYA,IAC3B,cAAC+B,EAAD,OAUZ,SAASC,EAAKhI,GACV,IAAQiB,EAAUjB,EAAViB,MACJgH,EAAqB,cAAVhH,EACXC,EAAO,eAAWD,GACtB,OACI,cAACiH,EAAA,EAAD,CAAOjB,GAAIgB,EACPE,UAAU,OADd,SAKI,cAACtB,EAAA,EAAD,CAAKpG,GAAG,yBACJO,GAAI,CACAqB,MAAO,OACPC,OAvLQ,UAwLRI,QAAS,OACTqE,eAAgB,SAChBT,WAAY,UANpB,SASI,cAACO,EAAA,EAAD,CAAKpG,GAAG,OACJO,GAAI,CACAyG,aAAc,MACdnG,OAAQ,OACRJ,QAASA,EACTmB,MAAOqD,EACPpD,OAAQoD,SAahC,SAASmC,EAAc7H,GACnB,OACI,cAAC6G,EAAA,EAAD,CAAKpG,GAAG,qBACJO,GAAI,CAEAqB,MAAO,OACPC,OAAQkD,EACRlE,OAAQ,EACRoB,QAAS,OACT4D,WAAY,SACZS,eAAgB,UARxB,SAWI,cAACF,EAAA,EAAD,CAAKpG,GAAG,YACJO,GAAI,CACAE,QAAS,aACTmB,MAAOqD,EACPpD,OAAQoD,EACR+B,aAAc,MACdnG,OAAQ,EACRoB,QAAS,OACTqE,eAAgB,SAChBT,WAAY,WACZ8B,SAAU,QAVlB,SAaKpI,EAAM2H,iBAKvB,SAASG,EAAc9H,GACnB,OACI,cAAC6G,EAAA,EAAD,CAAKpG,GAAG,gBACJO,GAAI,CACAqB,MAAO,OACPlB,SAAU,WACVC,IAAKoE,EACLtE,QAAS,cACToB,OAAQmD,EACRnE,OAAQ,EACRoB,QAAS,OACT2D,cAAe,kBATvB,SAYKrG,EAAMgG,WAAWQ,KAAI,SAACvF,EAAOyF,GAC1B,OAAO,cAACsB,EAAD,CAEHvH,GAAIiG,EACJzF,MAAOA,GAFFyF,QASzB,SAASqB,EAAyB/H,GAC9B,SAASqI,EAAerI,GACpB,OACI,cAAC6G,EAAA,EAAD,CAAKpG,GAAG,iBAEJO,GAAI,CACAkB,SAAU,SACVG,MAAO,OACPC,OAlRH,UAmRGI,QAAS,OACTqE,eAAgB,SAChBT,WAAY,SACZgC,UAAW,2BATnB,SAYI,cAACzB,EAAA,EAAD,CAAKpG,GAAG,OACJO,GAAI,CACAsH,UAAW,qBACXb,aAAc,MACdvG,QAAS,cACTmB,MAAOqD,EACPpD,OAAQoD,MAjBX1F,EAAM0G,OAwBvB,OACI,cAACG,EAAA,EAAD,CAAKpG,GAAG,kBACJO,GAAI,CACAG,SAAU,WACVC,IAAKoE,EACLtE,QAAS,cACTmB,MAAO,OACPC,OAAQmD,EACRnE,OAAQ,QACRoB,QAAS,OACT2D,cAAe,kBATvB,SAYKV,EAAWa,KAAI,SAAC9C,EAAMgD,GACnB,OAAQ,cAAC2B,EAAD,GAAqB3B,Q,gDCpTvC6B,GAAapI,IAAMqI,YAAW,SAAoBxI,EAAOyI,GAC3D,OAAO,cAACzB,EAAA,EAAD,aAAMyB,IAAKA,GAASzI,OAGxB,SAAS0I,GAAkB1I,GAC9B,IAAM2I,EAKkB3I,EALlB2I,SACFpI,EAIoBP,EAJpBO,KACAqI,EAGoB5I,EAHpB4I,WACAhE,EAEoB5E,EAFpB4E,gBACAiE,EACoB7I,EADpB6I,mBACAC,EAAoB9I,EAApB8I,gBAEEC,EAA6CJ,EAA7CI,cAAeC,EAA8BL,EAA9BK,eAAgBC,EAAcN,EAAdM,UACjCzB,EAAW,eAAW5C,GAE1B,OACI,eAACsE,EAAA,EAAD,CAEIC,sBAAoB,EACpB5I,KAAMA,EACN6I,gBAAiB,aACjB,mBAAiB,uBACjBC,oBAAqBd,GACrBe,WAAW,EACXC,SAAS,KACTvH,WAAY,CACRhB,GAAI,CAEAuG,OAAO,qBAEPC,YAAaA,EACbgC,OAAO,GAAD,OAAK,IAAOV,EAAZ,MACNxG,OAAO,GAAD,OAAK,GAAMwG,EAAX,MACNzG,MAAM,GAAD,OAAK,GAAMyG,EAAX,MACLrB,aAAc,MACdgC,YAAa,aACbC,UAAW,eApBvB,UAyBI,cAACC,EAAD,CAAYf,WAAYA,IACxB,cAACgB,EAAD,CAAkBZ,eAAgBA,IAClC,cAACa,EAAD,CACIZ,UAAWA,EACXF,cAAeA,EACfF,mBAAoBA,OAKhC,SAASc,EAAW3J,GAChB,OACI,cAACoH,EAAA,EAAD,CAAY3G,GAAG,eACXG,QAAQ,KACRI,GAAI,CACAsB,OA5DO,MA6DPD,MAAO,OACPK,QAAS,OACToH,SAAU,WACV/C,eAAgB,SAChBT,WAAY,YARpB,SAWKtG,EAAM4I,aAInB,SAASgB,EAAiB5J,GACtB,IAAQgJ,EAAmBhJ,EAAnBgJ,eACFe,EAAaf,EAAejE,OAAS,GAAM,KAAO,KAExD,OACI,cAACqC,EAAA,EAAD,CAAYxG,QAASmJ,EACjB/I,GAAI,CACAqB,MAAO,OACPC,OA/EG,MAgFHI,QAAS,OACTqE,eAAgB,SAChBT,WAAY,SACZpE,SAAU,WAPlB,SAUK8G,IAIb,SAASa,EAAqB7J,GAC1B,IAAQiJ,EAAiDjJ,EAAjDiJ,UAAWF,EAAsC/I,EAAtC+I,cAAeF,EAAuB7I,EAAvB6I,mBAElC,EAA0CmB,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAc,QAAQC,KAAKH,GAC3BI,EAASJ,EAAclF,OAAS,IAAMoF,EAEtCG,EAA4B,SAACxJ,GAC/B,IAAIyJ,EAAgBzJ,EAAM0J,OAAOC,MAAMC,OACvCR,EAAiBK,IAGrB,GAAkB,cAAdtB,EACA,OACI,cAAC0B,EAAD,CACIN,MAAOA,EACPO,wBAAyB,kBAAM/B,EAAmBoB,MAIzD,GAAkB,mBAAdhB,EACL,OACI,cAAC4B,EAAD,IASR,SAASF,EAAmB3K,GACxB,IAAQqK,EAAmCrK,EAAnCqK,MAAOO,EAA4B5K,EAA5B4K,wBAEf,OACI,cAAC/D,EAAA,EAAD,CAAK7F,GAAI,CACLsB,OA7HA,MA8HAD,MAAO,OACPd,QAAS,SAHb,SAKI,eAACuJ,EAAA,EAAD,CACIrK,GAAG,oBACHQ,MAAM,UACNoJ,MAAOA,EACPrJ,GAAI,CACA0B,QAAS,OACToH,SAAU,aACV/C,eAAgB,SAChBT,WAAY,cARpB,UAWI,cAACyE,EAAA,EAAD,WAAwB,IAAVV,EAAmB,cAAgB,yBACjD,cAACW,EAAA,EAAD,CACIC,OAAkB,IAAVZ,EAAmB,cAAgB,uBAC3CI,MAAOR,EACPxJ,GAAG,eACH6I,WAAS,EACTlG,KAAK,SACL8H,WAAS,EACTC,aAAa,MAEbC,KAAK,MAELC,QAAQ,SACRC,SAAUhB,EACViB,WAAY,CACRrE,MAAO,CAAEkB,SAAU,OAAQ9F,OAAQ,SAEvCtB,GAAI,CAAEqB,MAAO,OACbmJ,UAAW,SAAC1K,GACU,UAAdA,EAAM2K,KACNb,OAIZ,cAACc,EAAD,CACIC,SAAUtB,EACVJ,cAAeA,EACflB,cAAeA,EACf6B,wBAAyBA,SAM7C,SAASc,EAAa1L,GAClB,IAAQ4K,EAA4B5K,EAA5B4K,wBACR,OACI,cAACjK,EAAA,EAAD,CACIE,QAAS+J,EACThK,QAAQ,YAERI,GAAI,CACAuB,GAAI,EACJqJ,GAAI,IACJC,WAAY,OACZxJ,MAAO,OAEXyJ,SAAS,WAKrB,SAASjB,EAAe7K,GAGpB,OACI,eAAC6G,EAAA,EAAD,CACI7F,GAAI,CACA0B,QAAS,OACT2D,cAAe,SACfC,WAAY,SACZS,eAAgB,UALxB,UAQI,cAACpG,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,OAzFRoL,QAAQ1B,MAAR,uDAA8DpB,KC3HnE,SAAS+C,GAAsBC,GAIlC,OAFaA,EADKC,GAAU,EAAGD,EAAMlH,SAMlC,SAASmH,GAAUC,EAAKC,GAG3B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,GCA7C,SAASM,GAAqBC,GAGjC,OAFAX,QAAQY,OAAuB,SAAfD,GAAwC,WAAfA,GAA0C,SAAfA,EAApE,2DAAgJA,IAChJX,QAAQa,IAAR,uDAA4DF,EAA5D,MACmB,SAAfA,EAoBGV,GARK,CACRa,GACAC,GACAC,GACAC,IAIGhB,CAA6B,QAjBZ,WAAfU,EA8BFV,GAVK,CACRa,GACAC,GACAC,GACAC,IAMGhB,CAA6B,UA3BZ,SAAfU,EAwCFV,GAVK,CACRa,GACAC,GACAC,GACAC,IAMGhB,CAA6B,aAxC/B,EA4CT,IAAMiB,GAAyB,CAC3B,MACA,kBACA,kBAEJ,SAASJ,GAAcH,GACnB,IAAIQ,EAAO,GAgBX,MAfmB,SAAfR,GACAQ,EAAKC,EAAIjB,GAAU,EAAE,IACrBgB,EAAKE,EAAIlB,GAAU,EAAE,IACrBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,WAAfV,GACLQ,EAAKC,EAAIjB,GAAU,GAAI,KACvBgB,EAAKE,EAAIlB,GAAU,GAAI,KACvBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,SAAfV,IACLQ,EAAKC,EAAIjB,GAAU,IAAK,KACxBgB,EAAKE,EAAIlB,GAAU,IAAK,KACxBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEpB,CACHhC,KAAM,gBACN8B,KAAMA,EACNnE,cAAemE,EAAKG,EACpBrE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,cAAiBD,EAAKE,EAAtB,SACdE,aAActB,GAAsBiB,IACpChE,UAAW,aAInB,SAAS6D,GAAgBJ,GACrB,IAAIQ,EAAO,GAoBX,MAnBmB,SAAfR,GACAQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAInB,GAAU,EAAG,IACtBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAEZ,WAAfX,GACLQ,EAAKC,EAAIjB,GAAU,GAAI,KACvBgB,EAAKE,EAAIlB,GAAU,GAAI,KACvBgB,EAAKG,EAAInB,GAAU,GAAI,KACvBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAEZ,SAAfX,IACLQ,EAAKC,EAAIjB,GAAU,IAAK,KACxBgB,EAAKE,EAAIlB,GAAU,IAAK,KACxBgB,EAAKG,EAAInB,GAAU,IAAK,KACxBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAG7B,CACHjC,KAAM,kBACN8B,KAAMA,EACNnE,cAAemE,EAAKK,EACpBvE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,cAAiBD,EAAKE,EAAtB,cAA6BF,EAAKG,EAAlC,SACdC,aAActB,GAAsBiB,IACpChE,UAAW,aAMnB,SAAS8D,GAAkBL,GACvB,IAKIQ,EAAO,GAgBX,MAfmB,SAAfR,GACAQ,EAAKC,EAAIjB,GAAU,GAAI,IACvBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,WAAfV,GACLQ,EAAKC,EAAIjB,GAAU,IAAK,KACxBgB,EAAKE,EAAIlB,GAAU,GAAI,KACvBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,SAAfV,IACLQ,EAAKC,EAAIjB,GAAU,IAAK,KACxBgB,EAAKE,EAAIlB,GAAU,GAAI,KACvBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEpB,CACHhC,KAAM,oBACN8B,KAAMA,EACNnE,cAAemE,EAAKG,EACpBrE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,cAAiBD,EAAKE,EAAtB,SACdE,aAActB,GA1BG,CACjB,WACA,sBACA,sBAwBA/C,UAAW,aAKnB,IAAMuE,GAA4B,CAC9B,kBACA,kBAEJ,SAASR,GAAiBN,GACtB,IAAIQ,EAAO,GAgBX,MAfmB,SAAfR,GACAQ,EAAKC,EAAIjB,GAAU,GAAI,IACvBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,WAAfV,GACLQ,EAAKC,EAAIjB,GAAU,GAAI,KACvBgB,EAAKE,EAAIlB,GAAU,GAAI,KACvBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,SAAfV,IACLQ,EAAKC,EAAIjB,GAAU,IAAK,KACxBgB,EAAKE,EAAIlB,GAAU,IAAK,KACxBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEpB,CACHhC,KAAM,mBACN8B,KAAMA,EACNnE,cAAemE,EAAKE,EACpBpE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,mBAAsBD,EAAKG,GACzCC,aAActB,GAAsBwB,IACpCvE,UAAW,aC1LZ,SAASwE,GAAuBf,GAGnC,OAFAX,QAAQY,OAAuB,SAAfD,GAAwC,WAAfA,GAA0C,SAAfA,EAApE,6DAAkJA,IAClJX,QAAQa,IAAR,yDAA8DF,EAA9D,MACmB,SAAfA,EAmBGV,GARK,CACR0B,GACAC,GACAC,GACAC,GACAC,IAGG9B,CAA6B,QAhBZ,WAAfU,EAyBFV,GANK,CACR0B,GACAC,IAIG3B,CAA6B,UAtBZ,SAAfU,EA+BFV,GANK,CACR0B,GACAC,IAIG3B,CAA6B,aA/B/B,EAsCT,SAAS8B,GAAsBpB,GAC3BX,QAAQY,OAAuB,SAAfD,EAAhB,gFACA,IAEIY,EAFAlC,EAAOY,GAAsB,CAAC,SAAU,SAAU,cAClDkB,EAAO,GAkBX,MAfa,WAAT9B,GACA8B,EAAKC,EAAIjB,GAAU,GAAI,KACvBgB,EAAKE,EAAa,EAATF,EAAKC,EACdG,EAAetB,GAAsB,CAAC,SAAU,eAElC,WAATZ,GACL8B,EAAKC,EAAIjB,GAAU,GAAI,KACvBgB,EAAKE,EAAa,EAATF,EAAKC,EACdG,EAAetB,GAAsB,CAAC,YAExB,cAATZ,IACL8B,EAAKC,EAAIjB,GAAU,GAAI,IACvBgB,EAAKE,EAAa,EAATF,EAAKC,EACdG,EAAetB,GAAsB,CAAC,YAAa,mBAEhD,CACHZ,KAAM,oBACN8B,KAAMA,EACNnE,cAAemE,EAAKE,EACpBpE,eAAe,GAAD,OAAKkE,EAAKC,GACxBG,aAAcA,EACdrE,UAAW,aAKnB,IAAM8E,GAA6B,CAC/B,WACA,oBAEJ,SAASL,GAAkBhB,GACvB,IAAIQ,EAAO,GAgBX,MAfmB,SAAfR,GACAQ,EAAKC,EA1CYnB,GAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KA2ClGkB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,WAAfV,GACLQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,SAAfV,IACLQ,EAAKC,EAAIjB,GAAU,GAAI,KACvBgB,EAAKE,EAAIlB,GAAU,GAAI,KACvBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEpB,CACHhC,KAAM,oBACN8B,KAAMA,EACNnE,cAAemE,EAAKG,EACpBrE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,cAAiBD,EAAKE,EAAtB,SACdE,aAActB,GAAsB+B,IACpC9E,UAAW,aAGnB,SAAS0E,GAAoBjB,GACzB,IAAIQ,EAAO,GAmBX,MAlBmB,SAAfR,GACAQ,EAAKC,EAAIjB,GAAU,EAAG,GACtBgB,EAAKE,EAAIlB,GAAU,EAAG,GACtBgB,EAAKG,EAAInB,GAAU,EAAG,IACtBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAEZ,WAAfX,GACLQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAInB,GAAU,EAAG,IACtBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAEZ,SAAfX,IACLQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAInB,GAAU,EAAG,IACtBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAE7B,CACHjC,KAAM,sBACN8B,KAAMA,EACNnE,cAAemE,EAAKK,EACpBvE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,cAAiBD,EAAKE,EAAtB,cAA6BF,EAAKG,EAAlC,SACdC,aAActB,GAAsB+B,IACpC9E,UAAW,aAOnB,IAAM+E,GAA4B,CAC9B,kBACA,eAEJ,SAASJ,GAAiBlB,GACtB,IAAIQ,EAAO,GAgBX,MAfmB,SAAfR,GACAQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,WAAfV,GACLQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEH,SAAfV,IACLQ,EAAKC,EAAIjB,GAAU,GAAI,KACvBgB,EAAKE,EAAIlB,GAAU,GAAI,IACvBgB,EAAKG,EAAIH,EAAKC,EAAID,EAAKE,GAEpB,CACHhC,KAAM,mBACN8B,KAAMA,EACNnE,cAAemE,EAAKE,EACpBpE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,mBAAsBD,EAAKG,GACzCC,aAActB,GAAsBgC,IACpC/E,UAAW,aAGnB,SAAS4E,GAAmBnB,GACxB,IAAIQ,EAAO,GAmBX,MAlBmB,SAAfR,GACAQ,EAAKC,EAAIjB,GAAU,EAAG,GACtBgB,EAAKE,EAAIlB,GAAU,EAAG,GACtBgB,EAAKG,EAAInB,GAAU,EAAG,IACtBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAEZ,WAAfX,GACLQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAInB,GAAU,EAAG,IACtBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAEZ,SAAfX,IACLQ,EAAKC,EAAIjB,GAAU,EAAG,IACtBgB,EAAKE,EAAIlB,GAAU,EAAG,IACtBgB,EAAKG,EAAInB,GAAU,EAAG,IACtBgB,EAAKK,EAAIL,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,GAE7B,CACHjC,KAAM,qBACN8B,KAAMA,EACNnE,cAAemE,EAAKG,EACpBrE,eAAe,GAAD,OAAKkE,EAAKC,EAAV,cAAiBD,EAAKE,EAAtB,mBAAkCF,EAAKK,GACrDD,aAActB,GAAsBgC,IACpC/E,UAAW,aCvKZ,SAASgF,GAAiBC,EAAYC,GAIzC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAM5B,EAvBd,SAA6ByB,GAEzB,OADApC,QAAQa,IAAR,0CAA+CuB,EAA/C,MACIA,EAAQ,EACD,OAEFA,EAAQ,GACN,SAEFA,GAAS,GACP,QAGPpC,QAAQ1B,MAAR,mDAA0D8D,IACnD,SAUYI,CAAoBJ,GACjCK,EAAiB,CACnB/B,GACAgB,IAOJY,EAASG,EADStC,GAAU,EAAGsC,EAAezJ,SACT2H,O,iCC7CvC+B,GAAQC,aAAY,CACtBC,QAAS,CACLC,QAAS,CACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAElBC,UAAW,CACPJ,MAAO,SAEPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAElBE,KAAM,CACFN,QAAS,sBACTK,UAAW,sBACXtD,SAAU,sBACVwD,KAAM,uBAEVC,OAAQ,CACJC,mBAAoB,UACpBC,gBAAiB,OAErBC,MAAO,CACHV,MAAO,UACPC,KAAM,UACNC,KAAM,WAEVS,KAAM,CACFC,UAAW,UACXC,UAAW,UACXC,UAAW,WAEfC,WAAY,UACZC,MAAO,UACPC,YAAa,mBACbC,eAAgB,yBAChBC,iBAAkB,2BAEtBC,WAAY,CACRC,SAAU,CACNC,eAAgB,CACZC,KAAM,CACFxI,gBAAiB,WAKjCyI,WAAY,CACRC,OAAQ,CACJlI,SAAU,SACVmI,WAAY,QAGpBC,OAAQ,GAGRC,MAAO,CACHhJ,aAAc,GAElBiJ,QAAS,EACTC,YAAa,CACTC,OAAQ,CACJC,OAAQ,0CACRC,sBAAuB,qCAG/BxP,OAAQ,CACJkO,KAAM,GACND,MAAO,MAKAwB,gBAAoBtC,GAAO,CAACuC,OAAQ,I,UCjDpC,SAASC,KAEpB,MAAgC9Q,IAAM6J,SAAS,SAA/C,mBAEA,GAFA,UAEoC7J,IAAM6J,SAAS,CAAC,iBAApD,mBAGA,GAHA,UAGgC7J,IAAM6J,SAAS,KAA/C,mBAAOnG,EAAP,KAAiBqN,EAAjB,KACA,EAAoC/Q,IAAM6J,SAAS,kBAAnD,mBAAO1G,EAAP,KAAmB6N,EAAnB,KACA,EAAkChR,IAAM6J,SAAS,QAAjD,mBAAOoH,EAAP,KAAkBC,EAAlB,KACA,EAAoClR,IAAM6J,SAAS,MAAnD,mBAAOsH,EAAP,KAAmBC,EAAnB,KAGA,EAAgCpR,IAAM6J,SFvCnC,WACH,IAAIkD,EAAO,CAAC,EAAG,EAAG,EAAG,GACrB,MAAO,CACH9B,KAAM,kBACN8B,KAAMA,EACNnE,cAAemE,EAAK,GACpBlE,eAAe,GAAD,OAAKkE,EAAK,GAAV,cAAkBA,EAAK,GAAvB,cAA+BA,EAAK,GAApC,SACdI,aAAc,gBACdrE,UAAW,aE+BgCuI,IAA/C,mBAAO7I,EAAP,KAAiB8I,EAAjB,KACA,EAAoCtR,IAAM6J,SAAS,IAAnD,mBAAOpB,EAAP,KAAmB8I,EAAnB,KACMC,EAAmB,CACrB,WACA,SACA,aACA,YACA,cAIErP,ECzBH,WACH,MAAwC0H,mBAAS4H,OAAOC,aAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KAQA,OANAC,qBAAU,WACN,IAAMC,EAAyB,kBAAMF,EAAgBH,OAAOC,cAE5D,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACnD,IAEIH,EDgBQM,GACT/P,ECdH,WACH,MAAsC2H,mBAAS4H,OAAOS,YAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAP,qBAAU,WACN,IAAMC,EAAyB,kBAAMM,EAAeX,OAAOS,aAE3D,OADAT,OAAOM,iBAAiB,SAAUD,GAC3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACnD,IAEIK,EDKOE,GACR1J,EAAmBxG,GAAUD,EAASC,EAASD,EAkFrD,OACI,eAAC,IAAMoQ,SAAP,WACI,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAelE,MAAOA,GAAtB,SACI,cAAC5H,EAAA,EAAD,CAAKpG,GAAG,OACJO,GAAI,CACAE,QAAS,aACToB,OAAQ,QACRD,MAAO,QACPH,SAAU,SACVQ,QAAS,OACT2D,cAAe,SACfC,WAAY,SACZS,eAAgB,cATxB,SAeI,eAACF,EAAA,EAAD,CAAKpG,GAAG,YACJO,GAAI,CACAsB,OAASwG,EACTzG,MAAQyG,EACRpG,QAAS,OACT2D,cAAe,SACfC,WAAY,SACZnF,SAAU,YAPlB,UASI,cAACpB,EAAD,CACIE,mBArDxB,WACIoR,EAAa,gBAqDOuB,uBAlDxB,WACI1B,EAAY,IACZC,EAAc,kBACdE,EAAa,oBAgDOnR,gBAvCxB,WACI,IAAI2S,EAAoBhP,EAASsB,MAAM,GAAI,GAC3C+L,EAAY2B,GACZ1B,EAActM,EAAcgO,IAC5BxB,EAAa,WAqCG,cAAC3I,GAAD,CACI9D,gBAAiBA,EAAgBtB,GACjCA,WAAYA,EACZ/C,KAAqB,aAAd6Q,EACPzI,SAAUA,EACVC,WAAYA,EACZC,mBAvFxB,SAA4BoB,GACxB,IAAM6I,EAAmB5N,OAAO+E,EAAcS,UAAY/B,EAASI,cAC7DgK,EAA4BD,EAAkB9G,GAAsB2F,GAAzB,uBAA6DhJ,EAASI,cAAtE,KACjD2I,EAAcqB,GAGd,IAAIC,EAAaF,EAAmBxB,GAAc,EAC9C2B,EAAkBpP,EAASqP,OAAOF,GAClCG,EAAoBtO,EAAcoO,GACtClH,QAAQa,IAAR,iBAAsBoG,EAAtB,0CAAiEG,IACjEC,YAAW,WACP/B,EAAa,UACd,MACH+B,YAAW,WACPlC,EAAY+B,GACZ9B,EAAcgC,GACd5B,EAAc,QACf,OAuEiBzI,gBAAiBA,IAErB,cAACjD,EAAD,CACIhC,SAAUA,EACVP,WAAYA,EACZwC,kBAzHxB,SAA2B5B,GACvB,GAAIb,EAAWC,GACXyI,QAAQa,IAAR,qEADJ,CAIA,IACIyG,EADapP,EAAcC,EAAaL,GACRyP,QAAQ,aAC5C,IAA4B,IAAxBD,GAQR,SAA+B/B,GAC3B,IAAMnD,ERhCP,SAA0B7K,EAAYO,GAIzC,OAHIR,EAAWC,IACXyI,QAAQ1B,MAAR,yDAEmB,mBAAf/G,EAAmCM,EAAgBC,GAAYG,EAAgBH,GQ4BrE0P,CAAiBjQ,EAAYO,GAAUkB,OAGjCkJ,GAAiBC,EAAYC,GAAOqF,MAAK,SAAAC,GACzD1H,QAAQa,IAAR,6CAA+C8G,KAAKC,UAAUF,EAAa,KAAM,KACjFhC,EAAYgC,GACZ/B,EAAc+B,EAAYnG,cAC1B+D,EAAa,YACbE,EAAcD,MAZlBsC,CAD+C,EAArBP,EAAyBnP,QAH/C6H,QAAQa,IAAR,yEExEZ,IAYeiH,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtD,GAAD,MAEFuD,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.ef95b571.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Popover, Button, Menu, MenuItem, } from '@material-ui/core'\r\n\r\n// Icons\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import PersonAdd from '@material-ui/icons/PersonAdd';\r\n// import Settings from '@material-ui/icons/Settings';\r\n// import Logout from '@material-ui/icons/Logout';\r\n\r\nexport function InGameMenu(props) {\r\n    let { handleNewGameClick, handleUndoClick } = props\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const openMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const closeMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl)   // Is open if anchor element set.\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"text\"\r\n                aria-describedby={id} \r\n                onClick={openMenu}\r\n                sx={{\r\n                    color: 'common.black',\r\n                    bgcolor: 'background',\r\n                    position: 'absolute',\r\n                    top: '1%',\r\n                    right: '1%',\r\n                    zIndex: 9999,\r\n                    padding: 0,\r\n                    minWidth: '10px',\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={closeMenu}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{ \r\n                    vertical: 'top', \r\n                    horizontal: 'right', \r\n                }}\r\n            >\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={closeMenu}\r\n                    onClick={closeMenu}\r\n                    PaperProps={{\r\n                        elevation: 0,\r\n                        sx: {\r\n                            overflow: 'visible',\r\n                            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                            mt: 1.5,\r\n                            '& .MuiAvatar-root': {\r\n                                width: 32,\r\n                                height: 32,\r\n                                ml: -0.5,\r\n                                mr: 1,\r\n                            },\r\n                            '&:before': {\r\n                                content: '\"\"',\r\n                                display: 'block',\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 14,\r\n                                width: 10,\r\n                                height: 10,\r\n                                bgcolor: 'background.paper',\r\n                                transform: 'translateY(-50%) rotate(45deg)',\r\n                                zIndex: 0,\r\n                            },\r\n                        },\r\n                    }}\r\n                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                >\r\n                    <MenuItem>\r\n                        <NewGameButton \r\n                            handleClick={handleNewGameClick}\r\n                        />\r\n                    </MenuItem>\r\n                    <MenuItem>\r\n                        <UndoButton \r\n                            handleClick={handleUndoClick}\r\n                        />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </Popover>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction NewGameButton(props) {\r\n    let { handleClick } = props\r\n    return (\r\n        <Button\r\n            variant=\"outlined\"\r\n            startIcon={<ReplayIcon />}\r\n            onClick={() => handleClick()}\r\n            sx={{\r\n                width: '100%'\r\n            }}\r\n        >\r\n            New&nbsp;Game\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction UndoButton(props) {\r\n    let { handleClick } = props\r\n    return (\r\n        <Button\r\n            variant=\"outlined\"\r\n            startIcon={<UndoIcon />}\r\n            onClick={() => handleClick()}\r\n            sx={{\r\n                width: '100%'\r\n            }}\r\n        >\r\n            Undo&nbsp;Move\r\n        </Button>\r\n    )\r\n}","// A \"line\" is a set of four cellIds that together form a win.\r\n// There are four 'types' of Line: 'vertical', 'horizontal', 'upslash', 'downslash'\r\n// There are 64 lines and 42 cells. \r\n// This module exports two high-level constants that map these two types of id to one another.\r\n// 1) lineIdToCellIdsMap  could be renamed \"cellsInLine\". It takes a lineId 0-63 and gives back the four cells in it.\r\n// 2) cellIdToLineIdsMap  could be renamed \"linesThatIncludeCell\". It takes a cellId 0-41 and gives back the 3 to 13 lines that cell is part of.\r\n\r\n// Low-level Constants\r\n// const cellsPerCol = 6;\r\n// const cellsPerRow = 7;\r\n// const totalCells = cellsPerCol * cellsPerRow;\r\n// const linesPerCol = (cellsPerCol >= 4) ? (cellsPerCol - 3) : 0;\r\n// const linesPerRow = (cellsPerRow >= 4) ? (cellsPerRow - 3) : 0;\r\n// const numberOfVerticalLines = linesPerCol * cellsPerRow;\r\n// const numberOfHorizontalLines = linesPerRow * cellsPerCol;\r\n// const numberOfUpslashLines = linesPerCol * linesPerRow;\r\n// const numberOfDownslashLines = linesPerCol * linesPerRow;\r\n\r\n\r\n\r\n\r\nconst lineToCellsArray = [\r\n    [\r\n        0,\r\n        [\r\n            0,\r\n            7,\r\n            14,\r\n            21\r\n        ]\r\n    ],\r\n    [\r\n        1,\r\n        [\r\n            0,\r\n            1,\r\n            2,\r\n            3\r\n        ]\r\n    ],\r\n    [\r\n        2,\r\n        [\r\n            0,\r\n            8,\r\n            16,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        3,\r\n        [\r\n            1,\r\n            8,\r\n            15,\r\n            22\r\n        ]\r\n    ],\r\n    [\r\n        4,\r\n        [\r\n            1,\r\n            2,\r\n            3,\r\n            4\r\n        ]\r\n    ],\r\n    [\r\n        5,\r\n        [\r\n            1,\r\n            9,\r\n            17,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        6,\r\n        [\r\n            2,\r\n            9,\r\n            16,\r\n            23\r\n        ]\r\n    ],\r\n    [\r\n        7,\r\n        [\r\n            2,\r\n            3,\r\n            4,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        8,\r\n        [\r\n            2,\r\n            10,\r\n            18,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        9,\r\n        [\r\n            3,\r\n            10,\r\n            17,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        10,\r\n        [\r\n            3,\r\n            4,\r\n            5,\r\n            6\r\n        ]\r\n    ],\r\n    [\r\n        11,\r\n        [\r\n            3,\r\n            11,\r\n            19,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        12,\r\n        [\r\n            4,\r\n            11,\r\n            18,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        13,\r\n        [\r\n            5,\r\n            12,\r\n            19,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        14,\r\n        [\r\n            6,\r\n            13,\r\n            20,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        15,\r\n        [\r\n            7,\r\n            14,\r\n            21,\r\n            28\r\n        ]\r\n    ],\r\n    [\r\n        16,\r\n        [\r\n            7,\r\n            8,\r\n            9,\r\n            10\r\n        ]\r\n    ],\r\n    [\r\n        17,\r\n        [\r\n            7,\r\n            15,\r\n            23,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        18,\r\n        [\r\n            8,\r\n            15,\r\n            22,\r\n            29\r\n        ]\r\n    ],\r\n    [\r\n        19,\r\n        [\r\n            8,\r\n            9,\r\n            10,\r\n            11\r\n        ]\r\n    ],\r\n    [\r\n        20,\r\n        [\r\n            8,\r\n            16,\r\n            24,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        21,\r\n        [\r\n            9,\r\n            16,\r\n            23,\r\n            30\r\n        ]\r\n    ],\r\n    [\r\n        22,\r\n        [\r\n            9,\r\n            10,\r\n            11,\r\n            12\r\n        ]\r\n    ],\r\n    [\r\n        23,\r\n        [\r\n            9,\r\n            17,\r\n            25,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        24,\r\n        [\r\n            10,\r\n            17,\r\n            24,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        25,\r\n        [\r\n            10,\r\n            11,\r\n            12,\r\n            13\r\n        ]\r\n    ],\r\n    [\r\n        26,\r\n        [\r\n            10,\r\n            18,\r\n            26,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        27,\r\n        [\r\n            11,\r\n            18,\r\n            25,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        28,\r\n        [\r\n            12,\r\n            19,\r\n            26,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        29,\r\n        [\r\n            13,\r\n            20,\r\n            27,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        30,\r\n        [\r\n            14,\r\n            21,\r\n            28,\r\n            35\r\n        ]\r\n    ],\r\n    [\r\n        31,\r\n        [\r\n            14,\r\n            15,\r\n            16,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        32,\r\n        [\r\n            14,\r\n            22,\r\n            30,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        33,\r\n        [\r\n            15,\r\n            22,\r\n            29,\r\n            36\r\n        ]\r\n    ],\r\n    [\r\n        34,\r\n        [\r\n            15,\r\n            16,\r\n            17,\r\n            18\r\n        ]\r\n    ],\r\n    [\r\n        35,\r\n        [\r\n            15,\r\n            23,\r\n            31,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        36,\r\n        [\r\n            16,\r\n            23,\r\n            30,\r\n            37\r\n        ]\r\n    ],\r\n    [\r\n        37,\r\n        [\r\n            16,\r\n            17,\r\n            18,\r\n            19\r\n        ]\r\n    ],\r\n    [\r\n        38,\r\n        [\r\n            16,\r\n            24,\r\n            32,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        39,\r\n        [\r\n            17,\r\n            24,\r\n            31,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        40,\r\n        [\r\n            17,\r\n            18,\r\n            19,\r\n            20\r\n        ]\r\n    ],\r\n    [\r\n        41,\r\n        [\r\n            17,\r\n            25,\r\n            33,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        42,\r\n        [\r\n            18,\r\n            25,\r\n            32,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        43,\r\n        [\r\n            19,\r\n            26,\r\n            33,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        44,\r\n        [\r\n            20,\r\n            27,\r\n            34,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        45,\r\n        [\r\n            21,\r\n            22,\r\n            23,\r\n            24\r\n        ]\r\n    ],\r\n    [\r\n        46,\r\n        [\r\n            21,\r\n            15,\r\n            9,\r\n            3\r\n        ]\r\n    ],\r\n    [\r\n        47,\r\n        [\r\n            22,\r\n            23,\r\n            24,\r\n            25\r\n        ]\r\n    ],\r\n    [\r\n        48,\r\n        [\r\n            22,\r\n            16,\r\n            10,\r\n            4\r\n        ]\r\n    ],\r\n    [\r\n        49,\r\n        [\r\n            23,\r\n            24,\r\n            25,\r\n            26\r\n        ]\r\n    ],\r\n    [\r\n        50,\r\n        [\r\n            23,\r\n            17,\r\n            11,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        51,\r\n        [\r\n            24,\r\n            25,\r\n            26,\r\n            27\r\n        ]\r\n    ],\r\n    [\r\n        52,\r\n        [\r\n            24,\r\n            18,\r\n            12,\r\n            6\r\n        ]\r\n    ],\r\n    [\r\n        53,\r\n        [\r\n            28,\r\n            29,\r\n            30,\r\n            31\r\n        ]\r\n    ],\r\n    [\r\n        54,\r\n        [\r\n            28,\r\n            22,\r\n            16,\r\n            10\r\n        ]\r\n    ],\r\n    [\r\n        55,\r\n        [\r\n            29,\r\n            30,\r\n            31,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        56,\r\n        [\r\n            29,\r\n            23,\r\n            17,\r\n            11\r\n        ]\r\n    ],\r\n    [\r\n        57,\r\n        [\r\n            30,\r\n            31,\r\n            32,\r\n            33\r\n        ]\r\n    ],\r\n    [\r\n        58,\r\n        [\r\n            30,\r\n            24,\r\n            18,\r\n            12\r\n        ]\r\n    ],\r\n    [\r\n        59,\r\n        [\r\n            31,\r\n            32,\r\n            33,\r\n            34\r\n        ]\r\n    ],\r\n    [\r\n        60,\r\n        [\r\n            31,\r\n            25,\r\n            19,\r\n            13\r\n        ]\r\n    ],\r\n    [\r\n        61,\r\n        [\r\n            35,\r\n            36,\r\n            37,\r\n            38\r\n        ]\r\n    ],\r\n    [\r\n        62,\r\n        [\r\n            35,\r\n            29,\r\n            23,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        63,\r\n        [\r\n            36,\r\n            37,\r\n            38,\r\n            39\r\n        ]\r\n    ],\r\n    [\r\n        64,\r\n        [\r\n            36,\r\n            30,\r\n            24,\r\n            18\r\n        ]\r\n    ],\r\n    [\r\n        65,\r\n        [\r\n            37,\r\n            38,\r\n            39,\r\n            40\r\n        ]\r\n    ],\r\n    [\r\n        66,\r\n        [\r\n            37,\r\n            31,\r\n            25,\r\n            19\r\n        ]\r\n    ],\r\n    [\r\n        67,\r\n        [\r\n            38,\r\n            39,\r\n            40,\r\n            41\r\n        ]\r\n    ],\r\n    [\r\n        68,\r\n        [\r\n            38,\r\n            32,\r\n            26,\r\n            20\r\n        ]\r\n    ]\r\n]\r\nexport const lineToCellsMap = new Map(lineToCellsArray)\r\n\r\nconst cellToLinesArray = [\r\n    [\r\n        0,\r\n        [\r\n            0,\r\n            1,\r\n            2\r\n        ]\r\n    ],\r\n    [\r\n        1,\r\n        [\r\n            1,\r\n            3,\r\n            4,\r\n            5\r\n        ]\r\n    ],\r\n    [\r\n        2,\r\n        [\r\n            1,\r\n            4,\r\n            6,\r\n            7,\r\n            8\r\n        ]\r\n    ],\r\n    [\r\n        3,\r\n        [\r\n            1,\r\n            4,\r\n            7,\r\n            9,\r\n            10,\r\n            11,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        4,\r\n        [\r\n            4,\r\n            7,\r\n            10,\r\n            12,\r\n            48\r\n        ]\r\n    ],\r\n    [\r\n        5,\r\n        [\r\n            7,\r\n            10,\r\n            13,\r\n            50\r\n        ]\r\n    ],\r\n    [\r\n        6,\r\n        [\r\n            10,\r\n            14,\r\n            52\r\n        ]\r\n    ],\r\n    [\r\n        7,\r\n        [\r\n            0,\r\n            15,\r\n            16,\r\n            17\r\n        ]\r\n    ],\r\n    [\r\n        8,\r\n        [\r\n            2,\r\n            3,\r\n            16,\r\n            18,\r\n            19,\r\n            20\r\n        ]\r\n    ],\r\n    [\r\n        9,\r\n        [\r\n            5,\r\n            6,\r\n            16,\r\n            19,\r\n            21,\r\n            22,\r\n            23,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        10,\r\n        [\r\n            8,\r\n            9,\r\n            16,\r\n            19,\r\n            22,\r\n            24,\r\n            25,\r\n            26,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        11,\r\n        [\r\n            11,\r\n            12,\r\n            19,\r\n            22,\r\n            25,\r\n            27,\r\n            50,\r\n            56\r\n        ]\r\n    ],\r\n    [\r\n        12,\r\n        [\r\n            13,\r\n            22,\r\n            25,\r\n            28,\r\n            52,\r\n            58\r\n        ]\r\n    ],\r\n    [\r\n        13,\r\n        [\r\n            14,\r\n            25,\r\n            29,\r\n            60\r\n        ]\r\n    ],\r\n    [\r\n        14,\r\n        [\r\n            0,\r\n            15,\r\n            30,\r\n            31,\r\n            32\r\n        ]\r\n    ],\r\n    [\r\n        15,\r\n        [\r\n            3,\r\n            17,\r\n            18,\r\n            31,\r\n            33,\r\n            34,\r\n            35,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        16,\r\n        [\r\n            2,\r\n            6,\r\n            20,\r\n            21,\r\n            31,\r\n            34,\r\n            36,\r\n            37,\r\n            38,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        17,\r\n        [\r\n            5,\r\n            9,\r\n            23,\r\n            24,\r\n            31,\r\n            34,\r\n            37,\r\n            39,\r\n            40,\r\n            41,\r\n            50,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        18,\r\n        [\r\n            8,\r\n            12,\r\n            26,\r\n            27,\r\n            34,\r\n            37,\r\n            40,\r\n            42,\r\n            52,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        19,\r\n        [\r\n            11,\r\n            13,\r\n            28,\r\n            37,\r\n            40,\r\n            43,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        20,\r\n        [\r\n            14,\r\n            29,\r\n            40,\r\n            44,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        21,\r\n        [\r\n            0,\r\n            15,\r\n            30,\r\n            45,\r\n            46\r\n        ]\r\n    ],\r\n    [\r\n        22,\r\n        [\r\n            3,\r\n            18,\r\n            32,\r\n            33,\r\n            45,\r\n            47,\r\n            48,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        23,\r\n        [\r\n            6,\r\n            17,\r\n            21,\r\n            35,\r\n            36,\r\n            45,\r\n            47,\r\n            49,\r\n            50,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        24,\r\n        [\r\n            2,\r\n            9,\r\n            20,\r\n            24,\r\n            38,\r\n            39,\r\n            45,\r\n            47,\r\n            49,\r\n            51,\r\n            52,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        25,\r\n        [\r\n            5,\r\n            12,\r\n            23,\r\n            27,\r\n            41,\r\n            42,\r\n            47,\r\n            49,\r\n            51,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        26,\r\n        [\r\n            8,\r\n            13,\r\n            26,\r\n            28,\r\n            43,\r\n            49,\r\n            51,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        27,\r\n        [\r\n            11,\r\n            14,\r\n            29,\r\n            44,\r\n            51\r\n        ]\r\n    ],\r\n    [\r\n        28,\r\n        [\r\n            15,\r\n            30,\r\n            53,\r\n            54\r\n        ]\r\n    ],\r\n    [\r\n        29,\r\n        [\r\n            18,\r\n            33,\r\n            53,\r\n            55,\r\n            56,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        30,\r\n        [\r\n            21,\r\n            32,\r\n            36,\r\n            53,\r\n            55,\r\n            57,\r\n            58,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        31,\r\n        [\r\n            17,\r\n            24,\r\n            35,\r\n            39,\r\n            53,\r\n            55,\r\n            57,\r\n            59,\r\n            60,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        32,\r\n        [\r\n            20,\r\n            27,\r\n            38,\r\n            42,\r\n            55,\r\n            57,\r\n            59,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        33,\r\n        [\r\n            23,\r\n            28,\r\n            41,\r\n            43,\r\n            57,\r\n            59\r\n        ]\r\n    ],\r\n    [\r\n        34,\r\n        [\r\n            26,\r\n            29,\r\n            44,\r\n            59\r\n        ]\r\n    ],\r\n    [\r\n        35,\r\n        [\r\n            30,\r\n            61,\r\n            62\r\n        ]\r\n    ],\r\n    [\r\n        36,\r\n        [\r\n            33,\r\n            61,\r\n            63,\r\n            64\r\n        ]\r\n    ],\r\n    [\r\n        37,\r\n        [\r\n            36,\r\n            61,\r\n            63,\r\n            65,\r\n            66\r\n        ]\r\n    ],\r\n    [\r\n        38,\r\n        [\r\n            32,\r\n            39,\r\n            61,\r\n            63,\r\n            65,\r\n            67,\r\n            68\r\n        ]\r\n    ],\r\n    [\r\n        39,\r\n        [\r\n            35,\r\n            42,\r\n            63,\r\n            65,\r\n            67\r\n        ]\r\n    ],\r\n    [\r\n        40,\r\n        [\r\n            38,\r\n            43,\r\n            65,\r\n            67\r\n        ]\r\n    ],\r\n    [\r\n        41,\r\n        [\r\n            41,\r\n            44,\r\n            67\r\n        ]\r\n    ]\r\n]\r\nexport const cellToLinesMap = new Map(cellToLinesArray)\r\n\r\n\r\nexport const numberOfLines = lineToCellsMap.size\r\n\r\n// These were used once in development and do not need to be run again. It is easier on the client device to just send the copied in hard coded Maps\r\n// export const lineToCellsMap = generateLineToCellsMap()\r\n// export const numberOfLines = lineToCellsMap.size\r\n// function generateLineToCellsMap() {\r\n//     console.warn(`generateLineToCellsMap was called.  This compute heavy function should only run once per game.`)\r\n//     let map = new Map()\r\n//     let currentLineId = 0\r\n//     for (let cell = 0; cell < totalCells; cell++) {\r\n//         if (isStartOfVerticalLine(cell)) {\r\n//             let line = verticalLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//         if (isStartOfHorizontalLine(cell)) {\r\n//             let line = horizontalLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//         if (isStartOfUpslashLine(cell)) {\r\n//             let line = upslashLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//         if (isStartOfDownslashLine(cell)) {\r\n//             let line = downslashLineByStartCell(cell)\r\n//             map.set(currentLineId++, line)\r\n//         }\r\n//     }\r\n//     console.log(`Mapped each of the ${map.size} LineIds to the set of Cells in it.`)\r\n//     console.log([...map.entries()])\r\n//     return map\r\n// }\r\n// function verticalLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId + (0 * cellsPerRow),\r\n//         cellId + (1 * cellsPerRow),\r\n//         cellId + (2 * cellsPerRow),\r\n//         cellId + (3 * cellsPerRow)\r\n//     ]\r\n//     return line\r\n// }\r\n// function horizontalLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId + 0,\r\n//         cellId + 1,\r\n//         cellId + 2,\r\n//         cellId + 3\r\n//     ]\r\n//     return line\r\n// }\r\n// function upslashLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId + (0 * cellsPerRow) + 0,\r\n//         cellId + (1 * cellsPerRow) + 1,\r\n//         cellId + (2 * cellsPerRow) + 2,\r\n//         cellId + (3 * cellsPerRow) + 3\r\n//     ]\r\n//     return line\r\n// }\r\n// function downslashLineByStartCell(cellId) {\r\n//     let line = [\r\n//         cellId - (0 * cellsPerRow) + 0,\r\n//         cellId - (1 * cellsPerRow) + 1,\r\n//         cellId - (2 * cellsPerRow) + 2,\r\n//         cellId - (3 * cellsPerRow) + 3\r\n//     ]\r\n//     return line\r\n// }\r\n\r\n\r\n// export const cellToLinesMap = generateCellToLinesMap()\r\n\r\n// function generateCellToLinesMap() {\r\n//     console.warn(`cellToLinesMap was called.  This is a compute heavy function which should run once per game.`)\r\n//     let cellToLinesMap = new Map()\r\n//     for (let cell = 0; cell < totalCells; cell++) {\r\n//         cellToLinesMap.set(cell, [])\r\n//     }\r\n//     for (let lineId = 0; lineId < numberOfLines; lineId++) {\r\n//         let cellsInLine = lineToCellsMap.get(lineId)\r\n//         cellsInLine.forEach(cell => {\r\n//             let prevLinesList = cellToLinesMap.get(cell)\r\n//             cellToLinesMap.set(cell, prevLinesList.concat(lineId))\r\n//         })\r\n//     }\r\n//     console.log(`Mapped each of the ${totalCells} CellIds to the set of all Lines that include it.`)\r\n//     console.log([...cellToLinesMap.entries()])\r\n\r\n//     // cellsToLinesMap.forEach(logMapElement);\r\n//     return cellToLinesMap\r\n// }\r\n\r\n// FIRST level BOOLEAN LINE helpers             // Currently there is only a Cell.js functional Component, however if I defined a Cell Class I would think that I could turn these functions that take cellId as a parameter and turn them into something that 'reads better' like Cell.isStartOfVerticalLine() written on the Cell object so that it has built in access to the relevant cellId and can be used in a no-parameter fashion. ??? \r\n// function isStartOfVerticalLine(cellId) {\r\n//     const rowNumber = getRowByCellId(cellId)\r\n//     return (cellsPerCol - rowNumber >= 4)\r\n// }\r\n// function isEndOfVerticalLine(cellId) {\r\n//     const rowNumber = getRowByCellId(cellId)\r\n//     return (rowNumber >= 3)\r\n// }\r\n// function isStartOfHorizontalLine(cellId) {\r\n//     // If we are in the 0-th row then the minimum cellsPerCol that should return true is 4\r\n//     const colNumber = getColByCellId(cellId)\r\n//     return (cellsPerRow - colNumber >= 4)\r\n// }\r\n// function isStartOfUpslashLine(cellId) {\r\n//     // A cell is the Start Of an Upslash Line IFF it is BOTH the \"start\" of a vertical line AND the \"start\" of a horizontal line.  \r\n//     return (isStartOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\r\n// }\r\n// function isStartOfDownslashLine(cellId) {\r\n//     // A cell is the Start Of an Downslash Line IFF it is BOTH the \"end\" of a vertical line AND the \"start\" of a horizontal line.  \r\n//     return (isEndOfVerticalLine(cellId) && isStartOfHorizontalLine(cellId));\r\n// }\r\n\r\n// LOWEST LEVEL CELL-ROW-COL HELPERS\r\n// function getRowByCellId(id) {\r\n//     return (Math.floor(id / cellsPerRow))\r\n// }\r\n// function getColByCellId(id) {\r\n//     return (id % cellsPerRow)\r\n// }\r\n// function getCellIdByRowCol(row, col) {\r\n//     return (row * cellsPerRow + col);\r\n// }\r\n\r\n","// MY Logical components\r\nimport { lineToCellsMap, cellToLinesMap } from './winningLineMaps'\r\n\r\n\r\nexport function gameIsOver(gameStatus) {\r\n    return (gameStatus === 'playerOneWins' || gameStatus === 'playerTwoWins' || gameStatus === 'gameDrawn')\r\n}\r\n\r\n// This function could be made more efficient through using sorted arrays and pointers that \r\n// enabled us to not re-scan the leading portion of setTwo when we know we are looking for a \r\n// higher number it only makes sense to look in higher indices. Besides that, early returns \r\n// could be added in case the lowest or highest numbers in setOne fall outside the range of \r\n// setTwo. This intersect is being made with setOne.length === 4 (cells in line) and a \r\n// potentially much longer setTwo (player's numbers)\r\nexport function intersect(setOne, setTwo) {\r\n    return setOne.filter(item => setTwo.includes(item))\r\n}\r\n\r\nexport function playerOnesMoves(moveList) {\r\n    return moveList.filter((cell, turn) => turn % 2 === 0).filter(cell => cell !== -1)\r\n}\r\nexport function playerTwosMoves(moveList) {\r\n    return moveList.filter((cell, turn) => turn % 2 === 1).filter(cell => cell !== -1)\r\n}\r\n\r\nexport function getBoardData(moveList) {\r\n    let data = new Array(42).fill(\"unclaimed\")\r\n    moveList.forEach((move, turn) => {\r\n        if (move !== -1) {\r\n            let player = turn % 2 === 0 ? \"playerOne\" : \"playerTwo\"\r\n            data[move] = player\r\n        }\r\n    })\r\n    return data\r\n}\r\n// const boardData = getBoardData(moveList)  I don't like that getColumnData is called 7 times and each time it calls getBoardData rather than caching this result and reusing it, updating it automatically only when the moveList updates. useEffect could help?\r\nexport function getColumnData(columnIndex, moveList) {\r\n    let boardData = getBoardData(moveList)\r\n    return boardData.filter((claimStatus, cellId) => cellId % 7 === columnIndex)\r\n}\r\n\r\n\r\nexport function nextPlayer(gameStatus) {\r\n    if (gameIsOver(gameStatus)) {\r\n        console.error(`Do not call nextPlayer() when the game is over.`);\r\n    }\r\n    return (gameStatus === \"playerOnesTurn\") ? \"playerOne\" : \"playerTwo\"\r\n} \r\nexport function nextPlayersMoves(gameStatus, moveList) {\r\n    if (gameIsOver(gameStatus)) {\r\n        console.error(`Do not call nextPlayersMoves() when the game is over.`);\r\n    }\r\n    return (gameStatus === \"playerOnesTurn\") ? playerOnesMoves(moveList) : playerTwosMoves(moveList)\r\n}\r\nexport function nextPlayerColor(gameStatus) {\r\n    return gameIsOver(gameStatus) ? \"unclaimed\" : (gameStatus === \"playerOnesTurn\") ? \"playerOne\" : \"playerTwo\"\r\n}\r\n// function getNextPlayersMoves() {\r\n//     if (gameStatus === \"playerOnesTurn\") {\r\n//         return playerOnesMoves(moveList)\r\n//     }\r\n//     else if (gameStatus === \"playerTwosTurn\") {\r\n//         return playerTwosMoves(moveList)\r\n//     }\r\n//     else {\r\n//         console.warn(`getNextPlayersMoves was called but the game is already over`);\r\n//         return []\r\n//     }\r\n// }\r\n\r\n\r\nfunction getLastChipDropped(moveList) {\r\n    let ml = moveList.slice()\r\n    let lastCellId\r\n    do {\r\n        lastCellId = ml.pop()\r\n    } while (lastCellId === -1)\r\n    return lastCellId\r\n}\r\n\r\n// Returns ENUM: 'playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw'\r\n// This function efficiently checks to see if the last move created a win for the player who made it.\r\nexport function getGameStatus(moveList) {\r\n    let lastPlayerToMove = (moveList.length % 2 === 1) ? \"playerOne\" : \"playerTwo\"\r\n    let lastPlayersMoves = (lastPlayerToMove === \"playerOne\") ? playerOnesMoves(moveList) : playerTwosMoves(moveList)\r\n    let lastMoveMade = Number(lastPlayersMoves.slice(-1))\r\n    let linesAffectedByLastMove = cellToLinesMap.get(lastMoveMade)\r\n    for (let i = 0; i < linesAffectedByLastMove.length; i++) {\r\n        let line = linesAffectedByLastMove[i]\r\n        let cellsInLine = lineToCellsMap.get(line)\r\n        // For added efficiency I could at this point remove the lastMoveMade from cells in line and in the next line look for intersections of length 3.\r\n        if (intersect(cellsInLine, lastPlayersMoves).length === 4) {\r\n            return (lastPlayerToMove === 'playerOne') ? 'playerOneWins' : 'playerTwoWins'\r\n        }\r\n    }\r\n    let nonSkippedTurns = moveList.filter(cellId => cellId !== -1)\r\n    if (nonSkippedTurns.length >= 42) {\r\n        return 'gameOverDraw'\r\n    }\r\n    else {\r\n        return (moveList.length % 2 === 0) ? 'playerOnesTurn' : 'playerTwosTurn'\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Logic\r\nimport { gameIsOver, nextPlayerColor } from '../logic/connectFourLogic'\r\n\r\n// MUI  components\r\nimport { Box, Container, Slide, Typography, Zoom } from '@material-ui/core'\r\n\r\n// Style & Layout Constants\r\nconst oneSixth = '16.666%'\r\nconst squarePercentage = '14.287%'\r\nconst rowHeightPercentage = '16.665%'\r\nconst columnWidthPercentage = '14.280%'\r\nconst headerHeightPercentage = columnWidthPercentage\r\nconst heightOfSixSquares = '85.714%'\r\n\r\nconst chipSizeRelativeToSquare = '84%'\r\n\r\nlet rowNumbers = [0, 1, 2, 3, 4, 5]\r\nlet columnNumbers = [0, 1, 2, 3, 4, 5, 6]\r\n\r\nexport function GameBoard(props) {\r\n    const { moveList, handleColumnClick, gameStatus } = props\r\n\r\n    function getColumnChipColors(columnIndex) {\r\n        let chipColors = boardChipColors().filter((player, cellId) => cellId % 7 === columnIndex)\r\n        // console.log(`CHIP COLORS for Column ${columnIndex}: ${chipColors}`)\r\n        return chipColors\r\n    }\r\n    function boardChipColors() {\r\n        let chipColors = new Array(42).fill('unclaimed')\r\n        moveList.forEach((cellId, turnNumber) => {\r\n            if (cellId !== -1) {              // -1 in moveList indicates a turn skipped due to wrong answer to math question\r\n                let player = (turnNumber % 2 === 0) ? \"playerOne\" : \"playerTwo\"  // Player One's moves are at Even indices in the moveList\r\n                chipColors[cellId] = player\r\n            }\r\n        })\r\n        // console.log(`Board Data: ${chipColors}`)\r\n        return chipColors\r\n    }\r\n    \r\n    return (\r\n        <Container id=\"gameBoard\"\r\n            disableGutters\r\n            sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                height: '95%',\r\n                width: '95%',\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-end'\r\n            }}\r\n        >\r\n            <InfoHeaderRow gameStatus={gameStatus} />  \r\n            {columnNumbers.map((columnIndex) => {\r\n                let chipColors = getColumnChipColors(columnIndex)\r\n                return (\r\n                    <Column \r\n                        key={columnIndex}\r\n                        index={columnIndex}\r\n                        chipColors={chipColors}\r\n                        gameStatus={gameStatus}\r\n                        nextPlayerColor={nextPlayerColor(gameStatus)}\r\n                        handleColumnClick={handleColumnClick}\r\n                    />\r\n                )\r\n            })}\r\n            <RoundedBoardFrame />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction InfoHeaderRow(props) {\r\n    let { gameStatus } = props\r\n    let gameOver = gameIsOver(gameStatus)\r\n    let message = \"\"\r\n    if (gameOver) {\r\n        message = (gameStatus === \"playerOneWins\" ? \"Player One Wins!\" : \"Player Two Wins!\")\r\n    }\r\n    \r\n    return (\r\n        <Box id='infoHeaderRow'\r\n            sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: headerHeightPercentage,\r\n                zIndex: 15,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            <Zoom in={message !== \"\"} style={{ transitionDelay: '300ms' }} >\r\n                <Typography variant='h2' align='center' >\r\n                    {message}\r\n                </Typography>\r\n            </Zoom>\r\n            \r\n            \r\n        </Box>\r\n    )\r\n}\r\nfunction RoundedBoardFrame(props) {\r\n    return (\r\n        <Box id='roundedGameBorder'\r\n            sx={{\r\n                boxSizing: 'content-box',\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                left: '-9px',\r\n                width: 'calc(100% - 2px)',\r\n                height: heightOfSixSquares,\r\n                border: \"10px solid\",\r\n                borderColor: \"board.main\",\r\n                borderRadius: \"10px\",\r\n                borderTop: 0\r\n            }}\r\n        />\r\n    )\r\n}\r\nfunction Column(props) {\r\n    const { index, chipColors, gameStatus, nextPlayerColor, handleColumnClick } = props\r\n    let columnLetter = ''\r\n    if (!gameIsOver(gameStatus)) {\r\n        switch (index) {\r\n            case 0:\r\n                columnLetter = 'A'\r\n                break;\r\n            case 1:\r\n                columnLetter = 'B'\r\n                break;\r\n            case 2:\r\n                columnLetter = 'C'\r\n                break;\r\n            case 3:\r\n                columnLetter = 'D'\r\n                break;\r\n            case 4:\r\n                columnLetter = 'E'\r\n                break;\r\n            case 5:\r\n                columnLetter = 'F'\r\n                break;\r\n            case 6:\r\n                columnLetter = 'G'\r\n                break;\r\n            default:\r\n                columnLetter = 'error'\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <Box id=\"column\" \r\n            // ref={hoverRef} \r\n            onClick={() => handleColumnClick(index)}\r\n            sx={{\r\n                position: 'relative',\r\n                width: squarePercentage,\r\n                height: '100%',\r\n                zIndex: 9,\r\n                '&:hover #hoverChip': {\r\n                    backgroundColor: `chip.${nextPlayerColor}`,\r\n                },\r\n            }}\r\n        >\r\n            <HoverChipArea columnLetter={columnLetter} />\r\n            <ChipContainer chipColors={chipColors} />\r\n            <ColumnOfSquaresWithHoles />\r\n        </Box>\r\n    );\r\n}\r\nColumn.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    nextPlayerColor: PropTypes.oneOf(['playerOne', 'playerTwo', 'unclaimed']),\r\n    handleColumnClick: PropTypes.func,\r\n}\r\n\r\nfunction Chip(props) {\r\n    const { color } = props\r\n    let claimed = (color !== \"unclaimed\")\r\n    let bgcolor = `chip.${color}`\r\n    return (\r\n        <Slide in={claimed} \r\n            direction=\"down\"\r\n            // easing=\"easing.parabolicAcceleration\"\r\n            // easing={{ enter: 'transitions.easing.easeOut', exit: 'transitions.easing.sharp' }}\r\n        >\r\n            <Box id=\"transparentSquareFrame\"\r\n                sx={{\r\n                    width: '100%',\r\n                    height: rowHeightPercentage,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Box id=\"chip\"\r\n                    sx={{\r\n                        borderRadius: '50%',\r\n                        zIndex: 'chip',\r\n                        bgcolor: bgcolor,\r\n                        width: chipSizeRelativeToSquare,\r\n                        height: chipSizeRelativeToSquare,\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Slide>\r\n\r\n    )\r\n}\r\nChip.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    color: PropTypes.oneOf(['playerOne', 'playerTwo', 'unclaimed']),\r\n}\r\n\r\nfunction HoverChipArea(props) {\r\n    return (\r\n        <Box id=\"hoverChipContainer\"\r\n            sx={{\r\n                // border: 'solid red 1px',\r\n                width: '100%',\r\n                height: squarePercentage,\r\n                zIndex: 8,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}\r\n        >\r\n            <Box id=\"hoverChip\"\r\n                sx={{\r\n                    bgcolor: 'background',\r\n                    width: chipSizeRelativeToSquare,\r\n                    height: chipSizeRelativeToSquare,\r\n                    borderRadius: '50%',\r\n                    zIndex: 8,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-end',\r\n                    fontSize: '2rem'\r\n                }}\r\n            >\r\n                {props.columnLetter}  \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nfunction ChipContainer(props) {\r\n    return (\r\n        <Box id=\"chipContainer\"\r\n            sx={{\r\n                width: '100%',\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                bgcolor: 'transparent',\r\n                height: heightOfSixSquares,\r\n                zIndex: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column-reverse',\r\n            }}\r\n        >\r\n            {props.chipColors.map((color, index) => {\r\n                return <Chip\r\n                    key={index}\r\n                    id={index}\r\n                    color={color}\r\n                // transition={false}\r\n                />\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\nfunction ColumnOfSquaresWithHoles(props) {\r\n    function SquareWithHole(props) {\r\n        return (\r\n            <Box id=\"squareWithHole\"\r\n                key={props.index}\r\n                sx={{\r\n                    overflow: 'hidden',\r\n                    width: '100%',\r\n                    height: oneSixth,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    boxShadow: '0px 1px 1px 1px #0039cb',\r\n                }}\r\n            >\r\n                <Box id=\"hole\"\r\n                    sx={{\r\n                        boxShadow: \"0 0 0 99px #0039cb\",\r\n                        borderRadius: '50%',\r\n                        bgcolor: 'transparent',\r\n                        width: chipSizeRelativeToSquare,\r\n                        height: chipSizeRelativeToSquare,\r\n                    }}\r\n                />\r\n            </Box>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Box id=\"columnOfSquares\"\r\n            sx={{\r\n                position: 'absolute',\r\n                top: squarePercentage,\r\n                bgcolor: 'transparent',\r\n                width: '100%',\r\n                height: heightOfSixSquares,\r\n                zIndex: 'board',\r\n                display: 'flex',\r\n                flexDirection: 'column-reverse',\r\n            }}\r\n        >\r\n            {rowNumbers.map((item, index) => {\r\n                return (<SquareWithHole key={index} />)\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\n// MUI  components\r\nimport { Box, Button, Dialog, Zoom, Typography, FormControl, InputLabel, OutlinedInput } from '@material-ui/core'\r\n\r\n// Style & Layout Constants\r\nconst instructionsHeight = \"33%\"\r\nconst equationHeight = \"32%\"\r\nconst inputHeight = \"35%\"\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Zoom ref={ref} {...props} />;\r\n})\r\n\r\nexport function MathQuestionModal(props) {\r\n    let { question, \r\n        open,\r\n        headerText,\r\n        nextPlayerColor,\r\n        handleAnswerSubmit, \r\n        boardSideLength } = props \r\n    \r\n    let { correctAnswer, equationString, inputType } = question\r\n    let borderColor = `chip.${nextPlayerColor}`\r\n\r\n    return (\r\n        <Dialog \r\n            // keepMounted\r\n            disableEscapeKeyDown\r\n            open={open}\r\n            onBackdropClick={() => {}}  // disable close on bg click\r\n            aria-describedby=\"math-question-dialog\"\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth='md'\r\n            PaperProps={{\r\n                sx: {\r\n                    // border: `solid ${nextPlayerColor(gameStatus)} 5px`,\r\n                    border: `solid green 0.5rem`,\r\n                    // border: `solid ${borderColor} 5px`,\r\n                    borderColor: borderColor,\r\n                    margin: `${0.05 * boardSideLength}px`,\r\n                    height: `${0.9 * boardSideLength}px`,\r\n                    width: `${0.9 * boardSideLength}px`,\r\n                    borderRadius: '50%',\r\n                    justifySelf: 'flex-start',\r\n                    alignSelf: 'flex-start'\r\n\r\n                }\r\n            }}\r\n        >\r\n            <HeaderText headerText={headerText} />\r\n            <QuestionEquation equationString={equationString} />\r\n            <AnswerInputComponent \r\n                inputType={inputType}\r\n                correctAnswer={correctAnswer}\r\n                handleAnswerSubmit={handleAnswerSubmit}\r\n            />\r\n        </Dialog>\r\n    )\r\n    \r\n    function HeaderText(props) {\r\n        return (\r\n            <Typography id=\"Instructions\"\r\n                variant='h3'\r\n                sx={{\r\n                    height: instructionsHeight,\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexFlow: 'row wrap',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-end',\r\n                }}\r\n            >\r\n                {props.headerText}\r\n            </Typography>\r\n        )\r\n    }\r\n    function QuestionEquation(props) {\r\n        const { equationString } = props\r\n        const fontStyle = (equationString.length > 12) ? 'h2' : 'h1'\r\n\r\n        return (\r\n            <Typography variant={fontStyle} \r\n                sx={{\r\n                    width: '100%',\r\n                    height: equationHeight,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    overflow: 'visible',\r\n                }}\r\n            >\r\n                {equationString}\r\n            </Typography>\r\n        )\r\n    }\r\n    function AnswerInputComponent(props) {\r\n        const { inputType, correctAnswer, handleAnswerSubmit } = props\r\n\r\n        const [playersAnswer, setPlayersAnswer] = useState(\"\")\r\n        const answerIsNum = /^\\d+$/.test(playersAnswer)\r\n        const error = (playersAnswer.length > 0 && !answerIsNum)\r\n\r\n        const handlePlayersAnswerChange = (event) => {\r\n            let updatedAnswer = event.target.value.trim()\r\n            setPlayersAnswer(updatedAnswer)\r\n        }\r\n\r\n        if (inputType === \"textField\") {\r\n            return (\r\n                <NumericalTextInput\r\n                    error={error}\r\n                    handleSubmitButtonClick={() => handleAnswerSubmit(playersAnswer)}\r\n                />\r\n            )\r\n        }\r\n        else if (inputType === \"compareButtons\") {\r\n            return (\r\n                <CompareButtons \r\n                    // handleSubmitButtonClick={() => handleAnswerSubmit(playersAnswer)}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            console.error(`getInputComponent failed. Invalid inputType: ${inputType}`)\r\n        }\r\n\r\n        function NumericalTextInput(props) {\r\n            const { error, handleSubmitButtonClick } = props\r\n\r\n            return (\r\n                <Box sx={{\r\n                    height: inputHeight,\r\n                    width: '100%',\r\n                    padding: '0 20%',\r\n                }}>\r\n                    <FormControl \r\n                        id=\"answer-input-form\"\r\n                        color=\"primary\"\r\n                        error={error}\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexFlow: 'row nowrap',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'flex-start',\r\n                        }}\r\n                    >\r\n                        <InputLabel>{(error === false) ? \"Your Answer\" : \"Enter a whole number\"}</InputLabel>\r\n                        <OutlinedInput\r\n                            label={(error === false) ? \"Your Answer\" : \"Enter a whole number\"}\r\n                            value={playersAnswer}\r\n                            id=\"answer-input\"\r\n                            fullWidth\r\n                            size=\"medium\"\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            // type=\"number\"\r\n                            type=\"tel\"\r\n                            // pattern=\"\\d*\"\r\n                            pattern='[0-9]*'\r\n                            onChange={handlePlayersAnswerChange}\r\n                            inputProps={{ \r\n                                style: { fontSize: '2rem', height: '2rem' }\r\n                            }}\r\n                            sx={{ width: '62%' }}\r\n                            onKeyDown={(event) => {\r\n                                if (event.key === \"Enter\") {\r\n                                    handleSubmitButtonClick()\r\n                                }\r\n                            }}\r\n                        />\r\n                        <SubmitButton\r\n                            disabled={error}\r\n                            playersAnswer={playersAnswer}\r\n                            correctAnswer={correctAnswer}\r\n                            handleSubmitButtonClick={handleSubmitButtonClick}\r\n                        />\r\n                    </FormControl>\r\n                </Box>\r\n            )\r\n        }\r\n        function SubmitButton(props) {\r\n            const { handleSubmitButtonClick } = props\r\n            return (\r\n                <Button\r\n                    onClick={handleSubmitButtonClick}\r\n                    variant='contained'\r\n                    // size=\"large\"\r\n                    sx={{ \r\n                        ml: 1, \r\n                        px: 2.5,\r\n                        lineHeight: '3rem',\r\n                        width: '42%'\r\n                    }}\r\n                    children=\"Submit\"\r\n                />\r\n            )\r\n        }\r\n\r\n        function CompareButtons(props) {\r\n            // let { handleSubmitButtonClick } = props\r\n\r\n            return (\r\n                <Box \r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                >\r\n                    <Button />\r\n                    <Button />\r\n                    <Button />\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\n\r\nexport function chooseRandomFromArray(array) {\r\n    let randomIndex = randomInt(0, array.length)\r\n    let choice = array[randomIndex]\r\n    // console.log(`CHOICE: ${choice}`);\r\n    return choice\r\n}\r\n\r\nexport function randomInt(min, max) { //The maximum is exclusive and the minimum is inclusive\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n\r\n// ADD a method to pick \"randomly\" from weighted distributions/\r\n// based on an array of tuples.","// Exports helper for when questionGenerator has selected the \"combining\" topic\r\nimport { randomInt, chooseRandomFromArray } from \"../lowLevelHelpers\";\r\n\r\nconst missingMinuendInstructions = [\r\n    \"Minus how many?\",\r\n    \"Take away what?\",\r\n    \"How far apart?\",\r\n]\r\nconst howFarApart = [\r\n    \"How far apart?\"\r\n]\r\n\r\nexport function getCombiningQuestion(difficulty) {\r\n    console.assert((difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\"), `getCombiningQuestion recieved invalid difficulty ${difficulty}` )\r\n    console.log(`Generating Combining Question of difficulty \"${difficulty}\"`)\r\n    if (difficulty === \"easy\") {\r\n        return easyCombiningQuestion()\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        return mediumCombiningQuestion()\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        return hardCombiningQuestion()\r\n    }\r\n}\r\n\r\nfunction easyCombiningQuestion() {\r\n    let types = [\r\n        missingSumTwo,\r\n        missingSumThree,\r\n        missingDifference,\r\n        missingAddendTwo,\r\n        // double,\r\n        // howFarApart,        // a and b\r\n    ]\r\n    return chooseRandomFromArray(types)(\"easy\") \r\n}\r\nfunction mediumCombiningQuestion() {\r\n    let types = [\r\n        missingSumTwo,\r\n        missingSumThree,\r\n        missingDifference,\r\n        missingAddendTwo,\r\n        // triple,\r\n        // combineAndCompare,   // a + b _ c - d\r\n        // missingMinuend,     // a - _ = c\r\n        // howFarApart,        // a and b\r\n    ]\r\n    return chooseRandomFromArray(types)(\"medium\") \r\n}\r\nfunction hardCombiningQuestion() {\r\n    let types = [\r\n        missingSumTwo,\r\n        missingSumThree,\r\n        missingDifference,\r\n        missingAddendTwo,\r\n        // quadruple,\r\n        // combineAndCompare,   // a + b _ c - d\r\n        // missingMinuend,     // a - _ = c\r\n        // howFarApart,        // a and b\r\n    ]\r\n    return chooseRandomFromArray(types)(\"hard\") \r\n}\r\n\r\n\r\nconst missingSumInstructions = [\r\n    \"Add\",\r\n    \"What's the Sum?\",\r\n    \"Find the Total\"\r\n]\r\nfunction missingSumTwo(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(5,75)\r\n        vars.b = randomInt(5,75)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(40, 160)\r\n        vars.b = randomInt(40, 160)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(100, 1000)\r\n        vars.b = randomInt(100, 1000)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    return {\r\n        type: \"missingSumTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} + ${vars.b} = __`,\r\n        instructions: chooseRandomFromArray(missingSumInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\nfunction missingSumThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(5, 25)\r\n        vars.b = randomInt(5, 25)\r\n        vars.c = randomInt(5, 25)\r\n        vars.d = vars.a + vars.b + vars.c\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(20, 100)\r\n        vars.c = randomInt(20, 100)\r\n        vars.d = vars.a + vars.b + vars.c\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(100, 333)\r\n        vars.b = randomInt(100, 333)\r\n        vars.c = randomInt(100, 333)\r\n        vars.d = vars.a + vars.b + vars.c\r\n        \r\n    }\r\n    return {\r\n        type: \"missingSumThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.d,\r\n        equationString: `${vars.a} + ${vars.b} + ${vars.c} = __`,\r\n        instructions: chooseRandomFromArray(missingSumInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction missingDifference(difficulty) {\r\n    const instructions = [\r\n        \"Subtract\",\r\n        \"Find the Difference\",\r\n        \"How much is left?\"\r\n    ]\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(20, 80)\r\n        vars.b = randomInt(5, 20)\r\n        vars.c = vars.a - vars.b\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(100, 300)\r\n        vars.b = randomInt(20, 100)\r\n        vars.c = vars.a - vars.b\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(200, 1000)\r\n        vars.b = randomInt(50, 200)\r\n        vars.c = vars.a - vars.b\r\n    }\r\n    return {\r\n        type: \"missingDifference\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} - ${vars.b} = __`,\r\n        instructions: chooseRandomFromArray(instructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\nconst missingAddendInstructions = [\r\n    \"What's missing?\",\r\n    \"How many more?\"\r\n]\r\nfunction missingAddendTwo(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(20, 80)\r\n        vars.b = randomInt(5, 25)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(50, 300)\r\n        vars.b = randomInt(50, 100)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(200, 1000)\r\n        vars.b = randomInt(200, 500)\r\n        vars.c = vars.a + vars.b\r\n    }\r\n    return {\r\n        type: \"missingAddendTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.a} + __ = ${vars.c}`,\r\n        instructions: chooseRandomFromArray(missingAddendInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingAddendThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(2, 20)\r\n        vars.b = randomInt(2, 20)\r\n        vars.c = randomInt(2, 20)\r\n        vars.d = vars.a + vars.b + vars.c\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(20, 100)\r\n        vars.c = randomInt(20, 100)\r\n        vars.d = vars.a + vars.b + vars.c\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(50, 300)\r\n        vars.b = randomInt(50, 300)\r\n        vars.c = randomInt(50, 300)\r\n        vars.d = vars.a + vars.b + vars.c\r\n    }\r\n    return {\r\n        type: \"missingAddendThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} + ${vars.b} + __ = ${vars.d}`,\r\n        instructions: chooseRandomFromArray(missingAddendInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n\r\n}\r\n\r\n\r\n","// Exports helpers for when questionGenerator has selected the \"multiplying\" topic\r\nimport { randomInt, chooseRandomFromArray } from \"../lowLevelHelpers\";\r\n\r\n\r\nexport function getMultiplyingQuestion(difficulty) {\r\n    console.assert((difficulty === \"easy\" || difficulty === \"medium\" || difficulty === \"hard\"), `getMultiplyingQuestion recieved invalid difficulty ${difficulty}`)\r\n    console.log(`Generating Multiplying Question of difficulty \"${difficulty}\"`)\r\n    if (difficulty === \"easy\") {\r\n        return easyMultiplyingQuestion()\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        return mediumMultiplyingQuestion()\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        return hardMultiplyingQuestion()\r\n    }\r\n}\r\nfunction easyMultiplyingQuestion() {\r\n    let types = [\r\n        missingProductTwo,\r\n        missingProductThree,\r\n        missingFactorTwo,\r\n        missingFactorThree,\r\n        doubleTripleQuadruple,\r\n\r\n    ]\r\n    return chooseRandomFromArray(types)(\"easy\")\r\n}\r\nfunction mediumMultiplyingQuestion() {\r\n    let types = [\r\n        missingProductTwo,\r\n        missingProductThree,\r\n        // missingFactorTwo,\r\n        // missingFactorThree,\r\n    ]\r\n    return chooseRandomFromArray(types)(\"medium\")\r\n}\r\nfunction hardMultiplyingQuestion() {\r\n    let types = [\r\n        missingProductTwo,\r\n        missingProductThree,\r\n        // missingFactorTwo,\r\n        // missingFactorThree,\r\n    ]\r\n    return chooseRandomFromArray(types)(\"hard\")\r\n}\r\n\r\n\r\nconst easyFactor = () => chooseRandomFromArray([4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90])\r\n\r\n// DOUBLE TRIPLE QUADRUPLE\r\nfunction doubleTripleQuadruple(difficulty) { \r\n    console.assert((difficulty === \"easy\"), `DOUBLE TRIPLE QUADRUPLE called in multiply with difficulty other than \"easy\"` )\r\n    let type = chooseRandomFromArray([\"double\", \"triple\", \"quadruple\"])\r\n    let vars = {}\r\n    let instructions\r\n\r\n    if (type === \"double\") {\r\n        vars.a = randomInt(50, 150)\r\n        vars.b = vars.a * 2\r\n        instructions = chooseRandomFromArray([\"Double\", \"Times Two\"])\r\n    }\r\n    else if (type === \"triple\") {\r\n        vars.a = randomInt(25, 100)\r\n        vars.b = vars.a * 3\r\n        instructions = chooseRandomFromArray([\"Triple\"])\r\n    }\r\n    else if (type === \"quadruple\") {\r\n        vars.a = randomInt(21, 66)\r\n        vars.b = vars.a * 4\r\n        instructions = chooseRandomFromArray([\"Quadruple\", \"Double Double\"])\r\n    }\r\n    return {\r\n        type: \"missingProductTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.a}`,\r\n        instructions: instructions,\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n// MISSING PRODUCT\r\nconst missingProductInstructions = [\r\n    \"Multiply\",\r\n    \"Find the Product\",\r\n]\r\nfunction missingProductTwo(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = easyFactor()\r\n        vars.b = randomInt(2, 11)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(5, 26)\r\n        vars.b = randomInt(5, 26)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(11, 100)\r\n        vars.b = randomInt(11, 100)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    return {\r\n        type: \"missingProductTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} x ${vars.b} = __`,\r\n        instructions: chooseRandomFromArray(missingProductInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingProductThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(2, 6)\r\n        vars.b = randomInt(2, 6)\r\n        vars.c = randomInt(2, 11)\r\n        vars.d = vars.a * vars.b * vars.c\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(2, 11)\r\n        vars.b = randomInt(2, 11)\r\n        vars.c = randomInt(2, 11)\r\n        vars.d = vars.a * vars.b * vars.c\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(2, 26)\r\n        vars.b = randomInt(2, 16)\r\n        vars.c = randomInt(2, 11)\r\n        vars.d = vars.a * vars.b * vars.c\r\n    }\r\n    return {\r\n        type: \"missingProductThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.d,\r\n        equationString: `${vars.a} x ${vars.b} x ${vars.c} = __`,\r\n        instructions: chooseRandomFromArray(missingProductInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\n// MISSING FACTOR\r\n\r\nconst missingFactorInstructions = [\r\n    \"What's missing?\",\r\n    \"Times what?\"\r\n]\r\nfunction missingFactorTwo(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(3, 16)\r\n        vars.b = randomInt(2, 11)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(5, 31)\r\n        vars.b = randomInt(5, 16)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(11, 26)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    return {\r\n        type: \"missingFactorTwo\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.a} x __ = ${vars.c}`,\r\n        instructions: chooseRandomFromArray(missingFactorInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction missingFactorThree(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(2, 6)\r\n        vars.b = randomInt(2, 6)\r\n        vars.c = randomInt(2, 11)\r\n        vars.d = vars.a * vars.b * vars.c\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(3, 11)\r\n        vars.b = randomInt(3, 11)\r\n        vars.c = randomInt(3, 11)\r\n        vars.d = vars.a * vars.b * vars.c\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(4, 26)\r\n        vars.b = randomInt(4, 11)\r\n        vars.c = randomInt(4, 16)\r\n        vars.d = vars.a * vars.b * vars.c\r\n    }\r\n    return {\r\n        type: \"missingFactorThree\",\r\n        vars: vars,\r\n        correctAnswer: vars.c,\r\n        equationString: `${vars.a} x ${vars.b} x __ = ${vars.d}`,\r\n        instructions: chooseRandomFromArray(missingFactorInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\n// MISSING DIVIDEND\r\n\r\n\r\n// MISSING DIVISOR\r\nconst missingDivisorInstructions = [\r\n    \"Find the Divisor\",\r\n    \"Divide by what?\"\r\n]\r\nfunction missingDivisor(difficulty) {\r\n    let vars = {}\r\n    if (difficulty === \"easy\") {\r\n        vars.a = randomInt(3, 16)\r\n        vars.b = randomInt(2, 11)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    else if (difficulty === \"medium\") {\r\n        vars.a = randomInt(5, 31)\r\n        vars.b = randomInt(5, 16)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    else if (difficulty === \"hard\") {\r\n        vars.a = randomInt(20, 100)\r\n        vars.b = randomInt(11, 26)\r\n        vars.c = vars.a * vars.b\r\n    }\r\n    return {\r\n        type: \"missingDivisor\",\r\n        vars: vars,\r\n        correctAnswer: vars.b,\r\n        equationString: `${vars.c} ÷ __ = ${vars.a}`,\r\n        instructions: chooseRandomFromArray(missingDivisorInstructions),\r\n        inputType: \"textField\",\r\n    }\r\n}\r\n\r\n\r\n// MISSING QUOTIENT\r\n\r\n","import { randomInt, chooseRandomFromArray } from \"../lowLevelHelpers\";\r\nimport { getCombiningQuestion } from \"./combiningGenerator\";\r\nimport { getMultiplyingQuestion } from \"./multiplyingGenerator\";\r\n// import { getFractionsQuestion } from \"./fractionsGenerator\";\r\n\r\n\r\nexport function testQuestion() {\r\n    let vars = [1, 2, 3, 6]\r\n    return {\r\n        type: \"missingSumThree\",\r\n        vars: vars,\r\n        correctAnswer: vars[3],\r\n        equationString: `${vars[0]} + ${vars[1]} + ${vars[2]} = __`,\r\n        instructions: \"Test Question\",\r\n        inputType: \"textField\",\r\n    }\r\n}\r\nfunction determineDifficulty(score) {\r\n    console.log(`determineDifficulty called with ${score} `);\r\n    if (score < 8) {\r\n        return \"easy\"\r\n    }\r\n    else if (score < 16) {\r\n        return \"medium\"\r\n    }\r\n    else if (score >= 16) {\r\n        return \"hard\"\r\n    }\r\n    else {\r\n        console.error(`Invalid number of question right so far: ${score}`);\r\n        return \"error\"\r\n    }\r\n}\r\n\r\n\r\nexport function generateQuestion(mathTopics, score) {\r\n    // ERROR mathTopics is not actually used.  A filter needs to be written to remove \r\n    // generatorFuntions from questionTopics\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        const difficulty = determineDifficulty(score)\r\n        const questionTopics = [\r\n            getCombiningQuestion,\r\n            getMultiplyingQuestion,\r\n            // getFractionsQuestion,\r\n            // getExponentsQuestion,\r\n            // getAlgebraQuestion,\r\n            // getDTQQuestion,\r\n        ]\r\n        let randomIndex = randomInt(0, questionTopics.length)\r\n        resolve (questionTopics[randomIndex](difficulty))\r\n        // let question = questionGeneratorFuntions[randomIndex](difficulty)\r\n        // console.log(`Generated an \"${difficulty}\" ${topic} Question --> ${JSON.stringify(question, null, 4)}`);\r\n        // resolve(question)\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nfunction getExponentsQuestion(difficulty) {\r\n\r\n}\r\nfunction getAlgebraQuestion(difficulty) {\r\n\r\n}\r\n\r\nfunction getEquationString(type, vars) {\r\n    let questionTypeToEquationStringMap = new Map([\r\n        [\"missingProductTwo\", `${vars[0]} x ${vars[1]} = __}`],\r\n        [\"missingFactorTwo\", `${vars[0]} x __ = ${vars[2]}`],\r\n        [\"completeMultiplication\", `${vars[0]} x ${vars[1]} = ${vars[2]} x __`],\r\n        [\"compareFractions\", \"FRACTIONS NOT BUILT YET\"],\r\n        [\"compareSums\", `${vars[0]} + ${vars[1]} __ ${vars[2]} + ${vars[3]}`],\r\n        [\"divisibility\", \"divisibilityCheckboxes NOT BUILT YET\"],\r\n    ])\r\n    if (questionTypeToEquationStringMap.has(type)) {\r\n        console.log(`Equation String: ${questionTypeToEquationStringMap.get(type)}`);\r\n        return questionTypeToEquationStringMap.get(type)\r\n    }\r\n    else {\r\n        console.error(`Failed to getEquationString with type: \"${type}\" and vars: \"${vars}\"`)\r\n    }\r\n}\r\n\r\nfunction getInputType(type) {\r\n    let questionTypeToInputTypeMap = new Map([\r\n        [\"missingSumTwo\", \"textField\"],\r\n        [\"missingSumThree\", \"textField\"],\r\n        [\"missingAddendTwo\", \"textField\"],\r\n        [\"missingAddendThree\", \"textField\"],\r\n        [\"missingProductTwo\", \"textField\"],\r\n        [\"missingFactorTwo\", \"textField\"],\r\n        [\"completeMultiplication\", \"textField\"],\r\n        [\"compareFractions\", \"compareButtons\"],\r\n        [\"compareSums\", \"compareButtons\"],\r\n        [\"divisibility\", \"divisibilityCheckboxes\"],\r\n    ])\r\n    if (questionTypeToInputTypeMap.has(type)) {\r\n        // console.log(`Input Type: ${questionTypeToInputTypeMap.get(type)}`);\r\n        return questionTypeToInputTypeMap.get(type)\r\n    }\r\n    else {\r\n        console.error(`Failed to getInputType with type: \"${type}\"`)\r\n    }\r\n}\r\n\r\nfunction getCorrectAnswer(type, vars) {\r\n    if (vars === undefined) {\r\n        console.error(`Correct Answer called with no Vars.`);\r\n        return -1\r\n    }\r\n    let questionTypeToCorrectAnswerMap = new Map([\r\n        [\"missingSumTwo\", vars[vars.length - 1]],\r\n        [\"missingSumThree\", vars[vars.length - 1]],\r\n        [\"missingAddendTwo\", vars[1]],\r\n        [\"missingAddendThree\", vars[1]],\r\n        [\"missingProductTwo\", vars[vars.length - 1]],\r\n        [\"missingFactorTwo\", vars[1]],\r\n        [\"completeMultiplication\", vars[3]],\r\n        [\"compareFractions\", \"compareButtons\"],\r\n        [\"compareSums\", \"compareButtons\"],\r\n        [\"divisibility\", \"divisibilityCheckboxes\"]\r\n    ])\r\n    if (questionTypeToCorrectAnswerMap.has(type)) {\r\n        const correctAnswer = questionTypeToCorrectAnswerMap.get(type)\r\n        console.log(`Correct Answer: ${correctAnswer}`);\r\n        return correctAnswer\r\n    }\r\n    else {\r\n        console.error(`Failed to getCorrectAnswer with type: \"${type}\" and vars: \"${vars}\"`)\r\n    }\r\n}\r\n\r\nfunction getInstructions(type) {\r\n    let questionTypeToInstructionsMap = new Map([\r\n        [\"double\", chooseRandomFromArray([\"Double it!\", \"Add it to itself\"])],\r\n        [\"triple\", chooseRandomFromArray([\"Triple it!\", \"Three of them\"])],\r\n        [\"quadruple\", chooseRandomFromArray([\"Quadruple it!\", \"Double double it!\"])],\r\n        [\"half\", chooseRandomFromArray([\"Half it!\", \"Add it to itself\"])],\r\n        [\"third\", chooseRandomFromArray([\"What's a third of\", \"Cut in three\"])],\r\n        [\"quarter\", chooseRandomFromArray([\"Quarter it!\", \"Half half it!\", \"What's a fourth of\"])],\r\n\r\n        [\"missingProductTwo\", chooseRandomFromArray([\"Find the Product.\", \"Multiply.\"])],\r\n        [\"missingFactorTwo\", chooseRandomFromArray([\"What's missing?\", \"How many groups?\"])],\r\n        [\"completeMultiplication\", chooseRandomFromArray([\"Find that factor!\", \"How many copies?\"])],\r\n        [\"compareFractions\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\r\n        [\"compareSums\", chooseRandomFromArray([\"Which is more?\", \"Compare\", \"Which is greater?\"])],\r\n        [\"divisibility\", chooseRandomFromArray([\"Is divisible by...\", \"Is a multiple of...\"])],\r\n    ])\r\n    if (questionTypeToInstructionsMap.has(type)) {\r\n        const instructions = questionTypeToInstructionsMap.get(type)\r\n        console.log(`Instructions for Question type \"${type}\"--> \"${instructions}\"`);\r\n        return instructions\r\n    }\r\n    else {\r\n        console.error(`Failed to getInstructions with type: \"${type}\"`)\r\n    }\r\n}","import {\r\n    createTheme,\r\n    responsiveFontSizes,\r\n} from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#669944',\r\n            main: '#2e6b12',\r\n            dark: '#004000',  // Color applied on Button Hover\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        secondary: {\r\n            light: '#FFFFF',\r\n            // main: 'rgba(46, 107, 18, 0.8)',  // washed out shade of primary.main\r\n            main: '#78ba59',\r\n            dark: '#004000',  // Color applied on Button Hover\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        text: {\r\n            primary: 'rgba(0, 0, 0, 0.87)',\r\n            secondary: 'rgba(0, 0, 0, 0.54)',\r\n            disabled: 'rgba(0, 0, 0, 0.38)',\r\n            hint: 'rgba(0, 0, 0, 0.38)',\r\n        },\r\n        action: {\r\n            disabledBackground: '#2e6b12',\r\n            disabledOpacity: '0.5'\r\n        },\r\n        board: {\r\n            light: '#2962ff',\r\n            main: '#0039cb',\r\n            dark: '#001399',\r\n        },\r\n        chip: {\r\n            playerOne: '#d50000',  // red\r\n            playerTwo: '#ffea00',  // yellow\r\n            unclaimed: '#b3e5fc',  // light blue\r\n        },\r\n        background: '#b3e5fc',\r\n        white: '#FFFFFF',\r\n        transparent: 'rgba(0, 0, 0, 0)',\r\n        selectedButton: 'rgba(46, 107, 18, 1.0)',     // Same as primary.main\r\n        unselectedButton: 'rgba(46, 107, 18, 0.65)',\r\n    },\r\n    components: {\r\n        MuiPaper: {\r\n            styleOverrides: {  // Name of the slot\r\n                root: {        // Some CSS\r\n                    backgroundColor: '#fff',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    typography: {\r\n        button: {\r\n            fontSize: '1.0rem',\r\n            fontWeight: '700'\r\n        }\r\n    },\r\n    status: {\r\n       \r\n    },\r\n    shape: {\r\n        borderRadius: 8,\r\n    },\r\n    spacing: 8,\r\n    transitions: {\r\n        easing: {\r\n            bounce: \"cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\r\n            parabolicAcceleration: \"cubic-bezier(0.5, 0.0, 1.0, 0.5)\"\r\n        }\r\n    },\r\n    zIndex: {\r\n        chip: 10,\r\n        board: 20\r\n    }\r\n\r\n});\r\n\r\nexport default responsiveFontSizes(theme, {factor: 2})\r\n// https://mui.com/customization/theming/#responsivefontsizes-theme-options-theme","import React from 'react'\r\n\r\n// PAGES\r\n// import WelcomePage from \"./pages/Welcome\"\r\n// import SettingsPage from \"./pages/Settings\"\r\n// import PlayPage from \"./pages/Play\"\r\n// import InfoPage from \"./pages/Info\"\r\n// MY components\r\nimport { InGameMenu } from \"./modals/Menu\";\r\nimport { GameBoard } from \"./pages/GameBoard\";\r\nimport { MathQuestionModal } from \"./modals/MathQuestionModal\";\r\n// import { GameSettingsModal } from \"./components/GameSettingsModal\";\r\n\r\n// Game Logic\r\nimport { gameIsOver, \r\n    getColumnData, \r\n    getGameStatus, \r\n    nextPlayersMoves, \r\n    nextPlayerColor } from './logic/connectFourLogic'\r\nimport { testQuestion, generateQuestion } from './logic/questionGenerators/questionGenerator'\r\nimport { chooseRandomFromArray } from './logic/lowLevelHelpers';\r\n\r\n// Custom Hooks\r\nimport { useScreenWidth, useScreenHeight } from \"./hooks\"\r\n\r\n// MUI  components\r\nimport { CssBaseline, Box } from '@material-ui/core'\r\n\r\n// THEME\r\nimport theme from \"./theme\"\r\nimport { ThemeProvider, } from '@material-ui/core/styles'\r\n\r\nexport default function App() {\r\n    // GAME SETTINGS\r\n    const [opponent, setOpponent] = React.useState(\"human\")\r\n    // const [mathTopics, setMathTopics] = React.useState([\"combining\", \"multiplying\"])  // An array of all types player wants\r\n    const [mathTopics, setMathTopics] = React.useState([\"multiplying\"])  // An array of all types player wants\r\n\r\n    // GAME STATE\r\n    const [moveList, setMoveList] = React.useState([])  // An Array of integers ranging -1 thru 41 of indeterminate length\r\n    const [gameStatus, setGameStatus] = React.useState('playerOnesTurn')  // Enum ['playerOnesTurn', 'playerTwosTurn', 'playerOneWins', 'playerTwoWins', 'gameOverDraw']\r\n    const [openModal, setOpenModal] = React.useState(\"none\") // Enum: \"none\", \"question\", \"abandonGame\", \"newGameSettings\", \r\n    const [activeCell, setActiveCell] = React.useState(null) \r\n\r\n    // QUESTION MODAL PROPS\r\n    const [question, setQuestion] = React.useState(testQuestion())\r\n    const [headerText, setHeaderText] = React.useState(\"\")\r\n    const waysToSayCorrect = [\r\n        \"Correct!\",\r\n        \"Right!\",\r\n        \"That's it!\",\r\n        \"Good job!\",\r\n        \"Very good!\"\r\n    ]\r\n\r\n    // LAYOUT\r\n    const height = useScreenHeight()\r\n    const width = useScreenWidth()\r\n    const boardSideLength = (height <= width) ? height : width\r\n\r\n    \r\n    ///////////////////////////////////////////////////////\r\n    // CLICK HANDLERS\r\n    ///////////////////////////////////////////////////////\r\n    function handleColumnClick(columnIndex) {\r\n        if (gameIsOver(gameStatus)) {\r\n            console.log(`handleColumnClick() had NO EFFECT since game is already over!`)\r\n            return \r\n        }\r\n        let columnData = getColumnData(columnIndex, moveList)\r\n        let lowestUnclaimedRow = columnData.indexOf(\"unclaimed\")\r\n        if (lowestUnclaimedRow === -1) {\r\n            console.log(`handleColumnClick() had NO EFFECT since column is full!`)\r\n            return\r\n        }\r\n        let lowestUnclaimedCell = lowestUnclaimedRow * 7 + columnIndex\r\n        openMathQuestionModal(lowestUnclaimedCell)\r\n    }\r\n\r\n    function openMathQuestionModal(activeCell) {\r\n        const score = nextPlayersMoves(gameStatus, moveList).length\r\n        \r\n        // My first Promise     \r\n        const newQuestion = generateQuestion(mathTopics, score).then(newQuestion => {\r\n            console.log(`Opening Modal with Question --> ${JSON.stringify(newQuestion, null, 4)}`);\r\n            setQuestion(newQuestion)\r\n            setHeaderText(newQuestion.instructions)\r\n            setOpenModal(\"question\")\r\n            setActiveCell(activeCell)\r\n        })\r\n    }\r\n    \r\n    function handleAnswerSubmit(playersAnswer) {\r\n        const answerIsCorrect = (Number(playersAnswer.trim()) === question.correctAnswer)\r\n        const answerFeedbackHeaderText = (answerIsCorrect ? chooseRandomFromArray(waysToSayCorrect) : `Nope. It was ${question.correctAnswer}.`)\r\n        setHeaderText(answerFeedbackHeaderText)\r\n         \r\n\r\n        let moveToAdd = (answerIsCorrect) ? activeCell : -1\r\n        let updatedMoveList = moveList.concat(moveToAdd)\r\n        let updatedGameStatus = getGameStatus(updatedMoveList)\r\n        console.log(`Adding ${moveToAdd} to the moveList. Game status: ${updatedGameStatus}`);\r\n        setTimeout(() => {\r\n            setOpenModal(\"none\")\r\n        }, 1500);\r\n        setTimeout(() => {\r\n            setMoveList(updatedMoveList)\r\n            setGameStatus(updatedGameStatus)\r\n            setActiveCell(null)\r\n        }, 1800)\r\n        \r\n        // if (opponent === \"bot\") {\r\n        //     console.error(`IT IS THE BOT'S TURN BUT GETBOTMOVE HAS NOT BEEN DEFINED`)\r\n        // }\r\n    }\r\n \r\n    function openAbandonGameModal() {\r\n        setOpenModal(\"abandonGame\")\r\n        \r\n    }\r\n    function openSettingsModal() {\r\n        setMoveList([])\r\n        setGameStatus('playerOnesTurn')\r\n        setOpenModal(\"newGameSettings\")\r\n    }\r\n    function handlePlayNowClick() {\r\n        setMoveList([])\r\n        setGameStatus('playerOnesTurn')\r\n        setOpenModal(\"question\")\r\n        setActiveCell(null)\r\n    }\r\n\r\n    function handleUndoClick() {\r\n        let shortenedMoveList = moveList.slice(0, -1)\r\n        setMoveList(shortenedMoveList)\r\n        setGameStatus(getGameStatus(shortenedMoveList))\r\n        setOpenModal(\"none\")\r\n    }\r\n\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <Box id='root'\r\n                    sx={{\r\n                        bgcolor: 'background',\r\n                        height: '100vh',\r\n                        width: '100vw',\r\n                        overflow: 'hidden',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                >\r\n                    {/* <WelcomePage /> */}\r\n                    {/* <PlayPage /> */}\r\n                    {/* <InfoPage /> */}\r\n                    <Box id='play-page' \r\n                        sx={{\r\n                            height:  boardSideLength,\r\n                            width:  boardSideLength,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            position: 'relative'\r\n                    }}>\r\n                        <InGameMenu\r\n                            handleNewGameClick={openAbandonGameModal}\r\n                            handleAbandonGameClick={openSettingsModal}\r\n                            handleUndoClick={handleUndoClick}\r\n                        />\r\n                        <MathQuestionModal\r\n                            nextPlayerColor={nextPlayerColor(gameStatus)}\r\n                            gameStatus={gameStatus}\r\n                            open={(openModal === \"question\")}\r\n                            question={question}\r\n                            headerText={headerText}\r\n                            handleAnswerSubmit={handleAnswerSubmit}\r\n                            boardSideLength={boardSideLength}\r\n                        />\r\n                        <GameBoard\r\n                            moveList={moveList}\r\n                            gameStatus={gameStatus}\r\n                            handleColumnClick={handleColumnClick}\r\n\r\n                        />\r\n                        \r\n                    </Box>\r\n                </Box>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}","import { useState, useEffect, useRef } from 'react'\r\n\r\n// Usage\r\n//\r\n// function App() {\r\n//     const [hoverRef, isHovered] = useHover();\r\n//     return <div ref={hoverRef}>{isHovered ? \"😁\" : \"☹️\"}</div>;\r\n// }\r\n// Hook\r\nexport function useHover() {\r\n    const [value, setValue] = useState(false);\r\n    const ref = useRef(null);\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n    useEffect(\r\n        () => {\r\n            const node = ref.current;\r\n            if (node) {\r\n                node.addEventListener(\"mouseover\", handleMouseOver);\r\n                node.addEventListener(\"mouseout\", handleMouseOut);\r\n                return () => {\r\n                    node.removeEventListener(\"mouseover\", handleMouseOver);\r\n                    node.removeEventListener(\"mouseout\", handleMouseOut);\r\n                };\r\n            }\r\n        },\r\n        // [ref.current] // Recall only if ref changes\r\n    );\r\n    return [ref, value];\r\n}\r\n\r\nexport function useScreenHeight() {\r\n    const [screenHeight, setScreenHeight] = useState(window.innerHeight)\r\n\r\n    useEffect(() => {\r\n        const handleScreenSizeChange = () => setScreenHeight(window.innerHeight)\r\n        window.addEventListener('resize', handleScreenSizeChange)\r\n        return () => window.removeEventListener('resize', handleScreenSizeChange)\r\n    }, []);\r\n\r\n    return screenHeight;\r\n}\r\n\r\nexport function useScreenWidth() {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        const handleScreenSizeChange = () => setScreenWidth(window.innerWidth)\r\n        window.addEventListener('resize', handleScreenSizeChange)\r\n        return () => window.removeEventListener('resize', handleScreenSizeChange)\r\n    }, []);\r\n\r\n    return screenWidth;\r\n}\r\n\r\nexport function useScreenOrientation() {\r\n    const [orientation, setOrientation] = useState(window.screen.orientation.type)\r\n\r\n    useEffect(() => {\r\n        const handleOrientationChange = () => setOrientation(window.screen.orientation.type)\r\n        window.addEventListener('orientationchange', handleOrientationChange)\r\n        return () => window.removeEventListener('orientationchange', handleOrientationChange)\r\n    }, []);\r\n\r\n    return orientation;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}